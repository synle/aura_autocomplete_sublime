{
  "scope": "text.xml, meta.tag.no-content.xml, punctuation.definition.tag.end.xml",
  "completions": [
    {
      "trigger": "aura-component-body\tAttr",
      "contents": "body=\"${1:aura:component - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "aura-debug-errorsData\tAttr",
      "contents": "errorsData=\"${1:aura:debug - Optional - String}\""
    },
    {
      "trigger": "aura-debug-warningsData\tAttr",
      "contents": "warningsData=\"${1:aura:debug - Optional - String}\""
    },
    {
      "trigger": "aura-debug-cmpData\tAttr",
      "contents": "cmpData=\"${1:aura:debug - Optional - String}\""
    },
    {
      "trigger": "aura-debug-eventData\tAttr",
      "contents": "eventData=\"${1:aura:debug - Optional - String}\""
    },
    {
      "trigger": "aura-debug-storageData\tAttr",
      "contents": "storageData=\"${1:aura:debug - Optional - String}\""
    },
    {
      "trigger": "aura-debug-consoleData\tAttr",
      "contents": "consoleData=\"${1:aura:debug - Optional - String}\""
    },
    {
      "trigger": "aura-debug-storageName\tAttr",
      "contents": "storageName=\"${1:aura:debug - Optional - String}\""
    },
    {
      "trigger": "aura-debug-accessibilityData\tAttr",
      "contents": "accessibilityData=\"${1:aura:debug - Optional - String}\""
    },
    {
      "trigger": "aura-embeddedTemplate-auraStyleTags\tAttr",
      "contents": "auraStyleTags=\"${1:aura:embeddedTemplate - Optional - String}\""
    },
    {
      "trigger": "aura-embeddedTemplate-auraScriptTags\tAttr",
      "contents": "auraScriptTags=\"${1:aura:embeddedTemplate - Optional - String}\""
    },
    {
      "trigger": "aura-embeddedTemplate-auraInit\tAttr",
      "contents": "auraInit=\"${1:aura:embeddedTemplate - Optional - String}\""
    },
    {
      "trigger": "aura-embeddedTemplate-auraInitBlock\tAttr",
      "contents": "auraInitBlock=\"${1:aura:embeddedTemplate - Optional - String}\""
    },
    {
      "trigger": "aura-embeddedTemplate-extraStyleTags\tAttr",
      "contents": "extraStyleTags=\"${1:aura:embeddedTemplate - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "aura-embeddedTemplate-extraScriptTags\tAttr",
      "contents": "extraScriptTags=\"${1:aura:embeddedTemplate - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "aura-embeddedTemplate-extraMetaTags\tAttr",
      "contents": "extraMetaTags=\"${1:aura:embeddedTemplate - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "aura-expression-value\tAttr",
      "contents": "value=\"${1:aura:expression - Optional - String}\""
    },
    {
      "trigger": "aura-html-body\tAttr",
      "contents": "body=\"${1:aura:html - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "aura-html-tag\tAttr",
      "contents": "tag=\"${1:aura:html - Optional - String}\""
    },
    {
      "trigger": "aura-html-HTMLAttributes\tAttr",
      "contents": "HTMLAttributes=\"${1:aura:html - Optional - Map}\""
    },
    {
      "trigger": "aura-if-isTrue\tAttr",
      "contents": "isTrue=\"${1:aura:if - Required - Boolean}\""
    },
    {
      "trigger": "aura-if-body\tAttr",
      "contents": "body=\"${1:aura:if - Required - Aura.ComponentDefRef[]}\""
    },
    {
      "trigger": "aura-if-else\tAttr",
      "contents": "else=\"${1:aura:if - Optional - Aura.ComponentDefRef[]}\""
    },
    {
      "trigger": "aura-if-template\tAttr",
      "contents": "template=\"${1:aura:if - Optional - Aura.ComponentDefRef[]}\""
    },
    {
      "trigger": "aura-include-name\tAttr",
      "contents": "name=\"${1:aura:include - Required - String}\""
    },
    {
      "trigger": "aura-include-imports\tAttr",
      "contents": "imports=\"${1:aura:include - Required - String}\""
    },
    {
      "trigger": "aura-integrationServiceTemplate-auraStyleTags\tAttr",
      "contents": "auraStyleTags=\"${1:aura:integrationServiceTemplate - Optional - String}\""
    },
    {
      "trigger": "aura-integrationServiceTemplate-auraScriptTags\tAttr",
      "contents": "auraScriptTags=\"${1:aura:integrationServiceTemplate - Optional - String}\""
    },
    {
      "trigger": "aura-integrationServiceTemplate-auraInit\tAttr",
      "contents": "auraInit=\"${1:aura:integrationServiceTemplate - Optional - String}\""
    },
    {
      "trigger": "aura-integrationServiceTemplate-auraInitBlock\tAttr",
      "contents": "auraInitBlock=\"${1:aura:integrationServiceTemplate - Optional - String}\""
    },
    {
      "trigger": "aura-integrationServiceTemplate-extraStyleTags\tAttr",
      "contents": "extraStyleTags=\"${1:aura:integrationServiceTemplate - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "aura-integrationServiceTemplate-extraScriptTags\tAttr",
      "contents": "extraScriptTags=\"${1:aura:integrationServiceTemplate - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "aura-integrationServiceTemplate-extraMetaTags\tAttr",
      "contents": "extraMetaTags=\"${1:aura:integrationServiceTemplate - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "aura-iteration-items\tAttr",
      "contents": "items=\"${1:aura:iteration - Required - List}\""
    },
    {
      "trigger": "aura-iteration-var\tAttr",
      "contents": "var=\"${1:aura:iteration - Required - String}\""
    },
    {
      "trigger": "aura-iteration-indexVar\tAttr",
      "contents": "indexVar=\"${1:aura:iteration - Optional - String}\""
    },
    {
      "trigger": "aura-iteration-start\tAttr",
      "contents": "start=\"${1:aura:iteration - Optional - Integer}\""
    },
    {
      "trigger": "aura-iteration-end\tAttr",
      "contents": "end=\"${1:aura:iteration - Optional - Integer}\""
    },
    {
      "trigger": "aura-iteration-loaded\tAttr",
      "contents": "loaded=\"${1:aura:iteration - Optional - Boolean}\""
    },
    {
      "trigger": "aura-iteration-body\tAttr",
      "contents": "body=\"${1:aura:iteration - Required - Aura.ComponentDefRef[]}\""
    },
    {
      "trigger": "aura-iteration-template\tAttr",
      "contents": "template=\"${1:aura:iteration - Optional - Aura.ComponentDefRef[]}\""
    },
    {
      "trigger": "aura-iteration-forceServer\tAttr",
      "contents": "forceServer=\"${1:aura:iteration - Optional - Boolean}\""
    },
    {
      "trigger": "aura-iteration-iterationComplete\tAttr",
      "contents": "iterationComplete=\"${1:aura:iteration - Optional - aura:operationComplete}\""
    },
    {
      "trigger": "aura-label-value\tAttr",
      "contents": "value=\"${1:aura:label - Optional - String}\""
    },
    {
      "trigger": "aura-placeholder-body\tAttr",
      "contents": "body=\"${1:aura:placeholder - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "aura-placeholder-refDescriptor\tAttr",
      "contents": "refDescriptor=\"${1:aura:placeholder - Optional - java://org.auraframework.def.DefDescriptor}\""
    },
    {
      "trigger": "aura-placeholder-attributes\tAttr",
      "contents": "attributes=\"${1:aura:placeholder - Optional - Object}\""
    },
    {
      "trigger": "aura-placeholder-loaded\tAttr",
      "contents": "loaded=\"${1:aura:placeholder - Optional - Boolean}\""
    },
    {
      "trigger": "aura-placeholder-exclusive\tAttr",
      "contents": "exclusive=\"${1:aura:placeholder - Optional - Boolean}\""
    },
    {
      "trigger": "aura-renderIf-isTrue\tAttr",
      "contents": "isTrue=\"${1:aura:renderIf - Required - Boolean}\""
    },
    {
      "trigger": "aura-renderIf-else\tAttr",
      "contents": "else=\"${1:aura:renderIf - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "aura-template-title\tAttr",
      "contents": "title=\"${1:aura:template - Optional - String}\""
    },
    {
      "trigger": "aura-template-auraStyleTags\tAttr",
      "contents": "auraStyleTags=\"${1:aura:template - Optional - String}\""
    },
    {
      "trigger": "aura-template-auraScriptTags\tAttr",
      "contents": "auraScriptTags=\"${1:aura:template - Optional - String}\""
    },
    {
      "trigger": "aura-template-auraBaseScriptTags\tAttr",
      "contents": "auraBaseScriptTags=\"${1:aura:template - Optional - String}\""
    },
    {
      "trigger": "aura-template-auraNamespacesScriptTags\tAttr",
      "contents": "auraNamespacesScriptTags=\"${1:aura:template - Optional - String}\""
    },
    {
      "trigger": "aura-template-auraResetStyle\tAttr",
      "contents": "auraResetStyle=\"${1:aura:template - Optional - String}\""
    },
    {
      "trigger": "aura-template-auraResetTags\tAttr",
      "contents": "auraResetTags=\"${1:aura:template - Optional - String}\""
    },
    {
      "trigger": "aura-template-auraInlineStyle\tAttr",
      "contents": "auraInlineStyle=\"${1:aura:template - Optional - String}\""
    },
    {
      "trigger": "aura-template-auraInit\tAttr",
      "contents": "auraInit=\"${1:aura:template - Optional - String}\""
    },
    {
      "trigger": "aura-template-auraInitSync\tAttr",
      "contents": "auraInitSync=\"${1:aura:template - Optional - String}\""
    },
    {
      "trigger": "aura-template-auraPreInitBlock\tAttr",
      "contents": "auraPreInitBlock=\"${1:aura:template - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "aura-template-auraInitBlock\tAttr",
      "contents": "auraInitBlock=\"${1:aura:template - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "aura-template-autoInitialize\tAttr",
      "contents": "autoInitialize=\"${1:aura:template - Optional - String}\""
    },
    {
      "trigger": "aura-template-autoInitializeSync\tAttr",
      "contents": "autoInitializeSync=\"${1:aura:template - Optional - String}\""
    },
    {
      "trigger": "aura-template-doctype\tAttr",
      "contents": "doctype=\"${1:aura:template - Optional - String}\""
    },
    {
      "trigger": "aura-template-loadingText\tAttr",
      "contents": "loadingText=\"${1:aura:template - Optional - String}\""
    },
    {
      "trigger": "aura-template-errorTitle\tAttr",
      "contents": "errorTitle=\"${1:aura:template - Optional - String}\""
    },
    {
      "trigger": "aura-template-errorMessage\tAttr",
      "contents": "errorMessage=\"${1:aura:template - Optional - String}\""
    },
    {
      "trigger": "aura-template-defaultBodyClass\tAttr",
      "contents": "defaultBodyClass=\"${1:aura:template - Optional - String}\""
    },
    {
      "trigger": "aura-template-bodyClass\tAttr",
      "contents": "bodyClass=\"${1:aura:template - Optional - String}\""
    },
    {
      "trigger": "aura-template-extraStyleTags\tAttr",
      "contents": "extraStyleTags=\"${1:aura:template - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "aura-template-extraScriptTags\tAttr",
      "contents": "extraScriptTags=\"${1:aura:template - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "aura-template-extraMetaTags\tAttr",
      "contents": "extraMetaTags=\"${1:aura:template - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "aura-template-forceError\tAttr",
      "contents": "forceError=\"${1:aura:template - Optional - Boolean}\""
    },
    {
      "trigger": "aura-template-manifest\tAttr",
      "contents": "manifest=\"${1:aura:template - Optional - String}\""
    },
    {
      "trigger": "aura-template-lastMod\tAttr",
      "contents": "lastMod=\"${1:aura:template - Optional - String}\""
    },
    {
      "trigger": "aura-template-afterAuraInit\tAttr",
      "contents": "afterAuraInit=\"${1:aura:template - Optional - String}\""
    },
    {
      "trigger": "aura-template-inlineStyle\tAttr",
      "contents": "inlineStyle=\"${1:aura:template - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "aura-template-appcacheProgressBarStyle\tAttr",
      "contents": "appcacheProgressBarStyle=\"${1:aura:template - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "aura-text-value\tAttr",
      "contents": "value=\"${1:aura:text - Optional - String}\""
    },
    {
      "trigger": "aura-text-truncate\tAttr",
      "contents": "truncate=\"${1:aura:text - Optional - Integer}\""
    },
    {
      "trigger": "aura-text-truncateByWord\tAttr",
      "contents": "truncateByWord=\"${1:aura:text - Optional - Boolean}\""
    },
    {
      "trigger": "aura-text-ellipsis\tAttr",
      "contents": "ellipsis=\"${1:aura:text - Optional - Boolean}\""
    },
    {
      "trigger": "aura-unescapedHtml-body\tAttr",
      "contents": "body=\"${1:aura:unescapedHtml - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "aura-unescapedHtml-value\tAttr",
      "contents": "value=\"${1:aura:unescapedHtml - Optional - String}\""
    },
    {
      "trigger": "auraStorage-crypto-debugLoggingEnabled\tAttr",
      "contents": "debugLoggingEnabled=\"${1:auraStorage:crypto - Optional - Boolean}\""
    },
    {
      "trigger": "auraStorage-crypto-requireQueryParam\tAttr",
      "contents": "requireQueryParam=\"${1:auraStorage:crypto - Optional - Boolean}\""
    },
    {
      "trigger": "auraStorage-fuelGauge-storageName\tAttr",
      "contents": "storageName=\"${1:auraStorage:fuelGauge - Required - String}\""
    },
    {
      "trigger": "auraStorage-fuelGauge-value\tAttr",
      "contents": "value=\"${1:auraStorage:fuelGauge - Optional - Decimal}\""
    },
    {
      "trigger": "auraStorage-fuelGauge-enabled\tAttr",
      "contents": "enabled=\"${1:auraStorage:fuelGauge - Optional - Boolean}\""
    },
    {
      "trigger": "auraStorage-init-name\tAttr",
      "contents": "name=\"${1:auraStorage:init - Required - String}\""
    },
    {
      "trigger": "auraStorage-init-persistent\tAttr",
      "contents": "persistent=\"${1:auraStorage:init - Optional - Boolean}\""
    },
    {
      "trigger": "auraStorage-init-secure\tAttr",
      "contents": "secure=\"${1:auraStorage:init - Optional - Boolean}\""
    },
    {
      "trigger": "auraStorage-init-clearStorageOnInit\tAttr",
      "contents": "clearStorageOnInit=\"${1:auraStorage:init - Optional - Boolean}\""
    },
    {
      "trigger": "auraStorage-init-defaultExpiration\tAttr",
      "contents": "defaultExpiration=\"${1:auraStorage:init - Optional - Integer}\""
    },
    {
      "trigger": "auraStorage-init-defaultAutoRefreshInterval\tAttr",
      "contents": "defaultAutoRefreshInterval=\"${1:auraStorage:init - Optional - Integer}\""
    },
    {
      "trigger": "auraStorage-init-maxSize\tAttr",
      "contents": "maxSize=\"${1:auraStorage:init - Optional - Integer}\""
    },
    {
      "trigger": "auraStorage-init-debugLoggingEnabled\tAttr",
      "contents": "debugLoggingEnabled=\"${1:auraStorage:init - Optional - Boolean}\""
    },
    {
      "trigger": "auraStorage-init-version\tAttr",
      "contents": "version=\"${1:auraStorage:init - Optional - String}\""
    },
    {
      "trigger": "auraadmin-cacheView-name\tAttr",
      "contents": "name=\"${1:auraadmin:cacheView - Required - String}\""
    },
    {
      "trigger": "auraadmin-cacheView-expanded\tAttr",
      "contents": "expanded=\"${1:auraadmin:cacheView - Optional - boolean}\""
    },
    {
      "trigger": "auraadmin-cacheView-showDefs\tAttr",
      "contents": "showDefs=\"${1:auraadmin:cacheView - Optional - boolean}\""
    },
    {
      "trigger": "auraadmin-cacheView-data\tAttr",
      "contents": "data=\"${1:auraadmin:cacheView - Required - Map}\""
    },
    {
      "trigger": "auraadmin-cachingRegistryView-expanded\tAttr",
      "contents": "expanded=\"${1:auraadmin:cachingRegistryView - Optional - boolean}\""
    },
    {
      "trigger": "auraadmin-counterBeans-beans\tAttr",
      "contents": "beans=\"${1:auraadmin:counterBeans - Optional - List}\""
    },
    {
      "trigger": "auraadmin-registryView-registry\tAttr",
      "contents": "registry=\"${1:auraadmin:registryView - Required - Map}\""
    },
    {
      "trigger": "auraadmin-registryView-buttons\tAttr",
      "contents": "buttons=\"${1:auraadmin:registryView - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "auradev-dependencyItem-descriptor\tAttr",
      "contents": "descriptor=\"${1:auradev:dependencyItem - Optional - String}\""
    },
    {
      "trigger": "auradev-dependencyItem-type\tAttr",
      "contents": "type=\"${1:auradev:dependencyItem - Optional - String}\""
    },
    {
      "trigger": "auradev-dependencyItem-uid\tAttr",
      "contents": "uid=\"${1:auradev:dependencyItem - Optional - String}\""
    },
    {
      "trigger": "auradev-dependencyItem-error\tAttr",
      "contents": "error=\"${1:auradev:dependencyItem - Optional - Boolean}\""
    },
    {
      "trigger": "auradev-lintc-name\tAttr",
      "contents": "name=\"${1:auradev:lintc - Optional - String}\""
    },
    {
      "trigger": "auradev-showDependencies-component\tAttr",
      "contents": "component=\"${1:auradev:showDependencies - Optional - String}\""
    },
    {
      "trigger": "auradocs-apiParam-symbol\tAttr",
      "contents": "symbol=\"${1:auradocs:apiParam - Optional - Object}\""
    },
    {
      "trigger": "auradocs-apiParams-params\tAttr",
      "contents": "params=\"${1:auradocs:apiParams - Optional - Object[]}\""
    },
    {
      "trigger": "auradocs-apiSymbol-symbol\tAttr",
      "contents": "symbol=\"${1:auradocs:apiSymbol - Optional - Object}\""
    },
    {
      "trigger": "auradocs-apiSymbols-title\tAttr",
      "contents": "title=\"${1:auradocs:apiSymbols - Optional - String}\""
    },
    {
      "trigger": "auradocs-apiSymbols-symbols\tAttr",
      "contents": "symbols=\"${1:auradocs:apiSymbols - Optional - Object[]}\""
    },
    {
      "trigger": "auradocs-contentsNode-text\tAttr",
      "contents": "text=\"${1:auradocs:contentsNode - Optional - String}\""
    },
    {
      "trigger": "auradocs-contentsNode-id\tAttr",
      "contents": "id=\"${1:auradocs:contentsNode - Optional - String}\""
    },
    {
      "trigger": "auradocs-contentsNode-class\tAttr",
      "contents": "class=\"${1:auradocs:contentsNode - Optional - String}\""
    },
    {
      "trigger": "auradocs-def-descriptor\tAttr",
      "contents": "descriptor=\"${1:auradocs:def - Required - String}\""
    },
    {
      "trigger": "auradocs-def-defType\tAttr",
      "contents": "defType=\"${1:auradocs:def - Optional - String}\""
    },
    {
      "trigger": "auradocs-defDependencies-descriptor\tAttr",
      "contents": "descriptor=\"${1:auradocs:defDependencies - Required - String}\""
    },
    {
      "trigger": "auradocs-defDependencies-defType\tAttr",
      "contents": "defType=\"${1:auradocs:defDependencies - Optional - String}\""
    },
    {
      "trigger": "auradocs-defDescription-descriptions\tAttr",
      "contents": "descriptions=\"${1:auradocs:defDescription - Optional - Object}\""
    },
    {
      "trigger": "auradocs-defLayout-title\tAttr",
      "contents": "title=\"${1:auradocs:defLayout - Optional - String}\""
    },
    {
      "trigger": "auradocs-defLayout-subtitle\tAttr",
      "contents": "subtitle=\"${1:auradocs:defLayout - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "auradocs-defLayout-description\tAttr",
      "contents": "description=\"${1:auradocs:defLayout - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "auradocs-defLayout-labels\tAttr",
      "contents": "labels=\"${1:auradocs:defLayout - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "auradocs-defLayout-status\tAttr",
      "contents": "status=\"${1:auradocs:defLayout - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "auradocs-defLink-descriptor\tAttr",
      "contents": "descriptor=\"${1:auradocs:defLink - Required - String}\""
    },
    {
      "trigger": "auradocs-defLink-defType\tAttr",
      "contents": "defType=\"${1:auradocs:defLink - Optional - String}\""
    },
    {
      "trigger": "auradocs-defMemberList-title\tAttr",
      "contents": "title=\"${1:auradocs:defMemberList - Optional - String}\""
    },
    {
      "trigger": "auradocs-defMemberList-list\tAttr",
      "contents": "list=\"${1:auradocs:defMemberList - Optional - Object}\""
    },
    {
      "trigger": "auradocs-defOverview-descriptor\tAttr",
      "contents": "descriptor=\"${1:auradocs:defOverview - Required - String}\""
    },
    {
      "trigger": "auradocs-defOverview-defType\tAttr",
      "contents": "defType=\"${1:auradocs:defOverview - Optional - String}\""
    },
    {
      "trigger": "auradocs-demoAutocompleteProvider-dataType\tAttr",
      "contents": "dataType=\"${1:auradocs:demoAutocompleteProvider - Optional - String}\""
    },
    {
      "trigger": "auradocs-demoForm-myDate\tAttr",
      "contents": "myDate=\"${1:auradocs:demoForm - Optional - Date}\""
    },
    {
      "trigger": "auradocs-demoLabelDyn-simplevalue1\tAttr",
      "contents": "simplevalue1=\"${1:auradocs:demoLabelDyn - Optional - Object}\""
    },
    {
      "trigger": "auradocs-demoListTemplate-label\tAttr",
      "contents": "label=\"${1:auradocs:demoListTemplate - Optional - String}\""
    },
    {
      "trigger": "auradocs-demoMenu-status\tAttr",
      "contents": "status=\"${1:auradocs:demoMenu - Optional - String[]}\""
    },
    {
      "trigger": "auradocs-demoPanel-demo\tAttr",
      "contents": "demo=\"${1:auradocs:demoPanel - Optional - String}\""
    },
    {
      "trigger": "auradocs-demoPanel-example\tAttr",
      "contents": "example=\"${1:auradocs:demoPanel - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "auradocs-demoSubmitForm-myDate\tAttr",
      "contents": "myDate=\"${1:auradocs:demoSubmitForm - Optional - Date}\""
    },
    {
      "trigger": "auradocs-demoSubmitForm-sizes\tAttr",
      "contents": "sizes=\"${1:auradocs:demoSubmitForm - Optional - List}\""
    },
    {
      "trigger": "auradocs-demoSubmitForm-invalidEmail\tAttr",
      "contents": "invalidEmail=\"${1:auradocs:demoSubmitForm - Optional - Boolean}\""
    },
    {
      "trigger": "auradocs-demoSubmitForm-invalidPW\tAttr",
      "contents": "invalidPW=\"${1:auradocs:demoSubmitForm - Optional - Boolean}\""
    },
    {
      "trigger": "auradocs-demoSubmitForm-invalidURL\tAttr",
      "contents": "invalidURL=\"${1:auradocs:demoSubmitForm - Optional - Boolean}\""
    },
    {
      "trigger": "auradocs-demoSubmitForm-filled\tAttr",
      "contents": "filled=\"${1:auradocs:demoSubmitForm - Optional - Boolean}\""
    },
    {
      "trigger": "auradocs-demoVdatagrid-data\tAttr",
      "contents": "data=\"${1:auradocs:demoVdatagrid - Optional - List}\""
    },
    {
      "trigger": "auradocs-demosNode-text\tAttr",
      "contents": "text=\"${1:auradocs:demosNode - Optional - String}\""
    },
    {
      "trigger": "auradocs-demosNode-id\tAttr",
      "contents": "id=\"${1:auradocs:demosNode - Optional - String}\""
    },
    {
      "trigger": "auradocs-demosNode-class\tAttr",
      "contents": "class=\"${1:auradocs:demosNode - Optional - String}\""
    },
    {
      "trigger": "auradocs-descriptorLink-defModel\tAttr",
      "contents": "defModel=\"${1:auradocs:descriptorLink - Required - java://org.auraframework.docs.DefModel}\""
    },
    {
      "trigger": "auradocs-editorPanel-title\tAttr",
      "contents": "title=\"${1:auradocs:editorPanel - Required - String}\""
    },
    {
      "trigger": "auradocs-editorPanel-descriptor\tAttr",
      "contents": "descriptor=\"${1:auradocs:editorPanel - Required - String}\""
    },
    {
      "trigger": "auradocs-editorPanel-defType\tAttr",
      "contents": "defType=\"${1:auradocs:editorPanel - Optional - String}\""
    },
    {
      "trigger": "auradocs-editorPanel-includeDefName\tAttr",
      "contents": "includeDefName=\"${1:auradocs:editorPanel - Optional - String}\""
    },
    {
      "trigger": "auradocs-editorPanel-region\tAttr",
      "contents": "region=\"${1:auradocs:editorPanel - Optional - String}\""
    },
    {
      "trigger": "auradocs-editorPanel-open\tAttr",
      "contents": "open=\"${1:auradocs:editorPanel - Optional - auradocs:openDef}\""
    },
    {
      "trigger": "auradocs-example-label\tAttr",
      "contents": "label=\"${1:auradocs:example - Required - String}\""
    },
    {
      "trigger": "auradocs-example-description\tAttr",
      "contents": "description=\"${1:auradocs:example - Required - String}\""
    },
    {
      "trigger": "auradocs-example-descriptor\tAttr",
      "contents": "descriptor=\"${1:auradocs:example - Required - String}\""
    },
    {
      "trigger": "auradocs-examplesc-name\tAttr",
      "contents": "name=\"${1:auradocs:examplesc - Optional - String}\""
    },
    {
      "trigger": "auradocs-helloAttributes-whom\tAttr",
      "contents": "whom=\"${1:auradocs:helloAttributes - Optional - String}\""
    },
    {
      "trigger": "auradocs-helpPanel-topic\tAttr",
      "contents": "topic=\"${1:auradocs:helpPanel - Optional - String}\""
    },
    {
      "trigger": "auradocs-helpPanel-topicPanel\tAttr",
      "contents": "topicPanel=\"${1:auradocs:helpPanel - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "auradocs-nav-referenceOnly\tAttr",
      "contents": "referenceOnly=\"${1:auradocs:nav - Optional - boolean}\""
    },
    {
      "trigger": "auradocs-navLink-location\tAttr",
      "contents": "location=\"${1:auradocs:navLink - Required - String}\""
    },
    {
      "trigger": "auradocs-openTopicTree-layoutToken\tAttr",
      "contents": "layoutToken=\"${1:auradocs:openTopicTree - Optional - String}\""
    },
    {
      "trigger": "auradocs-openTopicTree-catchAllHref\tAttr",
      "contents": "catchAllHref=\"${1:auradocs:openTopicTree - Optional - String}\""
    },
    {
      "trigger": "auradocs-openTopicTree-tree\tAttr",
      "contents": "tree=\"${1:auradocs:openTopicTree - Optional - Aura.Component}\""
    },
    {
      "trigger": "auradocs-outputViewerc-def\tAttr",
      "contents": "def=\"${1:auradocs:outputViewerc - Optional - String}\""
    },
    {
      "trigger": "auradocs-referenceTopicLink-topic\tAttr",
      "contents": "topic=\"${1:auradocs:referenceTopicLink - Required - String}\""
    },
    {
      "trigger": "auradocs-referenceTreeSection-title\tAttr",
      "contents": "title=\"${1:auradocs:referenceTreeSection - Required - String}\""
    },
    {
      "trigger": "auradocs-referenceTreeSection-namespaces\tAttr",
      "contents": "namespaces=\"${1:auradocs:referenceTreeSection - Required - List}\""
    },
    {
      "trigger": "auradocs-searchFilterTree-tree\tAttr",
      "contents": "tree=\"${1:auradocs:searchFilterTree - Optional - Aura.Component}\""
    },
    {
      "trigger": "auradocs-searchFilterTree-search\tAttr",
      "contents": "search=\"${1:auradocs:searchFilterTree - Optional - ui:searchEvent}\""
    },
    {
      "trigger": "auradocs-sidebar-toolbar\tAttr",
      "contents": "toolbar=\"${1:auradocs:sidebar - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "auradocs-simpledragdrop-_dropzoneContext1\tAttr",
      "contents": "_dropzoneContext1=\"${1:auradocs:simpledragdrop - Optional - Object}\""
    },
    {
      "trigger": "auradocs-simpledragdrop-_dropzoneContext2\tAttr",
      "contents": "_dropzoneContext2=\"${1:auradocs:simpledragdrop - Optional - Object}\""
    },
    {
      "trigger": "auradocs-simpledragdrop-_draggableContext1\tAttr",
      "contents": "_draggableContext1=\"${1:auradocs:simpledragdrop - Optional - Object}\""
    },
    {
      "trigger": "auradocs-simpledragdrop-_draggableContext2\tAttr",
      "contents": "_draggableContext2=\"${1:auradocs:simpledragdrop - Optional - Object}\""
    },
    {
      "trigger": "auradocs-simpledragdrop-list1\tAttr",
      "contents": "list1=\"${1:auradocs:simpledragdrop - Optional - String[]}\""
    },
    {
      "trigger": "auradocs-simpledragdrop-list2\tAttr",
      "contents": "list2=\"${1:auradocs:simpledragdrop - Optional - String[]}\""
    },
    {
      "trigger": "auradocs-topicExample-descriptor\tAttr",
      "contents": "descriptor=\"${1:auradocs:topicExample - Required - String}\""
    },
    {
      "trigger": "auradocs-topicExample-defType\tAttr",
      "contents": "defType=\"${1:auradocs:topicExample - Optional - String}\""
    },
    {
      "trigger": "auradocs-topicLink-topic\tAttr",
      "contents": "topic=\"${1:auradocs:topicLink - Required - String}\""
    },
    {
      "trigger": "auradocs-topicPanel-topic\tAttr",
      "contents": "topic=\"${1:auradocs:topicPanel - Optional - String}\""
    },
    {
      "trigger": "auradocs-topicPanel-example\tAttr",
      "contents": "example=\"${1:auradocs:topicPanel - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "auradocs-viewer-descriptor\tAttr",
      "contents": "descriptor=\"${1:auradocs:viewer - Required - String}\""
    },
    {
      "trigger": "aurajstest-jstestCase-case\tAttr",
      "contents": "case=\"${1:aurajstest:jstestCase - Optional - java://org.auraframework.def.TestCaseDef}\""
    },
    {
      "trigger": "aurajstest-jstestCase-suite\tAttr",
      "contents": "suite=\"${1:aurajstest:jstestCase - Optional - java://org.auraframework.def.TestSuiteDef}\""
    },
    {
      "trigger": "aurajstest-jstestCase-shortName\tAttr",
      "contents": "shortName=\"${1:aurajstest:jstestCase - Optional - String}\""
    },
    {
      "trigger": "aurajstest-jstestCase-runTime\tAttr",
      "contents": "runTime=\"${1:aurajstest:jstestCase - Optional - String}\""
    },
    {
      "trigger": "aurajstest-jstestCase-url\tAttr",
      "contents": "url=\"${1:aurajstest:jstestCase - Optional - String}\""
    },
    {
      "trigger": "aurajstest-jstestCase-status\tAttr",
      "contents": "status=\"${1:aurajstest:jstestCase - Optional - String}\""
    },
    {
      "trigger": "aurajstest-jstestCase-individualTestUrl\tAttr",
      "contents": "individualTestUrl=\"${1:aurajstest:jstestCase - Optional - String}\""
    },
    {
      "trigger": "aurajstest-jstestCase-done\tAttr",
      "contents": "done=\"${1:aurajstest:jstestCase - Optional - aurajstest:testStatus}\""
    },
    {
      "trigger": "ui-abstractDataGrid-items\tAttr",
      "contents": "items=\"${1:ui:abstractDataGrid - Optional - List}\""
    },
    {
      "trigger": "ui-abstractDataGrid-itemShape\tAttr",
      "contents": "itemShape=\"${1:ui:abstractDataGrid - Optional - Object}\""
    },
    {
      "trigger": "ui-abstractDataGrid-mode\tAttr",
      "contents": "mode=\"${1:ui:abstractDataGrid - Optional - String}\""
    },
    {
      "trigger": "ui-abstractDataGrid-state\tAttr",
      "contents": "state=\"${1:ui:abstractDataGrid - Optional - String}\""
    },
    {
      "trigger": "ui-abstractDataGrid-sortable\tAttr",
      "contents": "sortable=\"${1:ui:abstractDataGrid - Optional - Boolean}\""
    },
    {
      "trigger": "ui-abstractDataGrid-createable\tAttr",
      "contents": "createable=\"${1:ui:abstractDataGrid - Optional - Boolean}\""
    },
    {
      "trigger": "ui-abstractDataGrid-selectAll\tAttr",
      "contents": "selectAll=\"${1:ui:abstractDataGrid - Optional - Boolean}\""
    },
    {
      "trigger": "ui-abstractDataGrid-selectedItems\tAttr",
      "contents": "selectedItems=\"${1:ui:abstractDataGrid - Optional - List}\""
    },
    {
      "trigger": "ui-abstractDataGrid-sortBy\tAttr",
      "contents": "sortBy=\"${1:ui:abstractDataGrid - Optional - String}\""
    },
    {
      "trigger": "ui-abstractDataGrid-dataProvider\tAttr",
      "contents": "dataProvider=\"${1:ui:abstractDataGrid - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-abstractDataGrid-dataWriter\tAttr",
      "contents": "dataWriter=\"${1:ui:abstractDataGrid - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-abstractDataGrid-columns\tAttr",
      "contents": "columns=\"${1:ui:abstractDataGrid - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-abstractDataGrid-summaryRow\tAttr",
      "contents": "summaryRow=\"${1:ui:abstractDataGrid - Optional - Aura.ComponentDefRef[]}\""
    },
    {
      "trigger": "ui-abstractDataGrid-actionDelegate\tAttr",
      "contents": "actionDelegate=\"${1:ui:abstractDataGrid - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-abstractDataGrid-refresh\tAttr",
      "contents": "refresh=\"${1:ui:abstractDataGrid - Optional - ui:refresh}\""
    },
    {
      "trigger": "ui-abstractDataGrid-addRemove\tAttr",
      "contents": "addRemove=\"${1:ui:abstractDataGrid - Optional - ui:addRemove}\""
    },
    {
      "trigger": "ui-abstractList-itemTemplate\tAttr",
      "contents": "itemTemplate=\"${1:ui:abstractList - Required - Aura.ComponentDefRef[]}\""
    },
    {
      "trigger": "ui-abstractList-items\tAttr",
      "contents": "items=\"${1:ui:abstractList - Optional - Object[]}\""
    },
    {
      "trigger": "ui-abstractList-itemVar\tAttr",
      "contents": "itemVar=\"${1:ui:abstractList - Required - String}\""
    },
    {
      "trigger": "ui-abstractList-dataProvider\tAttr",
      "contents": "dataProvider=\"${1:ui:abstractList - Required - Aura.Component[]}\""
    },
    {
      "trigger": "ui-abstractList-emptyListContent\tAttr",
      "contents": "emptyListContent=\"${1:ui:abstractList - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-abstractList-loadingIndicator\tAttr",
      "contents": "loadingIndicator=\"${1:ui:abstractList - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-abstractList-header\tAttr",
      "contents": "header=\"${1:ui:abstractList - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-abstractList-footer\tAttr",
      "contents": "footer=\"${1:ui:abstractList - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-abstractList-triggerDataProvider\tAttr",
      "contents": "triggerDataProvider=\"${1:ui:abstractList - Optional - ui:dataProvide}\""
    },
    {
      "trigger": "ui-abstractList-listComplete\tAttr",
      "contents": "listComplete=\"${1:ui:abstractList - Optional - aura:operationComplete}\""
    },
    {
      "trigger": "ui-abstractList-refresh\tAttr",
      "contents": "refresh=\"${1:ui:abstractList - Optional - ui:refresh}\""
    },
    {
      "trigger": "ui-abstractList-addRemove\tAttr",
      "contents": "addRemove=\"${1:ui:abstractList - Optional - ui:addRemove}\""
    },
    {
      "trigger": "ui-action-name\tAttr",
      "contents": "name=\"${1:ui:action - Optional - String}\""
    },
    {
      "trigger": "ui-action-label\tAttr",
      "contents": "label=\"${1:ui:action - Optional - String}\""
    },
    {
      "trigger": "ui-action-labelClass\tAttr",
      "contents": "labelClass=\"${1:ui:action - Optional - String}\""
    },
    {
      "trigger": "ui-action-index\tAttr",
      "contents": "index=\"${1:ui:action - Optional - Integer}\""
    },
    {
      "trigger": "ui-action-value\tAttr",
      "contents": "value=\"${1:ui:action - Optional - Object}\""
    },
    {
      "trigger": "ui-actionButton-disabled\tAttr",
      "contents": "disabled=\"${1:ui:actionButton - Optional - Boolean}\""
    },
    {
      "trigger": "ui-actionCheckbox-disabled\tAttr",
      "contents": "disabled=\"${1:ui:actionCheckbox - Optional - Boolean}\""
    },
    {
      "trigger": "ui-actionDelegate-onaction\tAttr",
      "contents": "onaction=\"${1:ui:actionDelegate - Optional - ui:actionEvent}\""
    },
    {
      "trigger": "ui-actionMenuItem-id\tAttr",
      "contents": "id=\"${1:ui:actionMenuItem - Optional - String}\""
    },
    {
      "trigger": "ui-actionMenuItem-hideMenuAfterSelected\tAttr",
      "contents": "hideMenuAfterSelected=\"${1:ui:actionMenuItem - Optional - Boolean}\""
    },
    {
      "trigger": "ui-asyncComponentManager-maxConcurrency\tAttr",
      "contents": "maxConcurrency=\"${1:ui:asyncComponentManager - Required - Integer}\""
    },
    {
      "trigger": "ui-asyncImage-actualImageSrc\tAttr",
      "contents": "actualImageSrc=\"${1:ui:asyncImage - Optional - String}\""
    },
    {
      "trigger": "ui-asyncImage-load\tAttr",
      "contents": "load=\"${1:ui:asyncImage - Optional - ui:load}\""
    },
    {
      "trigger": "ui-autocomplete-dataProvider\tAttr",
      "contents": "dataProvider=\"${1:ui:autocomplete - Required - Aura.Component[]}\""
    },
    {
      "trigger": "ui-autocomplete-emptyListContent\tAttr",
      "contents": "emptyListContent=\"${1:ui:autocomplete - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-autocomplete-loadingIndicator\tAttr",
      "contents": "loadingIndicator=\"${1:ui:autocomplete - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-autocomplete-inputClass\tAttr",
      "contents": "inputClass=\"${1:ui:autocomplete - Optional - String}\""
    },
    {
      "trigger": "ui-autocomplete-inputType\tAttr",
      "contents": "inputType=\"${1:ui:autocomplete - Optional - String}\""
    },
    {
      "trigger": "ui-autocomplete-listOption\tAttr",
      "contents": "listOption=\"${1:ui:autocomplete - Required - Aura.ComponentDefRef[]}\""
    },
    {
      "trigger": "ui-autocomplete-optionVar\tAttr",
      "contents": "optionVar=\"${1:ui:autocomplete - Required - String}\""
    },
    {
      "trigger": "ui-autocomplete-placeholder\tAttr",
      "contents": "placeholder=\"${1:ui:autocomplete - Optional - String}\""
    },
    {
      "trigger": "ui-autocomplete-propertyToMatch\tAttr",
      "contents": "propertyToMatch=\"${1:ui:autocomplete - Optional - String}\""
    },
    {
      "trigger": "ui-autocomplete-theme\tAttr",
      "contents": "theme=\"${1:ui:autocomplete - Optional - String}\""
    },
    {
      "trigger": "ui-autocomplete-matchFunc\tAttr",
      "contents": "matchFunc=\"${1:ui:autocomplete - Optional - Aura.Action}\""
    },
    {
      "trigger": "ui-autocomplete-autocompleteButton\tAttr",
      "contents": "autocompleteButton=\"${1:ui:autocomplete - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-autocomplete-listHeader\tAttr",
      "contents": "listHeader=\"${1:ui:autocomplete - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-autocomplete-listFooter\tAttr",
      "contents": "listFooter=\"${1:ui:autocomplete - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-autocomplete-showListHeader\tAttr",
      "contents": "showListHeader=\"${1:ui:autocomplete - Optional - Boolean}\""
    },
    {
      "trigger": "ui-autocomplete-showListFooter\tAttr",
      "contents": "showListFooter=\"${1:ui:autocomplete - Optional - Boolean}\""
    },
    {
      "trigger": "ui-autocomplete-usePanel\tAttr",
      "contents": "usePanel=\"${1:ui:autocomplete - Optional - boolean}\""
    },
    {
      "trigger": "ui-autocomplete-setDefaultHighlight\tAttr",
      "contents": "setDefaultHighlight=\"${1:ui:autocomplete - Optional - boolean}\""
    },
    {
      "trigger": "ui-autocomplete-matchDone\tAttr",
      "contents": "matchDone=\"${1:ui:autocomplete - Optional - ui:matchDone}\""
    },
    {
      "trigger": "ui-autocomplete-inputChange\tAttr",
      "contents": "inputChange=\"${1:ui:autocomplete - Optional - ui:inputChange}\""
    },
    {
      "trigger": "ui-autocomplete-selectListOption\tAttr",
      "contents": "selectListOption=\"${1:ui:autocomplete - Optional - ui:selectListOption}\""
    },
    {
      "trigger": "ui-autocomplete-fetchData\tAttr",
      "contents": "fetchData=\"${1:ui:autocomplete - Optional - ui:fetchData}\""
    },
    {
      "trigger": "ui-autocomplete-matchText\tAttr",
      "contents": "matchText=\"${1:ui:autocomplete - Optional - ui:matchText}\""
    },
    {
      "trigger": "ui-autocompleteList-ignoredElements\tAttr",
      "contents": "ignoredElements=\"${1:ui:autocompleteList - Optional - Object}\""
    },
    {
      "trigger": "ui-autocompleteList-keyword\tAttr",
      "contents": "keyword=\"${1:ui:autocompleteList - Optional - String}\""
    },
    {
      "trigger": "ui-autocompleteList-propertyToMatch\tAttr",
      "contents": "propertyToMatch=\"${1:ui:autocompleteList - Optional - String}\""
    },
    {
      "trigger": "ui-autocompleteList-theme\tAttr",
      "contents": "theme=\"${1:ui:autocompleteList - Optional - String}\""
    },
    {
      "trigger": "ui-autocompleteList-matchFunc\tAttr",
      "contents": "matchFunc=\"${1:ui:autocompleteList - Optional - Aura.Action}\""
    },
    {
      "trigger": "ui-autocompleteList-footerSelected\tAttr",
      "contents": "footerSelected=\"${1:ui:autocompleteList - Optional - boolean}\""
    },
    {
      "trigger": "ui-autocompleteList-headerSelected\tAttr",
      "contents": "headerSelected=\"${1:ui:autocompleteList - Optional - boolean}\""
    },
    {
      "trigger": "ui-autocompleteList-listHeader\tAttr",
      "contents": "listHeader=\"${1:ui:autocompleteList - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-autocompleteList-listFooter\tAttr",
      "contents": "listFooter=\"${1:ui:autocompleteList - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-autocompleteList-showListHeader\tAttr",
      "contents": "showListHeader=\"${1:ui:autocompleteList - Optional - Boolean}\""
    },
    {
      "trigger": "ui-autocompleteList-showListFooter\tAttr",
      "contents": "showListFooter=\"${1:ui:autocompleteList - Optional - Boolean}\""
    },
    {
      "trigger": "ui-autocompleteList-setDefaultHighlight\tAttr",
      "contents": "setDefaultHighlight=\"${1:ui:autocompleteList - Optional - boolean}\""
    },
    {
      "trigger": "ui-autocompleteList-matchDone\tAttr",
      "contents": "matchDone=\"${1:ui:autocompleteList - Optional - ui:matchDone}\""
    },
    {
      "trigger": "ui-autocompleteList-listHighlight\tAttr",
      "contents": "listHighlight=\"${1:ui:autocompleteList - Optional - ui:listHighlight}\""
    },
    {
      "trigger": "ui-autocompleteList-matchText\tAttr",
      "contents": "matchText=\"${1:ui:autocompleteList - Optional - ui:matchText}\""
    },
    {
      "trigger": "ui-autocompleteList-pressOnHighlighted\tAttr",
      "contents": "pressOnHighlighted=\"${1:ui:autocompleteList - Optional - ui:press}\""
    },
    {
      "trigger": "ui-autocompleteList-selectListOption\tAttr",
      "contents": "selectListOption=\"${1:ui:autocompleteList - Optional - ui:selectListOption}\""
    },
    {
      "trigger": "ui-autocompleteList-updateAriaAttributes\tAttr",
      "contents": "updateAriaAttributes=\"${1:ui:autocompleteList - Optional - ui:updateAriaAttributes}\""
    },
    {
      "trigger": "ui-autocompleteList-listExpand\tAttr",
      "contents": "listExpand=\"${1:ui:autocompleteList - Optional - ui:autocompleteListExpand}\""
    },
    {
      "trigger": "ui-autocompleteOption-displayText\tAttr",
      "contents": "displayText=\"${1:ui:autocompleteOption - Optional - String}\""
    },
    {
      "trigger": "ui-autocompleteOption-label\tAttr",
      "contents": "label=\"${1:ui:autocompleteOption - Required - String}\""
    },
    {
      "trigger": "ui-autocompleteOption-theme\tAttr",
      "contents": "theme=\"${1:ui:autocompleteOption - Optional - String}\""
    },
    {
      "trigger": "ui-autocompleteOption-domId\tAttr",
      "contents": "domId=\"${1:ui:autocompleteOption - Optional - String}\""
    },
    {
      "trigger": "ui-autocompletePanel-referenceElement\tAttr",
      "contents": "referenceElement=\"${1:ui:autocompletePanel - Optional - Object}\""
    },
    {
      "trigger": "ui-autocompletePanel-visible\tAttr",
      "contents": "visible=\"${1:ui:autocompletePanel - Optional - boolean}\""
    },
    {
      "trigger": "ui-autocompletePanel-zIndex\tAttr",
      "contents": "zIndex=\"${1:ui:autocompletePanel - Optional - Integer}\""
    },
    {
      "trigger": "ui-block-overflow\tAttr",
      "contents": "overflow=\"${1:ui:block - Optional - Boolean}\""
    },
    {
      "trigger": "ui-block-left\tAttr",
      "contents": "left=\"${1:ui:block - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-block-right\tAttr",
      "contents": "right=\"${1:ui:block - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-block-tag\tAttr",
      "contents": "tag=\"${1:ui:block - Optional - String}\""
    },
    {
      "trigger": "ui-button-buttonTitle\tAttr",
      "contents": "buttonTitle=\"${1:ui:button - Optional - String}\""
    },
    {
      "trigger": "ui-button-buttonType\tAttr",
      "contents": "buttonType=\"${1:ui:button - Optional - String}\""
    },
    {
      "trigger": "ui-button-class\tAttr",
      "contents": "class=\"${1:ui:button - Optional - String}\""
    },
    {
      "trigger": "ui-button-label\tAttr",
      "contents": "label=\"${1:ui:button - Required - String}\""
    },
    {
      "trigger": "ui-button-labelClass\tAttr",
      "contents": "labelClass=\"${1:ui:button - Optional - String}\""
    },
    {
      "trigger": "ui-button-labelDisplay\tAttr",
      "contents": "labelDisplay=\"${1:ui:button - Optional - Boolean}\""
    },
    {
      "trigger": "ui-button-iconImgSrc\tAttr",
      "contents": "iconImgSrc=\"${1:ui:button - Optional - String}\""
    },
    {
      "trigger": "ui-button-iconClass\tAttr",
      "contents": "iconClass=\"${1:ui:button - Optional - String}\""
    },
    {
      "trigger": "ui-button-selectedClass\tAttr",
      "contents": "selectedClass=\"${1:ui:button - Optional - String}\""
    },
    {
      "trigger": "ui-button-notSelectedClass\tAttr",
      "contents": "notSelectedClass=\"${1:ui:button - Optional - String}\""
    },
    {
      "trigger": "ui-button-classList\tAttr",
      "contents": "classList=\"${1:ui:button - Optional - String}\""
    },
    {
      "trigger": "ui-button-disabled\tAttr",
      "contents": "disabled=\"${1:ui:button - Optional - Boolean}\""
    },
    {
      "trigger": "ui-button-accesskey\tAttr",
      "contents": "accesskey=\"${1:ui:button - Optional - String}\""
    },
    {
      "trigger": "ui-button-labelDir\tAttr",
      "contents": "labelDir=\"${1:ui:button - Optional - String}\""
    },
    {
      "trigger": "ui-button-stopPropagation\tAttr",
      "contents": "stopPropagation=\"${1:ui:button - Optional - Boolean}\""
    },
    {
      "trigger": "ui-button-tabIndex\tAttr",
      "contents": "tabIndex=\"${1:ui:button - Optional - Integer}\""
    },
    {
      "trigger": "ui-button-stateful\tAttr",
      "contents": "stateful=\"${1:ui:button - Optional - Boolean}\""
    },
    {
      "trigger": "ui-button-selected\tAttr",
      "contents": "selected=\"${1:ui:button - Optional - Boolean}\""
    },
    {
      "trigger": "ui-button-keydown\tAttr",
      "contents": "keydown=\"${1:ui:button - Optional - ui:keydown}\""
    },
    {
      "trigger": "ui-button-press\tAttr",
      "contents": "press=\"${1:ui:button - Optional - ui:press}\""
    },
    {
      "trigger": "ui-button-mouseover\tAttr",
      "contents": "mouseover=\"${1:ui:button - Optional - ui:mouseover}\""
    },
    {
      "trigger": "ui-button-mouseout\tAttr",
      "contents": "mouseout=\"${1:ui:button - Optional - ui:mouseout}\""
    },
    {
      "trigger": "ui-button-focus\tAttr",
      "contents": "focus=\"${1:ui:button - Optional - ui:focus}\""
    },
    {
      "trigger": "ui-button-blur\tAttr",
      "contents": "blur=\"${1:ui:button - Optional - ui:blur}\""
    },
    {
      "trigger": "ui-carousel-height\tAttr",
      "contents": "height=\"${1:ui:carousel - Optional - Integer}\""
    },
    {
      "trigger": "ui-carousel-swipeEnabled\tAttr",
      "contents": "swipeEnabled=\"${1:ui:carousel - Optional - Boolean}\""
    },
    {
      "trigger": "ui-carousel-width\tAttr",
      "contents": "width=\"${1:ui:carousel - Optional - Integer}\""
    },
    {
      "trigger": "ui-carousel-pageModels\tAttr",
      "contents": "pageModels=\"${1:ui:carousel - Optional - Object[]}\""
    },
    {
      "trigger": "ui-carousel-pageComponents\tAttr",
      "contents": "pageComponents=\"${1:ui:carousel - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-carousel-prefetchedTab\tAttr",
      "contents": "prefetchedTab=\"${1:ui:carousel - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-carousel-isDotIndicator\tAttr",
      "contents": "isDotIndicator=\"${1:ui:carousel - Optional - Boolean}\""
    },
    {
      "trigger": "ui-carousel-initialPage\tAttr",
      "contents": "initialPage=\"${1:ui:carousel - Optional - String}\""
    },
    {
      "trigger": "ui-carousel-prefetchFirstTab\tAttr",
      "contents": "prefetchFirstTab=\"${1:ui:carousel - Optional - Boolean}\""
    },
    {
      "trigger": "ui-carousel-lazyLoadTabs\tAttr",
      "contents": "lazyLoadTabs=\"${1:ui:carousel - Optional - Boolean}\""
    },
    {
      "trigger": "ui-carousel-indicatorStateClass\tAttr",
      "contents": "indicatorStateClass=\"${1:ui:carousel - Optional - String}\""
    },
    {
      "trigger": "ui-carousel-pageScrollerPlugins\tAttr",
      "contents": "pageScrollerPlugins=\"${1:ui:carousel - Optional - String}\""
    },
    {
      "trigger": "ui-carousel-justifyContent\tAttr",
      "contents": "justifyContent=\"${1:ui:carousel - Optional - String}\""
    },
    {
      "trigger": "ui-carousel-prefetchedTabIndex\tAttr",
      "contents": "prefetchedTabIndex=\"${1:ui:carousel - Optional - Integer}\""
    },
    {
      "trigger": "ui-carousel-suppressIndicators\tAttr",
      "contents": "suppressIndicators=\"${1:ui:carousel - Optional - String}\""
    },
    {
      "trigger": "ui-carousel-isScrollable\tAttr",
      "contents": "isScrollable=\"${1:ui:carousel - Optional - Boolean}\""
    },
    {
      "trigger": "ui-carousel-bindEventsToScroller\tAttr",
      "contents": "bindEventsToScroller=\"${1:ui:carousel - Optional - Boolean}\""
    },
    {
      "trigger": "ui-carousel-pageIndicatorComponent\tAttr",
      "contents": "pageIndicatorComponent=\"${1:ui:carousel - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-carousel-carouselPageComponent\tAttr",
      "contents": "carouselPageComponent=\"${1:ui:carousel - Optional - Aura.ComponentDefRef[]}\""
    },
    {
      "trigger": "ui-carouselDeprecated-title\tAttr",
      "contents": "title=\"${1:ui:carouselDeprecated - Optional - String}\""
    },
    {
      "trigger": "ui-carouselDeprecated-width\tAttr",
      "contents": "width=\"${1:ui:carouselDeprecated - Optional - Integer}\""
    },
    {
      "trigger": "ui-carouselDeprecated-height\tAttr",
      "contents": "height=\"${1:ui:carouselDeprecated - Optional - Integer}\""
    },
    {
      "trigger": "ui-carouselDeprecated-useTransition\tAttr",
      "contents": "useTransition=\"${1:ui:carouselDeprecated - Optional - Boolean}\""
    },
    {
      "trigger": "ui-carouselDeprecated-pageIndicatorPosition\tAttr",
      "contents": "pageIndicatorPosition=\"${1:ui:carouselDeprecated - Optional - String}\""
    },
    {
      "trigger": "ui-carouselDeprecated-continuousFlow\tAttr",
      "contents": "continuousFlow=\"${1:ui:carouselDeprecated - Optional - Boolean}\""
    },
    {
      "trigger": "ui-carouselDeprecated-defaultPage\tAttr",
      "contents": "defaultPage=\"${1:ui:carouselDeprecated - Optional - Integer}\""
    },
    {
      "trigger": "ui-carouselDeprecated-pageModels\tAttr",
      "contents": "pageModels=\"${1:ui:carouselDeprecated - Optional - Object[]}\""
    },
    {
      "trigger": "ui-carouselDeprecated-pageComponents\tAttr",
      "contents": "pageComponents=\"${1:ui:carouselDeprecated - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-carouselDeprecated-navigationTabs\tAttr",
      "contents": "navigationTabs=\"${1:ui:carouselDeprecated - Optional - Boolean}\""
    },
    {
      "trigger": "ui-carouselDeprecated-onPageChange\tAttr",
      "contents": "onPageChange=\"${1:ui:carouselDeprecated - Optional - Aura.Action}\""
    },
    {
      "trigger": "ui-carouselDeprecated-spinner\tAttr",
      "contents": "spinner=\"${1:ui:carouselDeprecated - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-carouselDeprecated-priv_currentPage\tAttr",
      "contents": "priv_currentPage=\"${1:ui:carouselDeprecated - Optional - Integer}\""
    },
    {
      "trigger": "ui-carouselDeprecated-priv_carouselStyle\tAttr",
      "contents": "priv_carouselStyle=\"${1:ui:carouselDeprecated - Optional - String}\""
    },
    {
      "trigger": "ui-carouselDeprecated-priv_scrollerWidth\tAttr",
      "contents": "priv_scrollerWidth=\"${1:ui:carouselDeprecated - Optional - String}\""
    },
    {
      "trigger": "ui-carouselDeprecated-priv_snap\tAttr",
      "contents": "priv_snap=\"${1:ui:carouselDeprecated - Optional - String}\""
    },
    {
      "trigger": "ui-carouselDeprecated-priv_scrollContentClass\tAttr",
      "contents": "priv_scrollContentClass=\"${1:ui:carouselDeprecated - Optional - String}\""
    },
    {
      "trigger": "ui-carouselDeprecated-selectDefaultPage\tAttr",
      "contents": "selectDefaultPage=\"${1:ui:carouselDeprecated - Optional - ui:carouselPageEvent}\""
    },
    {
      "trigger": "ui-carouselDeprecated-pageSelected\tAttr",
      "contents": "pageSelected=\"${1:ui:carouselDeprecated - Optional - ui:carouselPageEvent}\""
    },
    {
      "trigger": "ui-carouselDeprecated-loadPage\tAttr",
      "contents": "loadPage=\"${1:ui:carouselDeprecated - Optional - ui:carouselPageEvent}\""
    },
    {
      "trigger": "ui-carouselDeprecated-scrollEnd\tAttr",
      "contents": "scrollEnd=\"${1:ui:carouselDeprecated - Optional - ui:scrollEnd}\""
    },
    {
      "trigger": "ui-carouselDeprecated-refreshCurrentPage\tAttr",
      "contents": "refreshCurrentPage=\"${1:ui:carouselDeprecated - Optional - ui:carouselPageEvent}\""
    },
    {
      "trigger": "ui-carouselIndicator-pageModels\tAttr",
      "contents": "pageModels=\"${1:ui:carouselIndicator - Optional - Object[]}\""
    },
    {
      "trigger": "ui-carouselIndicator-pageComponents\tAttr",
      "contents": "pageComponents=\"${1:ui:carouselIndicator - Optional - Object[]}\""
    },
    {
      "trigger": "ui-carouselIndicator-justifyContent\tAttr",
      "contents": "justifyContent=\"${1:ui:carouselIndicator - Optional - String}\""
    },
    {
      "trigger": "ui-carouselIndicator-isDotIndicator\tAttr",
      "contents": "isDotIndicator=\"${1:ui:carouselIndicator - Optional - Boolean}\""
    },
    {
      "trigger": "ui-carouselIndicator-_calculatedStyles\tAttr",
      "contents": "_calculatedStyles=\"${1:ui:carouselIndicator - Optional - String}\""
    },
    {
      "trigger": "ui-carouselIndicator-pagerClicked\tAttr",
      "contents": "pagerClicked=\"${1:ui:carouselIndicator - Optional - ui:pagerClicked}\""
    },
    {
      "trigger": "ui-carouselPage-content\tAttr",
      "contents": "content=\"${1:ui:carouselPage - Optional - Object}\""
    },
    {
      "trigger": "ui-carouselPage-pageIndex\tAttr",
      "contents": "pageIndex=\"${1:ui:carouselPage - Optional - Integer}\""
    },
    {
      "trigger": "ui-carouselPage-scrollerPlugins\tAttr",
      "contents": "scrollerPlugins=\"${1:ui:carouselPage - Optional - String}\""
    },
    {
      "trigger": "ui-carouselPage-isContentLoaded\tAttr",
      "contents": "isContentLoaded=\"${1:ui:carouselPage - Optional - Boolean}\""
    },
    {
      "trigger": "ui-carouselPage-isScrollable\tAttr",
      "contents": "isScrollable=\"${1:ui:carouselPage - Optional - Boolean}\""
    },
    {
      "trigger": "ui-carouselPage-placeholder\tAttr",
      "contents": "placeholder=\"${1:ui:carouselPage - Optional - Aura.ComponentDefRef[]}\""
    },
    {
      "trigger": "ui-carouselPageDeprecated-title\tAttr",
      "contents": "title=\"${1:ui:carouselPageDeprecated - Optional - String}\""
    },
    {
      "trigger": "ui-carouselPageDeprecated-isCacheable\tAttr",
      "contents": "isCacheable=\"${1:ui:carouselPageDeprecated - Optional - Boolean}\""
    },
    {
      "trigger": "ui-carouselPageDeprecated-isDefault\tAttr",
      "contents": "isDefault=\"${1:ui:carouselPageDeprecated - Optional - Boolean}\""
    },
    {
      "trigger": "ui-carouselPageDeprecated-pageModel\tAttr",
      "contents": "pageModel=\"${1:ui:carouselPageDeprecated - Optional - Object}\""
    },
    {
      "trigger": "ui-carouselPageDeprecated-pageIndex\tAttr",
      "contents": "pageIndex=\"${1:ui:carouselPageDeprecated - Optional - Integer}\""
    },
    {
      "trigger": "ui-carouselPageDeprecated-isSelected\tAttr",
      "contents": "isSelected=\"${1:ui:carouselPageDeprecated - Optional - Boolean}\""
    },
    {
      "trigger": "ui-carouselPageDeprecated-parent\tAttr",
      "contents": "parent=\"${1:ui:carouselPageDeprecated - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-carouselPageDeprecated-priv_width\tAttr",
      "contents": "priv_width=\"${1:ui:carouselPageDeprecated - Optional - Integer}\""
    },
    {
      "trigger": "ui-carouselPageDeprecated-priv_height\tAttr",
      "contents": "priv_height=\"${1:ui:carouselPageDeprecated - Optional - Integer}\""
    },
    {
      "trigger": "ui-carouselPageDeprecated-priv_pageStyle\tAttr",
      "contents": "priv_pageStyle=\"${1:ui:carouselPageDeprecated - Optional - String}\""
    },
    {
      "trigger": "ui-carouselPageDeprecated-priv_pageId\tAttr",
      "contents": "priv_pageId=\"${1:ui:carouselPageDeprecated - Optional - String}\""
    },
    {
      "trigger": "ui-carouselPageDeprecated-priv_visible\tAttr",
      "contents": "priv_visible=\"${1:ui:carouselPageDeprecated - Optional - Boolean}\""
    },
    {
      "trigger": "ui-carouselPageDeprecated-priv_continuousFlow\tAttr",
      "contents": "priv_continuousFlow=\"${1:ui:carouselPageDeprecated - Optional - Boolean}\""
    },
    {
      "trigger": "ui-carouselPageDeprecated-priv_snap\tAttr",
      "contents": "priv_snap=\"${1:ui:carouselPageDeprecated - Optional - String}\""
    },
    {
      "trigger": "ui-carouselPageDeprecated-showPage\tAttr",
      "contents": "showPage=\"${1:ui:carouselPageDeprecated - Optional - Aura.Action}\""
    },
    {
      "trigger": "ui-carouselPageDeprecated-pageSelected\tAttr",
      "contents": "pageSelected=\"${1:ui:carouselPageDeprecated - Optional - ui:carouselPageEvent}\""
    },
    {
      "trigger": "ui-carouselPageDeprecated-update\tAttr",
      "contents": "update=\"${1:ui:carouselPageDeprecated - Optional - ui:carouselPageEvent}\""
    },
    {
      "trigger": "ui-carouselPageDeprecated-show\tAttr",
      "contents": "show=\"${1:ui:carouselPageDeprecated - Optional - ui:carouselPageEvent}\""
    },
    {
      "trigger": "ui-carouselPageDeprecated-hide\tAttr",
      "contents": "hide=\"${1:ui:carouselPageDeprecated - Optional - ui:carouselPageEvent}\""
    },
    {
      "trigger": "ui-carouselPageDeprecated-updateSize\tAttr",
      "contents": "updateSize=\"${1:ui:carouselPageDeprecated - Optional - ui:carouselPageEvent}\""
    },
    {
      "trigger": "ui-carouselPageIndicator-pageComponents\tAttr",
      "contents": "pageComponents=\"${1:ui:carouselPageIndicator - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-carouselPageIndicator-currentPage\tAttr",
      "contents": "currentPage=\"${1:ui:carouselPageIndicator - Optional - Integer}\""
    },
    {
      "trigger": "ui-carouselPageIndicator-navigationTabs\tAttr",
      "contents": "navigationTabs=\"${1:ui:carouselPageIndicator - Optional - Boolean}\""
    },
    {
      "trigger": "ui-carouselPageIndicator-pagerClicked\tAttr",
      "contents": "pagerClicked=\"${1:ui:carouselPageIndicator - Optional - ui:pagerClicked}\""
    },
    {
      "trigger": "ui-carouselPageIndicator-pagerKeyed\tAttr",
      "contents": "pagerKeyed=\"${1:ui:carouselPageIndicator - Optional - ui:pagerKeyed}\""
    },
    {
      "trigger": "ui-carouselPageIndicator-pageSelected\tAttr",
      "contents": "pageSelected=\"${1:ui:carouselPageIndicator - Optional - ui:carouselPageEvent}\""
    },
    {
      "trigger": "ui-carouselPageIndicatorItem-pageIndex\tAttr",
      "contents": "pageIndex=\"${1:ui:carouselPageIndicatorItem - Optional - Integer}\""
    },
    {
      "trigger": "ui-carouselPageIndicatorItem-title\tAttr",
      "contents": "title=\"${1:ui:carouselPageIndicatorItem - Optional - String}\""
    },
    {
      "trigger": "ui-carouselPageIndicatorItem-label\tAttr",
      "contents": "label=\"${1:ui:carouselPageIndicatorItem - Optional - String}\""
    },
    {
      "trigger": "ui-carouselPageIndicatorItem-navigationTab\tAttr",
      "contents": "navigationTab=\"${1:ui:carouselPageIndicatorItem - Optional - Boolean}\""
    },
    {
      "trigger": "ui-carouselPageIndicatorItem-priv_id\tAttr",
      "contents": "priv_id=\"${1:ui:carouselPageIndicatorItem - Optional - String}\""
    },
    {
      "trigger": "ui-carouselPageIndicatorItem-priv_ariaSelected\tAttr",
      "contents": "priv_ariaSelected=\"${1:ui:carouselPageIndicatorItem - Optional - Boolean}\""
    },
    {
      "trigger": "ui-carouselPageIndicatorItem-priv_ariaControlId\tAttr",
      "contents": "priv_ariaControlId=\"${1:ui:carouselPageIndicatorItem - Optional - String}\""
    },
    {
      "trigger": "ui-carouselPageIndicatorItem-priv_tabIndex\tAttr",
      "contents": "priv_tabIndex=\"${1:ui:carouselPageIndicatorItem - Optional - Integer}\""
    },
    {
      "trigger": "ui-carouselPageIndicatorItem-priv_pageComponent\tAttr",
      "contents": "priv_pageComponent=\"${1:ui:carouselPageIndicatorItem - Optional - Object}\""
    },
    {
      "trigger": "ui-carouselPageIndicatorItem-priv_selectedClass\tAttr",
      "contents": "priv_selectedClass=\"${1:ui:carouselPageIndicatorItem - Optional - String}\""
    },
    {
      "trigger": "ui-carouselPageIndicatorItem-pagerClicked\tAttr",
      "contents": "pagerClicked=\"${1:ui:carouselPageIndicatorItem - Optional - ui:pagerClicked}\""
    },
    {
      "trigger": "ui-carouselPageIndicatorItem-pagerKeyed\tAttr",
      "contents": "pagerKeyed=\"${1:ui:carouselPageIndicatorItem - Optional - ui:pagerKeyed}\""
    },
    {
      "trigger": "ui-carouselPageIndicatorItem-pageSelected\tAttr",
      "contents": "pageSelected=\"${1:ui:carouselPageIndicatorItem - Optional - ui:carouselPageEvent}\""
    },
    {
      "trigger": "ui-containerManager-registeredContainers\tAttr",
      "contents": "registeredContainers=\"${1:ui:containerManager - Optional - Aura.ComponentDefRef[]}\""
    },
    {
      "trigger": "ui-dataGrid-summary\tAttr",
      "contents": "summary=\"${1:ui:dataGrid - Optional - String}\""
    },
    {
      "trigger": "ui-dataGrid-updateRowAttributes\tAttr",
      "contents": "updateRowAttributes=\"${1:ui:dataGrid - Optional - ui:updateGridRow}\""
    },
    {
      "trigger": "ui-dataGridActionColumn-name\tAttr",
      "contents": "name=\"${1:ui:dataGridActionColumn - Optional - String}\""
    },
    {
      "trigger": "ui-dataGridActionColumn-label\tAttr",
      "contents": "label=\"${1:ui:dataGridActionColumn - Optional - String}\""
    },
    {
      "trigger": "ui-dataGridActionColumn-class\tAttr",
      "contents": "class=\"${1:ui:dataGridActionColumn - Optional - String}\""
    },
    {
      "trigger": "ui-dataGridActionColumn-scope\tAttr",
      "contents": "scope=\"${1:ui:dataGridActionColumn - Optional - String}\""
    },
    {
      "trigger": "ui-dataGridActionColumn-header\tAttr",
      "contents": "header=\"${1:ui:dataGridActionColumn - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-dataGridActionColumn-outputComponent\tAttr",
      "contents": "outputComponent=\"${1:ui:dataGridActionColumn - Optional - Aura.ComponentDefRef[]}\""
    },
    {
      "trigger": "ui-dataGridActionColumn-body\tAttr",
      "contents": "body=\"${1:ui:dataGridActionColumn - Optional - Aura.ComponentDefRef[]}\""
    },
    {
      "trigger": "ui-dataGridColumn-name\tAttr",
      "contents": "name=\"${1:ui:dataGridColumn - Optional - String}\""
    },
    {
      "trigger": "ui-dataGridColumn-label\tAttr",
      "contents": "label=\"${1:ui:dataGridColumn - Optional - String}\""
    },
    {
      "trigger": "ui-dataGridColumn-title\tAttr",
      "contents": "title=\"${1:ui:dataGridColumn - Optional - String}\""
    },
    {
      "trigger": "ui-dataGridColumn-type\tAttr",
      "contents": "type=\"${1:ui:dataGridColumn - Optional - String}\""
    },
    {
      "trigger": "ui-dataGridColumn-sortable\tAttr",
      "contents": "sortable=\"${1:ui:dataGridColumn - Optional - Boolean}\""
    },
    {
      "trigger": "ui-dataGridColumn-disabled\tAttr",
      "contents": "disabled=\"${1:ui:dataGridColumn - Optional - Boolean}\""
    },
    {
      "trigger": "ui-dataGridColumn-required\tAttr",
      "contents": "required=\"${1:ui:dataGridColumn - Optional - Boolean}\""
    },
    {
      "trigger": "ui-dataGridColumn-direction\tAttr",
      "contents": "direction=\"${1:ui:dataGridColumn - Optional - String}\""
    },
    {
      "trigger": "ui-dataGridColumn-initialDirectionOnSort\tAttr",
      "contents": "initialDirectionOnSort=\"${1:ui:dataGridColumn - Optional - String}\""
    },
    {
      "trigger": "ui-dataGridColumn-ascLabel\tAttr",
      "contents": "ascLabel=\"${1:ui:dataGridColumn - Optional - String}\""
    },
    {
      "trigger": "ui-dataGridColumn-descLabel\tAttr",
      "contents": "descLabel=\"${1:ui:dataGridColumn - Optional - String}\""
    },
    {
      "trigger": "ui-dataGridColumn-order\tAttr",
      "contents": "order=\"${1:ui:dataGridColumn - Optional - Integer}\""
    },
    {
      "trigger": "ui-dataGridColumn-scope\tAttr",
      "contents": "scope=\"${1:ui:dataGridColumn - Optional - String}\""
    },
    {
      "trigger": "ui-dataGridColumn-onsortchange\tAttr",
      "contents": "onsortchange=\"${1:ui:dataGridColumn - Optional - Aura.Action}\""
    },
    {
      "trigger": "ui-dataGridColumn-assistiveSortText\tAttr",
      "contents": "assistiveSortText=\"${1:ui:dataGridColumn - Optional - String}\""
    },
    {
      "trigger": "ui-dataGridColumn-width\tAttr",
      "contents": "width=\"${1:ui:dataGridColumn - Optional - Integer}\""
    },
    {
      "trigger": "ui-dataGridColumn-outputComponent\tAttr",
      "contents": "outputComponent=\"${1:ui:dataGridColumn - Optional - Aura.ComponentDefRef[]}\""
    },
    {
      "trigger": "ui-dataGridSelectionColumn-selectAll\tAttr",
      "contents": "selectAll=\"${1:ui:dataGridSelectionColumn - Optional - Boolean}\""
    },
    {
      "trigger": "ui-dataGridSelectionColumn-outputComponent\tAttr",
      "contents": "outputComponent=\"${1:ui:dataGridSelectionColumn - Optional - Aura.ComponentDefRef[]}\""
    },
    {
      "trigger": "ui-dataGridSummaryCell-column\tAttr",
      "contents": "column=\"${1:ui:dataGridSummaryCell - Optional - String}\""
    },
    {
      "trigger": "ui-dataGridSummaryCell-type\tAttr",
      "contents": "type=\"${1:ui:dataGridSummaryCell - Optional - String}\""
    },
    {
      "trigger": "ui-dataGridSummaryCell-items\tAttr",
      "contents": "items=\"${1:ui:dataGridSummaryCell - Optional - List}\""
    },
    {
      "trigger": "ui-dataGridSummaryCell-value\tAttr",
      "contents": "value=\"${1:ui:dataGridSummaryCell - Optional - Integer}\""
    },
    {
      "trigger": "ui-dataGridSummaryCell-outputComponent\tAttr",
      "contents": "outputComponent=\"${1:ui:dataGridSummaryCell - Optional - Aura.ComponentDefRef[]}\""
    },
    {
      "trigger": "ui-dataGridSummaryCell-priv_outputComponent\tAttr",
      "contents": "priv_outputComponent=\"${1:ui:dataGridSummaryCell - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-dataProvider-provide\tAttr",
      "contents": "provide=\"${1:ui:dataProvider - Optional - ui:dataProvide}\""
    },
    {
      "trigger": "ui-dataProvider-onchange\tAttr",
      "contents": "onchange=\"${1:ui:dataProvider - Optional - ui:dataChanged}\""
    },
    {
      "trigger": "ui-dataProvider-error\tAttr",
      "contents": "error=\"${1:ui:dataProvider - Optional - ui:dataProvideError}\""
    },
    {
      "trigger": "ui-dataTable-class\tAttr",
      "contents": "class=\"${1:ui:dataTable - Optional - String}\""
    },
    {
      "trigger": "ui-dataTable-items\tAttr",
      "contents": "items=\"${1:ui:dataTable - Optional - Object[]}\""
    },
    {
      "trigger": "ui-dataTable-noDataText\tAttr",
      "contents": "noDataText=\"${1:ui:dataTable - Optional - String}\""
    },
    {
      "trigger": "ui-dataTable-headerValues\tAttr",
      "contents": "headerValues=\"${1:ui:dataTable - Optional - String[]}\""
    },
    {
      "trigger": "ui-dataTable-striped\tAttr",
      "contents": "striped=\"${1:ui:dataTable - Optional - Boolean}\""
    },
    {
      "trigger": "ui-dataTableColumn-class\tAttr",
      "contents": "class=\"${1:ui:dataTableColumn - Optional - String}\""
    },
    {
      "trigger": "ui-dataTableColumn-scope\tAttr",
      "contents": "scope=\"${1:ui:dataTableColumn - Optional - String}\""
    },
    {
      "trigger": "ui-dataTableColumn-headerValue\tAttr",
      "contents": "headerValue=\"${1:ui:dataTableColumn - Optional - String}\""
    },
    {
      "trigger": "ui-dataTableRow-rowPress\tAttr",
      "contents": "rowPress=\"${1:ui:dataTableRow - Optional - ui:rowPress}\""
    },
    {
      "trigger": "ui-dataWriter-items\tAttr",
      "contents": "items=\"${1:ui:dataWriter - Optional - List}\""
    },
    {
      "trigger": "ui-dataWriter-defaultFields\tAttr",
      "contents": "defaultFields=\"${1:ui:dataWriter - Optional - Map}\""
    },
    {
      "trigger": "ui-dataWriter-sync\tAttr",
      "contents": "sync=\"${1:ui:dataWriter - Optional - Boolean}\""
    },
    {
      "trigger": "ui-dataWriter-write\tAttr",
      "contents": "write=\"${1:ui:dataWriter - Optional - ui:write}\""
    },
    {
      "trigger": "ui-dataWriter-onsuccess\tAttr",
      "contents": "onsuccess=\"${1:ui:dataWriter - Optional - ui:response}\""
    },
    {
      "trigger": "ui-dataWriter-onerror\tAttr",
      "contents": "onerror=\"${1:ui:dataWriter - Optional - ui:response}\""
    },
    {
      "trigger": "ui-datePicker-hasTime\tAttr",
      "contents": "hasTime=\"${1:ui:datePicker - Optional - Boolean}\""
    },
    {
      "trigger": "ui-datePicker-hours\tAttr",
      "contents": "hours=\"${1:ui:datePicker - Optional - Integer}\""
    },
    {
      "trigger": "ui-datePicker-is24HourFormat\tAttr",
      "contents": "is24HourFormat=\"${1:ui:datePicker - Optional - Boolean}\""
    },
    {
      "trigger": "ui-datePicker-maxYear\tAttr",
      "contents": "maxYear=\"${1:ui:datePicker - Optional - Integer}\""
    },
    {
      "trigger": "ui-datePicker-minYear\tAttr",
      "contents": "minYear=\"${1:ui:datePicker - Optional - Integer}\""
    },
    {
      "trigger": "ui-datePicker-minutes\tAttr",
      "contents": "minutes=\"${1:ui:datePicker - Optional - Integer}\""
    },
    {
      "trigger": "ui-datePicker-value\tAttr",
      "contents": "value=\"${1:ui:datePicker - Optional - String}\""
    },
    {
      "trigger": "ui-datePicker-visible\tAttr",
      "contents": "visible=\"${1:ui:datePicker - Optional - Boolean}\""
    },
    {
      "trigger": "ui-datePicker-_yearListInitialized\tAttr",
      "contents": "_yearListInitialized=\"${1:ui:datePicker - Optional - Boolean}\""
    },
    {
      "trigger": "ui-datePicker-managed\tAttr",
      "contents": "managed=\"${1:ui:datePicker - Optional - Boolean}\""
    },
    {
      "trigger": "ui-datePicker-referenceElement\tAttr",
      "contents": "referenceElement=\"${1:ui:datePicker - Optional - Object}\""
    },
    {
      "trigger": "ui-datePicker-showToday\tAttr",
      "contents": "showToday=\"${1:ui:datePicker - Optional - Boolean}\""
    },
    {
      "trigger": "ui-datePicker-hideOnSelect\tAttr",
      "contents": "hideOnSelect=\"${1:ui:datePicker - Optional - Boolean}\""
    },
    {
      "trigger": "ui-datePicker-setFocus\tAttr",
      "contents": "setFocus=\"${1:ui:datePicker - Optional - Boolean}\""
    },
    {
      "trigger": "ui-datePicker-titleHeadingLevel\tAttr",
      "contents": "titleHeadingLevel=\"${1:ui:datePicker - Optional - String}\""
    },
    {
      "trigger": "ui-datePicker-closeOnClickOut\tAttr",
      "contents": "closeOnClickOut=\"${1:ui:datePicker - Optional - Boolean}\""
    },
    {
      "trigger": "ui-datePicker-_today\tAttr",
      "contents": "_today=\"${1:ui:datePicker - Optional - String}\""
    },
    {
      "trigger": "ui-datePicker-rangeStart\tAttr",
      "contents": "rangeStart=\"${1:ui:datePicker - Optional - String}\""
    },
    {
      "trigger": "ui-datePicker-rangeEnd\tAttr",
      "contents": "rangeEnd=\"${1:ui:datePicker - Optional - String}\""
    },
    {
      "trigger": "ui-datePicker-rangeClass\tAttr",
      "contents": "rangeClass=\"${1:ui:datePicker - Optional - String}\""
    },
    {
      "trigger": "ui-datePicker-selectDate\tAttr",
      "contents": "selectDate=\"${1:ui:datePicker - Optional - ui:selectDate}\""
    },
    {
      "trigger": "ui-datePickerGrid-class\tAttr",
      "contents": "class=\"${1:ui:datePickerGrid - Optional - String}\""
    },
    {
      "trigger": "ui-datePickerGrid-date\tAttr",
      "contents": "date=\"${1:ui:datePickerGrid - Optional - Integer}\""
    },
    {
      "trigger": "ui-datePickerGrid-hasTime\tAttr",
      "contents": "hasTime=\"${1:ui:datePickerGrid - Optional - Boolean}\""
    },
    {
      "trigger": "ui-datePickerGrid-month\tAttr",
      "contents": "month=\"${1:ui:datePickerGrid - Optional - Integer}\""
    },
    {
      "trigger": "ui-datePickerGrid-year\tAttr",
      "contents": "year=\"${1:ui:datePickerGrid - Optional - Integer}\""
    },
    {
      "trigger": "ui-datePickerGrid-selectedDate\tAttr",
      "contents": "selectedDate=\"${1:ui:datePickerGrid - Optional - Date}\""
    },
    {
      "trigger": "ui-datePickerGrid-setFocus\tAttr",
      "contents": "setFocus=\"${1:ui:datePickerGrid - Optional - Boolean}\""
    },
    {
      "trigger": "ui-datePickerGrid-rangeStart\tAttr",
      "contents": "rangeStart=\"${1:ui:datePickerGrid - Optional - String}\""
    },
    {
      "trigger": "ui-datePickerGrid-rangeEnd\tAttr",
      "contents": "rangeEnd=\"${1:ui:datePickerGrid - Optional - String}\""
    },
    {
      "trigger": "ui-datePickerGrid-rangeClass\tAttr",
      "contents": "rangeClass=\"${1:ui:datePickerGrid - Optional - String}\""
    },
    {
      "trigger": "ui-datePickerGrid-_setFocus\tAttr",
      "contents": "_setFocus=\"${1:ui:datePickerGrid - Optional - Boolean}\""
    },
    {
      "trigger": "ui-datePickerGrid-_namesOfWeekdays\tAttr",
      "contents": "_namesOfWeekdays=\"${1:ui:datePickerGrid - Optional - List}\""
    },
    {
      "trigger": "ui-datePickerGrid-_today\tAttr",
      "contents": "_today=\"${1:ui:datePickerGrid - Optional - String}\""
    },
    {
      "trigger": "ui-datePickerGrid-hide\tAttr",
      "contents": "hide=\"${1:ui:datePickerGrid - Optional - ui:change}\""
    },
    {
      "trigger": "ui-datePickerGrid-focus\tAttr",
      "contents": "focus=\"${1:ui:datePickerGrid - Optional - ui:focus}\""
    },
    {
      "trigger": "ui-datePickerGrid-selectDate\tAttr",
      "contents": "selectDate=\"${1:ui:datePickerGrid - Optional - ui:selectDate}\""
    },
    {
      "trigger": "ui-datePickerGrid-updateCalendar\tAttr",
      "contents": "updateCalendar=\"${1:ui:datePickerGrid - Optional - ui:updateCalendar}\""
    },
    {
      "trigger": "ui-datePickerGrid-updateCalendarTitle\tAttr",
      "contents": "updateCalendarTitle=\"${1:ui:datePickerGrid - Optional - ui:updateCalendarTitle}\""
    },
    {
      "trigger": "ui-dayInMonthCell-ariaSelected\tAttr",
      "contents": "ariaSelected=\"${1:ui:dayInMonthCell - Optional - Boolean}\""
    },
    {
      "trigger": "ui-dayInMonthCell-tabIndex\tAttr",
      "contents": "tabIndex=\"${1:ui:dayInMonthCell - Optional - Integer}\""
    },
    {
      "trigger": "ui-dayInMonthCell-value\tAttr",
      "contents": "value=\"${1:ui:dayInMonthCell - Optional - Date}\""
    },
    {
      "trigger": "ui-dialog-ariaRole\tAttr",
      "contents": "ariaRole=\"${1:ui:dialog - Optional - String}\""
    },
    {
      "trigger": "ui-dialog-autoFocus\tAttr",
      "contents": "autoFocus=\"${1:ui:dialog - Optional - Boolean}\""
    },
    {
      "trigger": "ui-dialog-buttons\tAttr",
      "contents": "buttons=\"${1:ui:dialog - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-dialog-clickOutToClose\tAttr",
      "contents": "clickOutToClose=\"${1:ui:dialog - Optional - Boolean}\""
    },
    {
      "trigger": "ui-dialog-description\tAttr",
      "contents": "description=\"${1:ui:dialog - Required - String}\""
    },
    {
      "trigger": "ui-dialog-isModal\tAttr",
      "contents": "isModal=\"${1:ui:dialog - Optional - Boolean}\""
    },
    {
      "trigger": "ui-dialog-title\tAttr",
      "contents": "title=\"${1:ui:dialog - Required - String}\""
    },
    {
      "trigger": "ui-dialog-width\tAttr",
      "contents": "width=\"${1:ui:dialog - Optional - String}\""
    },
    {
      "trigger": "ui-dialog-theme\tAttr",
      "contents": "theme=\"${1:ui:dialog - Optional - String}\""
    },
    {
      "trigger": "ui-dialog-closeClass\tAttr",
      "contents": "closeClass=\"${1:ui:dialog - Optional - String}\""
    },
    {
      "trigger": "ui-dialog-closeLabel\tAttr",
      "contents": "closeLabel=\"${1:ui:dialog - Optional - String}\""
    },
    {
      "trigger": "ui-dialog-closeTitle\tAttr",
      "contents": "closeTitle=\"${1:ui:dialog - Optional - String}\""
    },
    {
      "trigger": "ui-dialog-dialogClass\tAttr",
      "contents": "dialogClass=\"${1:ui:dialog - Optional - String}\""
    },
    {
      "trigger": "ui-dialog-maskClass\tAttr",
      "contents": "maskClass=\"${1:ui:dialog - Optional - String}\""
    },
    {
      "trigger": "ui-dialog-_handlerConfig\tAttr",
      "contents": "_handlerConfig=\"${1:ui:dialog - Optional - Object}\""
    },
    {
      "trigger": "ui-dialog-close\tAttr",
      "contents": "close=\"${1:ui:dialog - Optional - ui:closeDialog}\""
    },
    {
      "trigger": "ui-dialogButtons-defaultButtons\tAttr",
      "contents": "defaultButtons=\"${1:ui:dialogButtons - Optional - String}\""
    },
    {
      "trigger": "ui-dialogButtons-confirmClass\tAttr",
      "contents": "confirmClass=\"${1:ui:dialogButtons - Optional - String}\""
    },
    {
      "trigger": "ui-dialogButtons-confirmLabel\tAttr",
      "contents": "confirmLabel=\"${1:ui:dialogButtons - Optional - String}\""
    },
    {
      "trigger": "ui-dialogButtons-confirmTitle\tAttr",
      "contents": "confirmTitle=\"${1:ui:dialogButtons - Optional - String}\""
    },
    {
      "trigger": "ui-dialogButtons-cancelClass\tAttr",
      "contents": "cancelClass=\"${1:ui:dialogButtons - Optional - String}\""
    },
    {
      "trigger": "ui-dialogButtons-cancelLabel\tAttr",
      "contents": "cancelLabel=\"${1:ui:dialogButtons - Optional - String}\""
    },
    {
      "trigger": "ui-dialogButtons-cancelTitle\tAttr",
      "contents": "cancelTitle=\"${1:ui:dialogButtons - Optional - String}\""
    },
    {
      "trigger": "ui-dialogButtons-_parentDialog\tAttr",
      "contents": "_parentDialog=\"${1:ui:dialogButtons - Optional - Object}\""
    },
    {
      "trigger": "ui-dialogManager-_activeDialog\tAttr",
      "contents": "_activeDialog=\"${1:ui:dialogManager - Optional - Object}\""
    },
    {
      "trigger": "ui-dragAndDropAccessibility-draggables\tAttr",
      "contents": "draggables=\"${1:ui:dragAndDropAccessibility - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-dragAndDropAccessibility-draggables\tAttr",
      "contents": "draggables=\"${1:ui:dragAndDropAccessibility - Required - Aura.Component[]}\""
    },
    {
      "trigger": "ui-dragAndDropAccessibility-target\tAttr",
      "contents": "target=\"${1:ui:dragAndDropAccessibility - Required - Object}\""
    },
    {
      "trigger": "ui-dragAndDropAccessibilityMenu-class\tAttr",
      "contents": "class=\"${1:ui:dragAndDropAccessibilityMenu - Optional - String}\""
    },
    {
      "trigger": "ui-dragAndDropAccessibilityMenu-draggables\tAttr",
      "contents": "draggables=\"${1:ui:dragAndDropAccessibilityMenu - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-dragAndDropAccessibilityMenu-dropzoneMenu\tAttr",
      "contents": "dropzoneMenu=\"${1:ui:dragAndDropAccessibilityMenu - Optional - List}\""
    },
    {
      "trigger": "ui-draggable-type\tAttr",
      "contents": "type=\"${1:ui:draggable - Optional - String}\""
    },
    {
      "trigger": "ui-draggable-dataTransfer\tAttr",
      "contents": "dataTransfer=\"${1:ui:draggable - Optional - Map}\""
    },
    {
      "trigger": "ui-draggable-class\tAttr",
      "contents": "class=\"${1:ui:draggable - Optional - String}\""
    },
    {
      "trigger": "ui-draggable-dragClass\tAttr",
      "contents": "dragClass=\"${1:ui:draggable - Optional - String}\""
    },
    {
      "trigger": "ui-draggable-dragAccessibilityClass\tAttr",
      "contents": "dragAccessibilityClass=\"${1:ui:draggable - Optional - String}\""
    },
    {
      "trigger": "ui-draggable-dragImageClass\tAttr",
      "contents": "dragImageClass=\"${1:ui:draggable - Optional - String}\""
    },
    {
      "trigger": "ui-draggable-disable\tAttr",
      "contents": "disable=\"${1:ui:draggable - Optional - Boolean}\""
    },
    {
      "trigger": "ui-draggable-ariaGrabbed\tAttr",
      "contents": "ariaGrabbed=\"${1:ui:draggable - Optional - boolean}\""
    },
    {
      "trigger": "ui-draggable-accessibilityComponent\tAttr",
      "contents": "accessibilityComponent=\"${1:ui:draggable - Optional - String}\""
    },
    {
      "trigger": "ui-draggable-isSuccessful\tAttr",
      "contents": "isSuccessful=\"${1:ui:draggable - Optional - Boolean}\""
    },
    {
      "trigger": "ui-draggable-target\tAttr",
      "contents": "target=\"${1:ui:draggable - Optional - Object}\""
    },
    {
      "trigger": "ui-draggable-isValid\tAttr",
      "contents": "isValid=\"${1:ui:draggable - Optional - Boolean}\""
    },
    {
      "trigger": "ui-draggable-isInAccessibilityMode\tAttr",
      "contents": "isInAccessibilityMode=\"${1:ui:draggable - Optional - Boolean}\""
    },
    {
      "trigger": "ui-draggable-dragStart\tAttr",
      "contents": "dragStart=\"${1:ui:draggable - Optional - ui:dragEvent}\""
    },
    {
      "trigger": "ui-draggable-dragEnd\tAttr",
      "contents": "dragEnd=\"${1:ui:draggable - Optional - ui:dragEvent}\""
    },
    {
      "trigger": "ui-draggable-dropComplete\tAttr",
      "contents": "dropComplete=\"${1:ui:draggable - Optional - ui:dragEvent}\""
    },
    {
      "trigger": "ui-dropzone-types\tAttr",
      "contents": "types=\"${1:ui:dropzone - Optional - String[]}\""
    },
    {
      "trigger": "ui-dropzone-dragOverInterval\tAttr",
      "contents": "dragOverInterval=\"${1:ui:dropzone - Optional - Integer}\""
    },
    {
      "trigger": "ui-dropzone-class\tAttr",
      "contents": "class=\"${1:ui:dropzone - Optional - String}\""
    },
    {
      "trigger": "ui-dropzone-dragOverClass\tAttr",
      "contents": "dragOverClass=\"${1:ui:dropzone - Optional - String}\""
    },
    {
      "trigger": "ui-dropzone-dragOverAccessibilityClass\tAttr",
      "contents": "dragOverAccessibilityClass=\"${1:ui:dropzone - Optional - String}\""
    },
    {
      "trigger": "ui-dropzone-label\tAttr",
      "contents": "label=\"${1:ui:dropzone - Optional - String}\""
    },
    {
      "trigger": "ui-dropzone-ariaDropEffect\tAttr",
      "contents": "ariaDropEffect=\"${1:ui:dropzone - Optional - String}\""
    },
    {
      "trigger": "ui-dropzone-target\tAttr",
      "contents": "target=\"${1:ui:dropzone - Optional - Object}\""
    },
    {
      "trigger": "ui-dropzone-isInAccessibilityMode\tAttr",
      "contents": "isInAccessibilityMode=\"${1:ui:dropzone - Optional - Boolean}\""
    },
    {
      "trigger": "ui-dropzone-target\tAttr",
      "contents": "target=\"${1:ui:dropzone - Optional - Object}\""
    },
    {
      "trigger": "ui-dropzone-isInAccessibilityMode\tAttr",
      "contents": "isInAccessibilityMode=\"${1:ui:dropzone - Optional - Boolean}\""
    },
    {
      "trigger": "ui-dropzone-target\tAttr",
      "contents": "target=\"${1:ui:dropzone - Optional - Object}\""
    },
    {
      "trigger": "ui-dropzone-dragComponents\tAttr",
      "contents": "dragComponents=\"${1:ui:dropzone - Required - Aura.Component[]}\""
    },
    {
      "trigger": "ui-dropzone-isInAccessibilityMode\tAttr",
      "contents": "isInAccessibilityMode=\"${1:ui:dropzone - Optional - Boolean}\""
    },
    {
      "trigger": "ui-dropzone-dragEnter\tAttr",
      "contents": "dragEnter=\"${1:ui:dropzone - Optional - ui:dragEvent}\""
    },
    {
      "trigger": "ui-dropzone-dragOver\tAttr",
      "contents": "dragOver=\"${1:ui:dropzone - Optional - ui:dragEvent}\""
    },
    {
      "trigger": "ui-dropzone-dragLeave\tAttr",
      "contents": "dragLeave=\"${1:ui:dropzone - Optional - ui:dragEvent}\""
    },
    {
      "trigger": "ui-dropzone-drop\tAttr",
      "contents": "drop=\"${1:ui:dropzone - Optional - ui:dragEvent}\""
    },
    {
      "trigger": "ui-image-title\tAttr",
      "contents": "title=\"${1:ui:image - Optional - String}\""
    },
    {
      "trigger": "ui-image-imageType\tAttr",
      "contents": "imageType=\"${1:ui:image - Optional - String}\""
    },
    {
      "trigger": "ui-image-src\tAttr",
      "contents": "src=\"${1:ui:image - Optional - String}\""
    },
    {
      "trigger": "ui-image-class\tAttr",
      "contents": "class=\"${1:ui:image - Optional - String}\""
    },
    {
      "trigger": "ui-image-href\tAttr",
      "contents": "href=\"${1:ui:image - Optional - String}\""
    },
    {
      "trigger": "ui-image-linkClass\tAttr",
      "contents": "linkClass=\"${1:ui:image - Optional - String}\""
    },
    {
      "trigger": "ui-image-alt\tAttr",
      "contents": "alt=\"${1:ui:image - Optional - String}\""
    },
    {
      "trigger": "ui-image-target\tAttr",
      "contents": "target=\"${1:ui:image - Optional - String}\""
    },
    {
      "trigger": "ui-image-onload\tAttr",
      "contents": "onload=\"${1:ui:image - Optional - ui:response}\""
    },
    {
      "trigger": "ui-image-onerror\tAttr",
      "contents": "onerror=\"${1:ui:image - Optional - ui:response}\""
    },
    {
      "trigger": "ui-infiniteList-enableRowSwipe\tAttr",
      "contents": "enableRowSwipe=\"${1:ui:infiniteList - Optional - Boolean}\""
    },
    {
      "trigger": "ui-infiniteList-onRowOpen\tAttr",
      "contents": "onRowOpen=\"${1:ui:infiniteList - Optional - ui:openRow}\""
    },
    {
      "trigger": "ui-infiniteList-onRowClose\tAttr",
      "contents": "onRowClose=\"${1:ui:infiniteList - Optional - ui:closeRow}\""
    },
    {
      "trigger": "ui-infiniteListRow-class\tAttr",
      "contents": "class=\"${1:ui:infiniteListRow - Optional - String}\""
    },
    {
      "trigger": "ui-infiniteListRow-swipeBody\tAttr",
      "contents": "swipeBody=\"${1:ui:infiniteListRow - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-infiniteListRow-open\tAttr",
      "contents": "open=\"${1:ui:infiniteListRow - Optional - ui:open}\""
    },
    {
      "trigger": "ui-infiniteListRow-close\tAttr",
      "contents": "close=\"${1:ui:infiniteListRow - Optional - ui:close}\""
    },
    {
      "trigger": "ui-input-disableDoubleClicks\tAttr",
      "contents": "disableDoubleClicks=\"${1:ui:input - Optional - Boolean}\""
    },
    {
      "trigger": "ui-input-showErrors\tAttr",
      "contents": "showErrors=\"${1:ui:input - Optional - Boolean}\""
    },
    {
      "trigger": "ui-input-errors\tAttr",
      "contents": "errors=\"${1:ui:input - Optional - Object[]}\""
    },
    {
      "trigger": "ui-input-errorComponent\tAttr",
      "contents": "errorComponent=\"${1:ui:input - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-input-type\tAttr",
      "contents": "type=\"${1:ui:input - Optional - String}\""
    },
    {
      "trigger": "ui-input-required\tAttr",
      "contents": "required=\"${1:ui:input - Optional - Boolean}\""
    },
    {
      "trigger": "ui-input-updateOn\tAttr",
      "contents": "updateOn=\"${1:ui:input - Optional - String}\""
    },
    {
      "trigger": "ui-input-value\tAttr",
      "contents": "value=\"${1:ui:input - Optional - String}\""
    },
    {
      "trigger": "ui-input-label\tAttr",
      "contents": "label=\"${1:ui:input - Optional - String}\""
    },
    {
      "trigger": "ui-input-labelClass\tAttr",
      "contents": "labelClass=\"${1:ui:input - Optional - String}\""
    },
    {
      "trigger": "ui-input-labelPosition\tAttr",
      "contents": "labelPosition=\"${1:ui:input - Optional - String}\""
    },
    {
      "trigger": "ui-input-labelTitle\tAttr",
      "contents": "labelTitle=\"${1:ui:input - Optional - String}\""
    },
    {
      "trigger": "ui-input-requiredIndicatorClass\tAttr",
      "contents": "requiredIndicatorClass=\"${1:ui:input - Optional - String}\""
    },
    {
      "trigger": "ui-input-disabled\tAttr",
      "contents": "disabled=\"${1:ui:input - Optional - Boolean}\""
    },
    {
      "trigger": "ui-input-domId\tAttr",
      "contents": "domId=\"${1:ui:input - Optional - String}\""
    },
    {
      "trigger": "ui-input-requiredIndicator\tAttr",
      "contents": "requiredIndicator=\"${1:ui:input - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-input-change\tAttr",
      "contents": "change=\"${1:ui:input - Optional - ui:change}\""
    },
    {
      "trigger": "ui-input-copy\tAttr",
      "contents": "copy=\"${1:ui:input - Optional - ui:copy}\""
    },
    {
      "trigger": "ui-input-cut\tAttr",
      "contents": "cut=\"${1:ui:input - Optional - ui:cut}\""
    },
    {
      "trigger": "ui-input-paste\tAttr",
      "contents": "paste=\"${1:ui:input - Optional - ui:paste}\""
    },
    {
      "trigger": "ui-input-onError\tAttr",
      "contents": "onError=\"${1:ui:input - Optional - ui:validationError}\""
    },
    {
      "trigger": "ui-input-onClearErrors\tAttr",
      "contents": "onClearErrors=\"${1:ui:input - Optional - ui:clearErrors}\""
    },
    {
      "trigger": "ui-input-updateError\tAttr",
      "contents": "updateError=\"${1:ui:input - Optional - ui:updateError}\""
    },
    {
      "trigger": "ui-input-input\tAttr",
      "contents": "input=\"${1:ui:input - Optional - ui:inputEvent}\""
    },
    {
      "trigger": "ui-inputCheckbox-updateOn\tAttr",
      "contents": "updateOn=\"${1:ui:inputCheckbox - Optional - String}\""
    },
    {
      "trigger": "ui-inputDate-placeholder\tAttr",
      "contents": "placeholder=\"${1:ui:inputDate - Optional - String}\""
    },
    {
      "trigger": "ui-inputDate-loadDatePicker\tAttr",
      "contents": "loadDatePicker=\"${1:ui:inputDate - Optional - Boolean}\""
    },
    {
      "trigger": "ui-inputDate-openPicker\tAttr",
      "contents": "openPicker=\"${1:ui:inputDate - Optional - ui:openPicker}\""
    },
    {
      "trigger": "ui-inputDateRange-startInputPlaceholder\tAttr",
      "contents": "startInputPlaceholder=\"${1:ui:inputDateRange - Optional - String}\""
    },
    {
      "trigger": "ui-inputDateRange-endInputPlaceholder\tAttr",
      "contents": "endInputPlaceholder=\"${1:ui:inputDateRange - Optional - String}\""
    },
    {
      "trigger": "ui-inputDateRange-startDate\tAttr",
      "contents": "startDate=\"${1:ui:inputDateRange - Optional - String}\""
    },
    {
      "trigger": "ui-inputDateRange-endDate\tAttr",
      "contents": "endDate=\"${1:ui:inputDateRange - Optional - String}\""
    },
    {
      "trigger": "ui-inputDateTime-useSingleInput\tAttr",
      "contents": "useSingleInput=\"${1:ui:inputDateTime - Optional - Boolean}\""
    },
    {
      "trigger": "ui-inputDateTime-value\tAttr",
      "contents": "value=\"${1:ui:inputDateTime - Optional - String}\""
    },
    {
      "trigger": "ui-inputDateTime-placeholder\tAttr",
      "contents": "placeholder=\"${1:ui:inputDateTime - Optional - String}\""
    },
    {
      "trigger": "ui-inputDateTime-timePlaceholder\tAttr",
      "contents": "timePlaceholder=\"${1:ui:inputDateTime - Optional - String}\""
    },
    {
      "trigger": "ui-inputDateTime-openPicker\tAttr",
      "contents": "openPicker=\"${1:ui:inputDateTime - Optional - ui:openPicker}\""
    },
    {
      "trigger": "ui-inputDefaultError-value\tAttr",
      "contents": "value=\"${1:ui:inputDefaultError - Optional - String[]}\""
    },
    {
      "trigger": "ui-inputDefaultError-errors\tAttr",
      "contents": "errors=\"${1:ui:inputDefaultError - Optional - Object[]}\""
    },
    {
      "trigger": "ui-inputDefaultError-domId\tAttr",
      "contents": "domId=\"${1:ui:inputDefaultError - Optional - String}\""
    },
    {
      "trigger": "ui-inputOption-type\tAttr",
      "contents": "type=\"${1:ui:inputOption - Optional - String}\""
    },
    {
      "trigger": "ui-inputRadio-disabled\tAttr",
      "contents": "disabled=\"${1:ui:inputRadio - Optional - Boolean}\""
    },
    {
      "trigger": "ui-inputRange-min\tAttr",
      "contents": "min=\"${1:ui:inputRange - Optional - Integer}\""
    },
    {
      "trigger": "ui-inputRange-max\tAttr",
      "contents": "max=\"${1:ui:inputRange - Optional - Integer}\""
    },
    {
      "trigger": "ui-inputRange-step\tAttr",
      "contents": "step=\"${1:ui:inputRange - Optional - Integer}\""
    },
    {
      "trigger": "ui-inputRange-value\tAttr",
      "contents": "value=\"${1:ui:inputRange - Optional - Integer}\""
    },
    {
      "trigger": "ui-inputRichText-toolbar\tAttr",
      "contents": "toolbar=\"${1:ui:inputRichText - Optional - String}\""
    },
    {
      "trigger": "ui-inputRichText-customToolbarConfig\tAttr",
      "contents": "customToolbarConfig=\"${1:ui:inputRichText - Optional - Object}\""
    },
    {
      "trigger": "ui-inputRichText-toolbarLocation\tAttr",
      "contents": "toolbarLocation=\"${1:ui:inputRichText - Optional - String}\""
    },
    {
      "trigger": "ui-inputRichText-width\tAttr",
      "contents": "width=\"${1:ui:inputRichText - Optional - String}\""
    },
    {
      "trigger": "ui-inputRichText-height\tAttr",
      "contents": "height=\"${1:ui:inputRichText - Optional - String}\""
    },
    {
      "trigger": "ui-inputRichText-isRichText\tAttr",
      "contents": "isRichText=\"${1:ui:inputRichText - Optional - Boolean}\""
    },
    {
      "trigger": "ui-inputSearch-updateOn\tAttr",
      "contents": "updateOn=\"${1:ui:inputSearch - Optional - String}\""
    },
    {
      "trigger": "ui-inputSearch-type\tAttr",
      "contents": "type=\"${1:ui:inputSearch - Optional - String}\""
    },
    {
      "trigger": "ui-inputSearch-placeholder\tAttr",
      "contents": "placeholder=\"${1:ui:inputSearch - Optional - String}\""
    },
    {
      "trigger": "ui-inputSearch-showClear\tAttr",
      "contents": "showClear=\"${1:ui:inputSearch - Optional - Boolean}\""
    },
    {
      "trigger": "ui-inputSearch-search\tAttr",
      "contents": "search=\"${1:ui:inputSearch - Optional - ui:searchEvent}\""
    },
    {
      "trigger": "ui-inputSelect-options\tAttr",
      "contents": "options=\"${1:ui:inputSelect - Optional - List}\""
    },
    {
      "trigger": "ui-inputSelect-name\tAttr",
      "contents": "name=\"${1:ui:inputSelect - Optional - String}\""
    },
    {
      "trigger": "ui-inputSelect-multiple\tAttr",
      "contents": "multiple=\"${1:ui:inputSelect - Optional - Boolean}\""
    },
    {
      "trigger": "ui-inputSelect-size\tAttr",
      "contents": "size=\"${1:ui:inputSelect - Optional - Integer}\""
    },
    {
      "trigger": "ui-inputSelectOptionGroup-class\tAttr",
      "contents": "class=\"${1:ui:inputSelectOptionGroup - Optional - String}\""
    },
    {
      "trigger": "ui-inputSelectOptionGroup-label\tAttr",
      "contents": "label=\"${1:ui:inputSelectOptionGroup - Optional - String}\""
    },
    {
      "trigger": "ui-inputTextArea-rows\tAttr",
      "contents": "rows=\"${1:ui:inputTextArea - Optional - Integer}\""
    },
    {
      "trigger": "ui-inputTextArea-cols\tAttr",
      "contents": "cols=\"${1:ui:inputTextArea - Optional - Integer}\""
    },
    {
      "trigger": "ui-inputTextArea-readonly\tAttr",
      "contents": "readonly=\"${1:ui:inputTextArea - Optional - Boolean}\""
    },
    {
      "trigger": "ui-inputTextArea-placeholder\tAttr",
      "contents": "placeholder=\"${1:ui:inputTextArea - Optional - String}\""
    },
    {
      "trigger": "ui-inputTextArea-resizable\tAttr",
      "contents": "resizable=\"${1:ui:inputTextArea - Optional - Boolean}\""
    },
    {
      "trigger": "ui-inputTextArea-maxlength\tAttr",
      "contents": "maxlength=\"${1:ui:inputTextArea - Optional - Integer}\""
    },
    {
      "trigger": "ui-inputTextAreaForAutocomplete-autocompleteButton\tAttr",
      "contents": "autocompleteButton=\"${1:ui:inputTextAreaForAutocomplete - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-inputTextAreaForAutocomplete-ariaExpanded\tAttr",
      "contents": "ariaExpanded=\"${1:ui:inputTextAreaForAutocomplete - Optional - String}\""
    },
    {
      "trigger": "ui-inputTextAreaForAutocomplete-ariaActiveDescendant\tAttr",
      "contents": "ariaActiveDescendant=\"${1:ui:inputTextAreaForAutocomplete - Optional - String}\""
    },
    {
      "trigger": "ui-inputTextForAutocomplete-autocompleteButton\tAttr",
      "contents": "autocompleteButton=\"${1:ui:inputTextForAutocomplete - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-inputTextForAutocomplete-ariaExpanded\tAttr",
      "contents": "ariaExpanded=\"${1:ui:inputTextForAutocomplete - Optional - String}\""
    },
    {
      "trigger": "ui-inputTextForAutocomplete-ariaActiveDescendant\tAttr",
      "contents": "ariaActiveDescendant=\"${1:ui:inputTextForAutocomplete - Optional - String}\""
    },
    {
      "trigger": "ui-inputTimePicker-timeFormat\tAttr",
      "contents": "timeFormat=\"${1:ui:inputTimePicker - Optional - String}\""
    },
    {
      "trigger": "ui-inputTimePicker-langLocale\tAttr",
      "contents": "langLocale=\"${1:ui:inputTimePicker - Optional - String}\""
    },
    {
      "trigger": "ui-inputTimePicker-hours\tAttr",
      "contents": "hours=\"${1:ui:inputTimePicker - Optional - Integer}\""
    },
    {
      "trigger": "ui-inputTimePicker-minutes\tAttr",
      "contents": "minutes=\"${1:ui:inputTimePicker - Optional - Integer}\""
    },
    {
      "trigger": "ui-inputTimePicker-interval\tAttr",
      "contents": "interval=\"${1:ui:inputTimePicker - Optional - Integer}\""
    },
    {
      "trigger": "ui-inputTimePicker-visible\tAttr",
      "contents": "visible=\"${1:ui:inputTimePicker - Optional - Boolean}\""
    },
    {
      "trigger": "ui-inputTimePicker-referenceElement\tAttr",
      "contents": "referenceElement=\"${1:ui:inputTimePicker - Optional - Object}\""
    },
    {
      "trigger": "ui-inputTimePicker-_timeListInitialized\tAttr",
      "contents": "_timeListInitialized=\"${1:ui:inputTimePicker - Optional - Boolean}\""
    },
    {
      "trigger": "ui-inputTimePicker-selectDate\tAttr",
      "contents": "selectDate=\"${1:ui:inputTimePicker - Optional - ui:selectDate}\""
    },
    {
      "trigger": "ui-interactive-disabled\tAttr",
      "contents": "disabled=\"${1:ui:interactive - Optional - Boolean}\""
    },
    {
      "trigger": "ui-interactive-disableDoubleClicks\tAttr",
      "contents": "disableDoubleClicks=\"${1:ui:interactive - Optional - Boolean}\""
    },
    {
      "trigger": "ui-interactive-blur\tAttr",
      "contents": "blur=\"${1:ui:interactive - Optional - ui:blur}\""
    },
    {
      "trigger": "ui-interactive-focus\tAttr",
      "contents": "focus=\"${1:ui:interactive - Optional - ui:focus}\""
    },
    {
      "trigger": "ui-interactive-keydown\tAttr",
      "contents": "keydown=\"${1:ui:interactive - Optional - ui:keydown}\""
    },
    {
      "trigger": "ui-interactive-keypress\tAttr",
      "contents": "keypress=\"${1:ui:interactive - Optional - ui:keypress}\""
    },
    {
      "trigger": "ui-interactive-keyup\tAttr",
      "contents": "keyup=\"${1:ui:interactive - Optional - ui:keyup}\""
    },
    {
      "trigger": "ui-interactive-select\tAttr",
      "contents": "select=\"${1:ui:interactive - Optional - ui:select}\""
    },
    {
      "trigger": "ui-label-label\tAttr",
      "contents": "label=\"${1:ui:label - Optional - String}\""
    },
    {
      "trigger": "ui-label-title\tAttr",
      "contents": "title=\"${1:ui:label - Optional - String}\""
    },
    {
      "trigger": "ui-label-class\tAttr",
      "contents": "class=\"${1:ui:label - Optional - String}\""
    },
    {
      "trigger": "ui-label-labelDisplay\tAttr",
      "contents": "labelDisplay=\"${1:ui:label - Optional - Boolean}\""
    },
    {
      "trigger": "ui-label-for\tAttr",
      "contents": "for=\"${1:ui:label - Optional - Object}\""
    },
    {
      "trigger": "ui-label-requiredIndicator\tAttr",
      "contents": "requiredIndicator=\"${1:ui:label - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-listSorter-dataProvider\tAttr",
      "contents": "dataProvider=\"${1:ui:listSorter - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-listSorter-class\tAttr",
      "contents": "class=\"${1:ui:listSorter - Optional - String}\""
    },
    {
      "trigger": "ui-listSorter-title\tAttr",
      "contents": "title=\"${1:ui:listSorter - Optional - String}\""
    },
    {
      "trigger": "ui-listSorter-cancelLabel\tAttr",
      "contents": "cancelLabel=\"${1:ui:listSorter - Optional - String}\""
    },
    {
      "trigger": "ui-listSorter-applyLabel\tAttr",
      "contents": "applyLabel=\"${1:ui:listSorter - Optional - String}\""
    },
    {
      "trigger": "ui-listSorter-visible\tAttr",
      "contents": "visible=\"${1:ui:listSorter - Optional - Boolean}\""
    },
    {
      "trigger": "ui-listSorter-items\tAttr",
      "contents": "items=\"${1:ui:listSorter - Optional - Object[]}\""
    },
    {
      "trigger": "ui-listSorter-defaultSelectedItems\tAttr",
      "contents": "defaultSelectedItems=\"${1:ui:listSorter - Optional - Object}\""
    },
    {
      "trigger": "ui-listSorter-triggerLabel\tAttr",
      "contents": "triggerLabel=\"${1:ui:listSorter - Optional - String}\""
    },
    {
      "trigger": "ui-listSorter-ascendingLabel\tAttr",
      "contents": "ascendingLabel=\"${1:ui:listSorter - Optional - String}\""
    },
    {
      "trigger": "ui-listSorter-descendingLabel\tAttr",
      "contents": "descendingLabel=\"${1:ui:listSorter - Optional - String}\""
    },
    {
      "trigger": "ui-listSorter-trigger\tAttr",
      "contents": "trigger=\"${1:ui:listSorter - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-listSorter-modal\tAttr",
      "contents": "modal=\"${1:ui:listSorter - Optional - Boolean}\""
    },
    {
      "trigger": "ui-listSorter-rowVar\tAttr",
      "contents": "rowVar=\"${1:ui:listSorter - Optional - String}\""
    },
    {
      "trigger": "ui-listSorter-rowDef\tAttr",
      "contents": "rowDef=\"${1:ui:listSorter - Optional - Aura.ComponentDefRef[]}\""
    },
    {
      "trigger": "ui-listSorter-onApply\tAttr",
      "contents": "onApply=\"${1:ui:listSorter - Optional - Aura.Action}\""
    },
    {
      "trigger": "ui-listSorter-onOpen\tAttr",
      "contents": "onOpen=\"${1:ui:listSorter - Optional - Aura.Action}\""
    },
    {
      "trigger": "ui-listSorter-onCancel\tAttr",
      "contents": "onCancel=\"${1:ui:listSorter - Optional - Aura.Action}\""
    },
    {
      "trigger": "ui-listSorter-refresh\tAttr",
      "contents": "refresh=\"${1:ui:listSorter - Optional - ui:refresh}\""
    },
    {
      "trigger": "ui-manifest-lastMod\tAttr",
      "contents": "lastMod=\"${1:ui:manifest - Optional - String}\""
    },
    {
      "trigger": "ui-manifest-resourceURLs\tAttr",
      "contents": "resourceURLs=\"${1:ui:manifest - Optional - String}\""
    },
    {
      "trigger": "ui-menuItem-selected\tAttr",
      "contents": "selected=\"${1:ui:menuItem - Optional - Boolean}\""
    },
    {
      "trigger": "ui-menuItem-type\tAttr",
      "contents": "type=\"${1:ui:menuItem - Optional - String}\""
    },
    {
      "trigger": "ui-menuItem-hideMenuAfterSelected\tAttr",
      "contents": "hideMenuAfterSelected=\"${1:ui:menuItem - Optional - Boolean}\""
    },
    {
      "trigger": "ui-menuItem-label\tAttr",
      "contents": "label=\"${1:ui:menuItem - Optional - String}\""
    },
    {
      "trigger": "ui-menuItem-menuSelect\tAttr",
      "contents": "menuSelect=\"${1:ui:menuItem - Optional - ui:menuSelect}\""
    },
    {
      "trigger": "ui-menuList-menuItems\tAttr",
      "contents": "menuItems=\"${1:ui:menuList - Optional - List}\""
    },
    {
      "trigger": "ui-menuList-visible\tAttr",
      "contents": "visible=\"${1:ui:menuList - Optional - Boolean}\""
    },
    {
      "trigger": "ui-menuList-focusItemIndex\tAttr",
      "contents": "focusItemIndex=\"${1:ui:menuList - Optional - Integer}\""
    },
    {
      "trigger": "ui-menuList-focusTrigger\tAttr",
      "contents": "focusTrigger=\"${1:ui:menuList - Optional - Aura.Action}\""
    },
    {
      "trigger": "ui-menuList-headerText\tAttr",
      "contents": "headerText=\"${1:ui:menuList - Optional - String}\""
    },
    {
      "trigger": "ui-menuList-childMenuItems\tAttr",
      "contents": "childMenuItems=\"${1:ui:menuList - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-menuList-menuCollapse\tAttr",
      "contents": "menuCollapse=\"${1:ui:menuList - Optional - ui:collapse}\""
    },
    {
      "trigger": "ui-menuList-menuExpand\tAttr",
      "contents": "menuExpand=\"${1:ui:menuList - Optional - ui:expand}\""
    },
    {
      "trigger": "ui-menuList-menuSelect\tAttr",
      "contents": "menuSelect=\"${1:ui:menuList - Optional - ui:menuSelect}\""
    },
    {
      "trigger": "ui-menuList-menuFocusChange\tAttr",
      "contents": "menuFocusChange=\"${1:ui:menuList - Optional - ui:menuFocusChange}\""
    },
    {
      "trigger": "ui-menuList-refresh\tAttr",
      "contents": "refresh=\"${1:ui:menuList - Optional - ui:refresh}\""
    },
    {
      "trigger": "ui-menuTrigger-menuTriggerPress\tAttr",
      "contents": "menuTriggerPress=\"${1:ui:menuTrigger - Optional - ui:menuTriggerPress}\""
    },
    {
      "trigger": "ui-menuTriggerLink-label\tAttr",
      "contents": "label=\"${1:ui:menuTriggerLink - Optional - String}\""
    },
    {
      "trigger": "ui-menuTriggerLink-menuTriggerPress\tAttr",
      "contents": "menuTriggerPress=\"${1:ui:menuTriggerLink - Optional - ui:menuTriggerPress}\""
    },
    {
      "trigger": "ui-menuTriggerLink-blur\tAttr",
      "contents": "blur=\"${1:ui:menuTriggerLink - Optional - ui:blur}\""
    },
    {
      "trigger": "ui-menuTriggerLink-focus\tAttr",
      "contents": "focus=\"${1:ui:menuTriggerLink - Optional - ui:focus}\""
    },
    {
      "trigger": "ui-message-title\tAttr",
      "contents": "title=\"${1:ui:message - Optional - String}\""
    },
    {
      "trigger": "ui-message-severity\tAttr",
      "contents": "severity=\"${1:ui:message - Optional - String}\""
    },
    {
      "trigger": "ui-message-closable\tAttr",
      "contents": "closable=\"${1:ui:message - Optional - Boolean}\""
    },
    {
      "trigger": "ui-modal-title\tAttr",
      "contents": "title=\"${1:ui:modal - Optional - String}\""
    },
    {
      "trigger": "ui-modal-titleDisplay\tAttr",
      "contents": "titleDisplay=\"${1:ui:modal - Optional - Boolean}\""
    },
    {
      "trigger": "ui-modal-class\tAttr",
      "contents": "class=\"${1:ui:modal - Optional - String}\""
    },
    {
      "trigger": "ui-modal-startOfDialogLabel\tAttr",
      "contents": "startOfDialogLabel=\"${1:ui:modal - Optional - String}\""
    },
    {
      "trigger": "ui-modal-showCloseButton\tAttr",
      "contents": "showCloseButton=\"${1:ui:modal - Optional - Boolean}\""
    },
    {
      "trigger": "ui-modal-closeButton\tAttr",
      "contents": "closeButton=\"${1:ui:modal - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-modal-closeAction\tAttr",
      "contents": "closeAction=\"${1:ui:modal - Optional - Object}\""
    },
    {
      "trigger": "ui-modal-closeDialogLabel\tAttr",
      "contents": "closeDialogLabel=\"${1:ui:modal - Optional - String}\""
    },
    {
      "trigger": "ui-modal-useTransition\tAttr",
      "contents": "useTransition=\"${1:ui:modal - Optional - Boolean}\""
    },
    {
      "trigger": "ui-modal-animation\tAttr",
      "contents": "animation=\"${1:ui:modal - Optional - String}\""
    },
    {
      "trigger": "ui-modal-closeAnimation\tAttr",
      "contents": "closeAnimation=\"${1:ui:modal - Optional - String}\""
    },
    {
      "trigger": "ui-modal-autoFocus\tAttr",
      "contents": "autoFocus=\"${1:ui:modal - Optional - Boolean}\""
    },
    {
      "trigger": "ui-output-value\tAttr",
      "contents": "value=\"${1:ui:output - Required - Object}\""
    },
    {
      "trigger": "ui-outputCheckbox-value\tAttr",
      "contents": "value=\"${1:ui:outputCheckbox - Required - Boolean}\""
    },
    {
      "trigger": "ui-outputCheckbox-altChecked\tAttr",
      "contents": "altChecked=\"${1:ui:outputCheckbox - Optional - String}\""
    },
    {
      "trigger": "ui-outputCheckbox-altUnchecked\tAttr",
      "contents": "altUnchecked=\"${1:ui:outputCheckbox - Optional - String}\""
    },
    {
      "trigger": "ui-outputCurrency-value\tAttr",
      "contents": "value=\"${1:ui:outputCurrency - Required - Decimal}\""
    },
    {
      "trigger": "ui-outputCurrency-format\tAttr",
      "contents": "format=\"${1:ui:outputCurrency - Optional - String}\""
    },
    {
      "trigger": "ui-outputCurrency-currencyCode\tAttr",
      "contents": "currencyCode=\"${1:ui:outputCurrency - Optional - String}\""
    },
    {
      "trigger": "ui-outputCurrency-currencySymbol\tAttr",
      "contents": "currencySymbol=\"${1:ui:outputCurrency - Optional - String}\""
    },
    {
      "trigger": "ui-outputDate-value\tAttr",
      "contents": "value=\"${1:ui:outputDate - Required - String}\""
    },
    {
      "trigger": "ui-outputDateTime-timezone\tAttr",
      "contents": "timezone=\"${1:ui:outputDateTime - Optional - String}\""
    },
    {
      "trigger": "ui-outputDateTime-value\tAttr",
      "contents": "value=\"${1:ui:outputDateTime - Required - String}\""
    },
    {
      "trigger": "ui-outputEmail-value\tAttr",
      "contents": "value=\"${1:ui:outputEmail - Required - String}\""
    },
    {
      "trigger": "ui-outputMultiSelect-value\tAttr",
      "contents": "value=\"${1:ui:outputMultiSelect - Required - String[]}\""
    },
    {
      "trigger": "ui-outputMultiSelect-delimiter\tAttr",
      "contents": "delimiter=\"${1:ui:outputMultiSelect - Optional - String}\""
    },
    {
      "trigger": "ui-outputNumber-value\tAttr",
      "contents": "value=\"${1:ui:outputNumber - Required - Decimal}\""
    },
    {
      "trigger": "ui-outputNumber-format\tAttr",
      "contents": "format=\"${1:ui:outputNumber - Optional - String}\""
    },
    {
      "trigger": "ui-outputPercent-value\tAttr",
      "contents": "value=\"${1:ui:outputPercent - Required - Decimal}\""
    },
    {
      "trigger": "ui-outputPercent-format\tAttr",
      "contents": "format=\"${1:ui:outputPercent - Optional - String}\""
    },
    {
      "trigger": "ui-outputPercent-valueScale\tAttr",
      "contents": "valueScale=\"${1:ui:outputPercent - Optional - Integer}\""
    },
    {
      "trigger": "ui-outputPhone-value\tAttr",
      "contents": "value=\"${1:ui:outputPhone - Required - String}\""
    },
    {
      "trigger": "ui-outputRichText-value\tAttr",
      "contents": "value=\"${1:ui:outputRichText - Optional - String}\""
    },
    {
      "trigger": "ui-outputRichText-supportedTags\tAttr",
      "contents": "supportedTags=\"${1:ui:outputRichText - Optional - String}\""
    },
    {
      "trigger": "ui-outputRichText-supportedAttrs\tAttr",
      "contents": "supportedAttrs=\"${1:ui:outputRichText - Optional - String}\""
    },
    {
      "trigger": "ui-outputText-value\tAttr",
      "contents": "value=\"${1:ui:outputText - Required - String}\""
    },
    {
      "trigger": "ui-outputText-title\tAttr",
      "contents": "title=\"${1:ui:outputText - Optional - String}\""
    },
    {
      "trigger": "ui-outputTextArea-value\tAttr",
      "contents": "value=\"${1:ui:outputTextArea - Required - String}\""
    },
    {
      "trigger": "ui-outputURL-iconClass\tAttr",
      "contents": "iconClass=\"${1:ui:outputURL - Optional - String}\""
    },
    {
      "trigger": "ui-outputURL-title\tAttr",
      "contents": "title=\"${1:ui:outputURL - Optional - String}\""
    },
    {
      "trigger": "ui-outputURL-value\tAttr",
      "contents": "value=\"${1:ui:outputURL - Required - String}\""
    },
    {
      "trigger": "ui-outputURL-target\tAttr",
      "contents": "target=\"${1:ui:outputURL - Optional - String}\""
    },
    {
      "trigger": "ui-outputURL-alt\tAttr",
      "contents": "alt=\"${1:ui:outputURL - Optional - String}\""
    },
    {
      "trigger": "ui-outputURL-label\tAttr",
      "contents": "label=\"${1:ui:outputURL - Optional - String}\""
    },
    {
      "trigger": "ui-outputURL-disabled\tAttr",
      "contents": "disabled=\"${1:ui:outputURL - Optional - Boolean}\""
    },
    {
      "trigger": "ui-outputURL-stopPropagation\tAttr",
      "contents": "stopPropagation=\"${1:ui:outputURL - Optional - Boolean}\""
    },
    {
      "trigger": "ui-outputURL-fixURL\tAttr",
      "contents": "fixURL=\"${1:ui:outputURL - Optional - Boolean}\""
    },
    {
      "trigger": "ui-outputURL-stopNavigation\tAttr",
      "contents": "stopNavigation=\"${1:ui:outputURL - Optional - Boolean}\""
    },
    {
      "trigger": "ui-outputURL-click\tAttr",
      "contents": "click=\"${1:ui:outputURL - Optional - ui:click}\""
    },
    {
      "trigger": "ui-pager-onPageChange\tAttr",
      "contents": "onPageChange=\"${1:ui:pager - Optional - ui:pagerEvent}\""
    },
    {
      "trigger": "ui-pagerJumpToPage-Labels_Page\tAttr",
      "contents": "Labels_Page=\"${1:ui:pagerJumpToPage - Optional - String}\""
    },
    {
      "trigger": "ui-pagerJumpToPage-Labels_Of\tAttr",
      "contents": "Labels_Of=\"${1:ui:pagerJumpToPage - Optional - String}\""
    },
    {
      "trigger": "ui-pagerNextPrevious-Labels_First\tAttr",
      "contents": "Labels_First=\"${1:ui:pagerNextPrevious - Optional - String}\""
    },
    {
      "trigger": "ui-pagerNextPrevious-Labels_Last\tAttr",
      "contents": "Labels_Last=\"${1:ui:pagerNextPrevious - Optional - String}\""
    },
    {
      "trigger": "ui-pagerNextPrevious-Labels_Next\tAttr",
      "contents": "Labels_Next=\"${1:ui:pagerNextPrevious - Optional - String}\""
    },
    {
      "trigger": "ui-pagerNextPrevious-Labels_Previous\tAttr",
      "contents": "Labels_Previous=\"${1:ui:pagerNextPrevious - Optional - String}\""
    },
    {
      "trigger": "ui-pagerPageInfo-Labels_Of\tAttr",
      "contents": "Labels_Of=\"${1:ui:pagerPageInfo - Optional - String}\""
    },
    {
      "trigger": "ui-pagerPageInfo-Labels_To\tAttr",
      "contents": "Labels_To=\"${1:ui:pagerPageInfo - Optional - String}\""
    },
    {
      "trigger": "ui-pagerPageSize-Labels_All\tAttr",
      "contents": "Labels_All=\"${1:ui:pagerPageSize - Optional - String}\""
    },
    {
      "trigger": "ui-pagerPageSize-Labels_Records\tAttr",
      "contents": "Labels_Records=\"${1:ui:pagerPageSize - Optional - String}\""
    },
    {
      "trigger": "ui-panel-title\tAttr",
      "contents": "title=\"${1:ui:panel - Optional - String}\""
    },
    {
      "trigger": "ui-panel-class\tAttr",
      "contents": "class=\"${1:ui:panel - Optional - String}\""
    },
    {
      "trigger": "ui-panel-titleDisplay\tAttr",
      "contents": "titleDisplay=\"${1:ui:panel - Optional - Boolean}\""
    },
    {
      "trigger": "ui-panel-startOfDialogLabel\tAttr",
      "contents": "startOfDialogLabel=\"${1:ui:panel - Optional - String}\""
    },
    {
      "trigger": "ui-panel-closeOnClickOut\tAttr",
      "contents": "closeOnClickOut=\"${1:ui:panel - Optional - Boolean}\""
    },
    {
      "trigger": "ui-panel-closeAction\tAttr",
      "contents": "closeAction=\"${1:ui:panel - Optional - Object}\""
    },
    {
      "trigger": "ui-panel-showCloseButton\tAttr",
      "contents": "showCloseButton=\"${1:ui:panel - Optional - Boolean}\""
    },
    {
      "trigger": "ui-panel-closeDialogLabel\tAttr",
      "contents": "closeDialogLabel=\"${1:ui:panel - Optional - String}\""
    },
    {
      "trigger": "ui-panel-useTransition\tAttr",
      "contents": "useTransition=\"${1:ui:panel - Optional - Boolean}\""
    },
    {
      "trigger": "ui-panel-animation\tAttr",
      "contents": "animation=\"${1:ui:panel - Optional - String}\""
    },
    {
      "trigger": "ui-panel-closeAnimation\tAttr",
      "contents": "closeAnimation=\"${1:ui:panel - Optional - String}\""
    },
    {
      "trigger": "ui-panel-autoFocus\tAttr",
      "contents": "autoFocus=\"${1:ui:panel - Optional - Boolean}\""
    },
    {
      "trigger": "ui-panel-referenceElementSelector\tAttr",
      "contents": "referenceElementSelector=\"${1:ui:panel - Optional - String}\""
    },
    {
      "trigger": "ui-panel-referenceElement\tAttr",
      "contents": "referenceElement=\"${1:ui:panel - Optional - Object}\""
    },
    {
      "trigger": "ui-panel-direction\tAttr",
      "contents": "direction=\"${1:ui:panel - Optional - String}\""
    },
    {
      "trigger": "ui-panel-showPointer\tAttr",
      "contents": "showPointer=\"${1:ui:panel - Optional - Boolean}\""
    },
    {
      "trigger": "ui-panel-boundingElement\tAttr",
      "contents": "boundingElement=\"${1:ui:panel - Optional - Object}\""
    },
    {
      "trigger": "ui-panel-inside\tAttr",
      "contents": "inside=\"${1:ui:panel - Optional - Boolean}\""
    },
    {
      "trigger": "ui-panel-advancedConfig\tAttr",
      "contents": "advancedConfig=\"${1:ui:panel - Optional - Object}\""
    },
    {
      "trigger": "ui-panel-pad\tAttr",
      "contents": "pad=\"${1:ui:panel - Optional - Integer}\""
    },
    {
      "trigger": "ui-panel-closeButton\tAttr",
      "contents": "closeButton=\"${1:ui:panel - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-panelDialog-closeOnClickOut\tAttr",
      "contents": "closeOnClickOut=\"${1:ui:panelDialog - Optional - Boolean}\""
    },
    {
      "trigger": "ui-panelDialog-showCloseButton\tAttr",
      "contents": "showCloseButton=\"${1:ui:panelDialog - Optional - Boolean}\""
    },
    {
      "trigger": "ui-panelDialog-closeAction\tAttr",
      "contents": "closeAction=\"${1:ui:panelDialog - Optional - Aura.Action}\""
    },
    {
      "trigger": "ui-panelDialog-class\tAttr",
      "contents": "class=\"${1:ui:panelDialog - Optional - String}\""
    },
    {
      "trigger": "ui-panelDialog-animation\tAttr",
      "contents": "animation=\"${1:ui:panelDialog - Optional - String}\""
    },
    {
      "trigger": "ui-panelDialog-title\tAttr",
      "contents": "title=\"${1:ui:panelDialog - Optional - String}\""
    },
    {
      "trigger": "ui-panelDialog-startOfDialogLabel\tAttr",
      "contents": "startOfDialogLabel=\"${1:ui:panelDialog - Optional - String}\""
    },
    {
      "trigger": "ui-panelDialog-closeDialogLabel\tAttr",
      "contents": "closeDialogLabel=\"${1:ui:panelDialog - Optional - String}\""
    },
    {
      "trigger": "ui-panelDialog-detail\tAttr",
      "contents": "detail=\"${1:ui:panelDialog - Optional - String}\""
    },
    {
      "trigger": "ui-panelDialog-icon\tAttr",
      "contents": "icon=\"${1:ui:panelDialog - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-panelDialog-isVisible\tAttr",
      "contents": "isVisible=\"${1:ui:panelDialog - Optional - Boolean}\""
    },
    {
      "trigger": "ui-panelDialog-autoFocus\tAttr",
      "contents": "autoFocus=\"${1:ui:panelDialog - Optional - Boolean}\""
    },
    {
      "trigger": "ui-panelDialog-titleDisplay\tAttr",
      "contents": "titleDisplay=\"${1:ui:panelDialog - Optional - Boolean}\""
    },
    {
      "trigger": "ui-panelDialog-isTransient\tAttr",
      "contents": "isTransient=\"${1:ui:panelDialog - Optional - Boolean}\""
    },
    {
      "trigger": "ui-panelDialog-isModal\tAttr",
      "contents": "isModal=\"${1:ui:panelDialog - Optional - Boolean}\""
    },
    {
      "trigger": "ui-panelDialog-referenceElement\tAttr",
      "contents": "referenceElement=\"${1:ui:panelDialog - Optional - Object}\""
    },
    {
      "trigger": "ui-panelDialog-lastFocusedInput\tAttr",
      "contents": "lastFocusedInput=\"${1:ui:panelDialog - Optional - Object}\""
    },
    {
      "trigger": "ui-panelDialog-callbacks\tAttr",
      "contents": "callbacks=\"${1:ui:panelDialog - Optional - Object}\""
    },
    {
      "trigger": "ui-panelDialog-panelDoneRendering\tAttr",
      "contents": "panelDoneRendering=\"${1:ui:panelDialog - Optional - ui:panelDoneRendering}\""
    },
    {
      "trigger": "ui-panelManager-class\tAttr",
      "contents": "class=\"${1:ui:panelManager - Optional - String}\""
    },
    {
      "trigger": "ui-panelManager-cancelButtonLabel\tAttr",
      "contents": "cancelButtonLabel=\"${1:ui:panelManager - Optional - String}\""
    },
    {
      "trigger": "ui-panelManager2-registeredPanels\tAttr",
      "contents": "registeredPanels=\"${1:ui:panelManager2 - Optional - Aura.ComponentDefRef[]}\""
    },
    {
      "trigger": "ui-panelManager2-useSharedContainer\tAttr",
      "contents": "useSharedContainer=\"${1:ui:panelManager2 - Optional - Boolean}\""
    },
    {
      "trigger": "ui-pill-label\tAttr",
      "contents": "label=\"${1:ui:pill - Optional - String}\""
    },
    {
      "trigger": "ui-pill-id\tAttr",
      "contents": "id=\"${1:ui:pill - Optional - String}\""
    },
    {
      "trigger": "ui-pill-showDelete\tAttr",
      "contents": "showDelete=\"${1:ui:pill - Optional - Boolean}\""
    },
    {
      "trigger": "ui-pill-iconUrl\tAttr",
      "contents": "iconUrl=\"${1:ui:pill - Optional - String}\""
    },
    {
      "trigger": "ui-pill-iconBackgroundColor\tAttr",
      "contents": "iconBackgroundColor=\"${1:ui:pill - Optional - String}\""
    },
    {
      "trigger": "ui-pill-iconAlt\tAttr",
      "contents": "iconAlt=\"${1:ui:pill - Optional - String}\""
    },
    {
      "trigger": "ui-pill-accessibleDeleteLabel\tAttr",
      "contents": "accessibleDeleteLabel=\"${1:ui:pill - Optional - String}\""
    },
    {
      "trigger": "ui-pill-maxCharacters\tAttr",
      "contents": "maxCharacters=\"${1:ui:pill - Optional - Integer}\""
    },
    {
      "trigger": "ui-pill-active\tAttr",
      "contents": "active=\"${1:ui:pill - Optional - Boolean}\""
    },
    {
      "trigger": "ui-pill-onHandledEvent\tAttr",
      "contents": "onHandledEvent=\"${1:ui:pill - Optional - ui:response}\""
    },
    {
      "trigger": "ui-pill-keydown\tAttr",
      "contents": "keydown=\"${1:ui:pill - Optional - ui:keydown}\""
    },
    {
      "trigger": "ui-pill-blur\tAttr",
      "contents": "blur=\"${1:ui:pill - Optional - ui:blur}\""
    },
    {
      "trigger": "ui-pillContainer-items\tAttr",
      "contents": "items=\"${1:ui:pillContainer - Optional - List}\""
    },
    {
      "trigger": "ui-pillContainer-maxAllowed\tAttr",
      "contents": "maxAllowed=\"${1:ui:pillContainer - Optional - Integer}\""
    },
    {
      "trigger": "ui-pillContainer-maxLines\tAttr",
      "contents": "maxLines=\"${1:ui:pillContainer - Optional - Integer}\""
    },
    {
      "trigger": "ui-pillContainer-focusOnInput\tAttr",
      "contents": "focusOnInput=\"${1:ui:pillContainer - Optional - Boolean}\""
    },
    {
      "trigger": "ui-pillContainer-allowRemove\tAttr",
      "contents": "allowRemove=\"${1:ui:pillContainer - Optional - Boolean}\""
    },
    {
      "trigger": "ui-pillContainer-pillInput\tAttr",
      "contents": "pillInput=\"${1:ui:pillContainer - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-pillContainer-showMoreLabel\tAttr",
      "contents": "showMoreLabel=\"${1:ui:pillContainer - Optional - String}\""
    },
    {
      "trigger": "ui-pillContainer-pillFlavor\tAttr",
      "contents": "pillFlavor=\"${1:ui:pillContainer - Optional - String}\""
    },
    {
      "trigger": "ui-pillContainer-assistiveTextLabel\tAttr",
      "contents": "assistiveTextLabel=\"${1:ui:pillContainer - Optional - String}\""
    },
    {
      "trigger": "ui-pillContainer-expanded\tAttr",
      "contents": "expanded=\"${1:ui:pillContainer - Optional - Boolean}\""
    },
    {
      "trigger": "ui-pillContainer-items\tAttr",
      "contents": "items=\"${1:ui:pillContainer - Optional - List}\""
    },
    {
      "trigger": "ui-pillContainer-pillInserted\tAttr",
      "contents": "pillInserted=\"${1:ui:pillContainer - Optional - ui:response}\""
    },
    {
      "trigger": "ui-pillContainer-pillRemoved\tAttr",
      "contents": "pillRemoved=\"${1:ui:pillContainer - Optional - ui:response}\""
    },
    {
      "trigger": "ui-pillContainerAutoComplete-allowNew\tAttr",
      "contents": "allowNew=\"${1:ui:pillContainerAutoComplete - Optional - Boolean}\""
    },
    {
      "trigger": "ui-pillContainerAutoComplete-parameters\tAttr",
      "contents": "parameters=\"${1:ui:pillContainerAutoComplete - Optional - List}\""
    },
    {
      "trigger": "ui-pillContainerAutoCompleteOption-iconUrl\tAttr",
      "contents": "iconUrl=\"${1:ui:pillContainerAutoCompleteOption - Optional - String}\""
    },
    {
      "trigger": "ui-pillContainerAutoCompleteOption-iconBackgroundColor\tAttr",
      "contents": "iconBackgroundColor=\"${1:ui:pillContainerAutoCompleteOption - Optional - String}\""
    },
    {
      "trigger": "ui-popup-popupTriggerPress\tAttr",
      "contents": "popupTriggerPress=\"${1:ui:popup - Optional - ui:popupTriggerPress}\""
    },
    {
      "trigger": "ui-popup-popupTargetShow\tAttr",
      "contents": "popupTargetShow=\"${1:ui:popup - Optional - ui:popupTargetShow}\""
    },
    {
      "trigger": "ui-popup-popupTargetHide\tAttr",
      "contents": "popupTargetHide=\"${1:ui:popup - Optional - ui:popupTargetHide}\""
    },
    {
      "trigger": "ui-popup-popupKeyboardEvent\tAttr",
      "contents": "popupKeyboardEvent=\"${1:ui:popup - Optional - ui:popupKeyboardEvent}\""
    },
    {
      "trigger": "ui-popup-refresh\tAttr",
      "contents": "refresh=\"${1:ui:popup - Optional - ui:refresh}\""
    },
    {
      "trigger": "ui-popupTarget-visible\tAttr",
      "contents": "visible=\"${1:ui:popupTarget - Optional - Boolean}\""
    },
    {
      "trigger": "ui-popupTarget-closeOnTabKey\tAttr",
      "contents": "closeOnTabKey=\"${1:ui:popupTarget - Optional - Boolean}\""
    },
    {
      "trigger": "ui-popupTarget-autoPosition\tAttr",
      "contents": "autoPosition=\"${1:ui:popupTarget - Optional - Boolean}\""
    },
    {
      "trigger": "ui-popupTarget-manualPosition\tAttr",
      "contents": "manualPosition=\"${1:ui:popupTarget - Optional - Boolean}\""
    },
    {
      "trigger": "ui-popupTarget-attachToBody\tAttr",
      "contents": "attachToBody=\"${1:ui:popupTarget - Optional - Boolean}\""
    },
    {
      "trigger": "ui-popupTarget-referenceElement\tAttr",
      "contents": "referenceElement=\"${1:ui:popupTarget - Optional - Object}\""
    },
    {
      "trigger": "ui-popupTarget-curtain\tAttr",
      "contents": "curtain=\"${1:ui:popupTarget - Optional - Boolean}\""
    },
    {
      "trigger": "ui-popupTarget-closeOnClickOutside\tAttr",
      "contents": "closeOnClickOutside=\"${1:ui:popupTarget - Optional - Boolean}\""
    },
    {
      "trigger": "ui-popupTarget-closeOnClickInside\tAttr",
      "contents": "closeOnClickInside=\"${1:ui:popupTarget - Optional - Boolean}\""
    },
    {
      "trigger": "ui-popupTarget-preTransitionClass\tAttr",
      "contents": "preTransitionClass=\"${1:ui:popupTarget - Optional - String}\""
    },
    {
      "trigger": "ui-popupTarget-showNubbin\tAttr",
      "contents": "showNubbin=\"${1:ui:popupTarget - Optional - Boolean}\""
    },
    {
      "trigger": "ui-popupTarget-popupCollapse\tAttr",
      "contents": "popupCollapse=\"${1:ui:popupTarget - Optional - ui:collapse}\""
    },
    {
      "trigger": "ui-popupTarget-popupExpand\tAttr",
      "contents": "popupExpand=\"${1:ui:popupTarget - Optional - ui:expand}\""
    },
    {
      "trigger": "ui-popupTarget-popupKeyboardEvent\tAttr",
      "contents": "popupKeyboardEvent=\"${1:ui:popupTarget - Optional - ui:popupKeyboardEvent}\""
    },
    {
      "trigger": "ui-popupTarget-doClose\tAttr",
      "contents": "doClose=\"${1:ui:popupTarget - Optional - ui:collapse}\""
    },
    {
      "trigger": "ui-popupTrigger-title\tAttr",
      "contents": "title=\"${1:ui:popupTrigger - Optional - String}\""
    },
    {
      "trigger": "ui-popupTrigger-trigger\tAttr",
      "contents": "trigger=\"${1:ui:popupTrigger - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-popupTrigger-stopClickPropagation\tAttr",
      "contents": "stopClickPropagation=\"${1:ui:popupTrigger - Optional - Boolean}\""
    },
    {
      "trigger": "ui-popupTrigger-popupTriggerPress\tAttr",
      "contents": "popupTriggerPress=\"${1:ui:popupTrigger - Optional - ui:popupTriggerPress}\""
    },
    {
      "trigger": "ui-popupTrigger-popupTargetShow\tAttr",
      "contents": "popupTargetShow=\"${1:ui:popupTrigger - Optional - ui:popupTargetShow}\""
    },
    {
      "trigger": "ui-popupTrigger-popupTargetHide\tAttr",
      "contents": "popupTargetHide=\"${1:ui:popupTrigger - Optional - ui:popupTargetHide}\""
    },
    {
      "trigger": "ui-popupTrigger-popupKeyboardEvent\tAttr",
      "contents": "popupKeyboardEvent=\"${1:ui:popupTrigger - Optional - ui:popupKeyboardEvent}\""
    },
    {
      "trigger": "ui-radioToggleMenuItem-isAscending\tAttr",
      "contents": "isAscending=\"${1:ui:radioToggleMenuItem - Optional - Boolean}\""
    },
    {
      "trigger": "ui-radioToggleMenuItem-ascLabel\tAttr",
      "contents": "ascLabel=\"${1:ui:radioToggleMenuItem - Optional - String}\""
    },
    {
      "trigger": "ui-radioToggleMenuItem-descLabel\tAttr",
      "contents": "descLabel=\"${1:ui:radioToggleMenuItem - Optional - String}\""
    },
    {
      "trigger": "ui-resizeObserver-onresize\tAttr",
      "contents": "onresize=\"${1:ui:resizeObserver - Optional - Aura.Action}\""
    },
    {
      "trigger": "ui-scroller-scroll\tAttr",
      "contents": "scroll=\"${1:ui:scroller - Optional - String}\""
    },
    {
      "trigger": "ui-scroller-enabled\tAttr",
      "contents": "enabled=\"${1:ui:scroller - Optional - Boolean}\""
    },
    {
      "trigger": "ui-scroller-useCSSTransition\tAttr",
      "contents": "useCSSTransition=\"${1:ui:scroller - Optional - Boolean}\""
    },
    {
      "trigger": "ui-scroller-useNativeScroller\tAttr",
      "contents": "useNativeScroller=\"${1:ui:scroller - Optional - Boolean}\""
    },
    {
      "trigger": "ui-scroller-preventNestedScroll\tAttr",
      "contents": "preventNestedScroll=\"${1:ui:scroller - Optional - Boolean}\""
    },
    {
      "trigger": "ui-scroller-preventDefaultOnMove\tAttr",
      "contents": "preventDefaultOnMove=\"${1:ui:scroller - Optional - Boolean}\""
    },
    {
      "trigger": "ui-scroller-debounce\tAttr",
      "contents": "debounce=\"${1:ui:scroller - Optional - Boolean}\""
    },
    {
      "trigger": "ui-scroller-snap\tAttr",
      "contents": "snap=\"${1:ui:scroller - Optional - Boolean}\""
    },
    {
      "trigger": "ui-scroller-endless\tAttr",
      "contents": "endless=\"${1:ui:scroller - Optional - Boolean}\""
    },
    {
      "trigger": "ui-scroller-snapType\tAttr",
      "contents": "snapType=\"${1:ui:scroller - Optional - String}\""
    },
    {
      "trigger": "ui-scroller-plugins\tAttr",
      "contents": "plugins=\"${1:ui:scroller - Optional - String}\""
    },
    {
      "trigger": "ui-scroller-gpuOptimization\tAttr",
      "contents": "gpuOptimization=\"${1:ui:scroller - Optional - Boolean}\""
    },
    {
      "trigger": "ui-scroller-bindEventsToScroller\tAttr",
      "contents": "bindEventsToScroller=\"${1:ui:scroller - Optional - Boolean}\""
    },
    {
      "trigger": "ui-scroller-showScrollbars\tAttr",
      "contents": "showScrollbars=\"${1:ui:scroller - Optional - Boolean}\""
    },
    {
      "trigger": "ui-scroller-canShowMore\tAttr",
      "contents": "canShowMore=\"${1:ui:scroller - Optional - Boolean}\""
    },
    {
      "trigger": "ui-scroller-canRefresh\tAttr",
      "contents": "canRefresh=\"${1:ui:scroller - Optional - Boolean}\""
    },
    {
      "trigger": "ui-scroller-width\tAttr",
      "contents": "width=\"${1:ui:scroller - Optional - Integer}\""
    },
    {
      "trigger": "ui-scroller-height\tAttr",
      "contents": "height=\"${1:ui:scroller - Optional - Integer}\""
    },
    {
      "trigger": "ui-scroller-itemWidth\tAttr",
      "contents": "itemWidth=\"${1:ui:scroller - Optional - Integer}\""
    },
    {
      "trigger": "ui-scroller-itemHeight\tAttr",
      "contents": "itemHeight=\"${1:ui:scroller - Optional - Integer}\""
    },
    {
      "trigger": "ui-scroller-class\tAttr",
      "contents": "class=\"${1:ui:scroller - Optional - String}\""
    },
    {
      "trigger": "ui-scroller-scrollContentClass\tAttr",
      "contents": "scrollContentClass=\"${1:ui:scroller - Optional - String}\""
    },
    {
      "trigger": "ui-scroller-minThreshold\tAttr",
      "contents": "minThreshold=\"${1:ui:scroller - Optional - Integer}\""
    },
    {
      "trigger": "ui-scroller-minDirectionThreshold\tAttr",
      "contents": "minDirectionThreshold=\"${1:ui:scroller - Optional - Integer}\""
    },
    {
      "trigger": "ui-scroller-lockOnDirection\tAttr",
      "contents": "lockOnDirection=\"${1:ui:scroller - Optional - String}\""
    },
    {
      "trigger": "ui-scroller-onBeforeScrollStart\tAttr",
      "contents": "onBeforeScrollStart=\"${1:ui:scroller - Optional - Aura.Action}\""
    },
    {
      "trigger": "ui-scroller-onScrollStart\tAttr",
      "contents": "onScrollStart=\"${1:ui:scroller - Optional - Aura.Action}\""
    },
    {
      "trigger": "ui-scroller-onScrollEnd\tAttr",
      "contents": "onScrollEnd=\"${1:ui:scroller - Optional - Aura.Action}\""
    },
    {
      "trigger": "ui-scroller-onScrollMove\tAttr",
      "contents": "onScrollMove=\"${1:ui:scroller - Optional - Aura.Action}\""
    },
    {
      "trigger": "ui-scroller-onPullToShowMore\tAttr",
      "contents": "onPullToShowMore=\"${1:ui:scroller - Optional - Aura.Action}\""
    },
    {
      "trigger": "ui-scroller-onPullToRefresh\tAttr",
      "contents": "onPullToRefresh=\"${1:ui:scroller - Optional - Aura.Action}\""
    },
    {
      "trigger": "ui-scroller-infiniteLoading\tAttr",
      "contents": "infiniteLoading=\"${1:ui:scroller - Optional - Boolean}\""
    },
    {
      "trigger": "ui-scroller-infiniteLoadingThreshold\tAttr",
      "contents": "infiniteLoadingThreshold=\"${1:ui:scroller - Optional - Integer}\""
    },
    {
      "trigger": "ui-scroller-infiniteLoadingDataProvider\tAttr",
      "contents": "infiniteLoadingDataProvider=\"${1:ui:scroller - Optional - Aura.Action}\""
    },
    {
      "trigger": "ui-scroller-infiniteLoadingNoDataLabel\tAttr",
      "contents": "infiniteLoadingNoDataLabel=\"${1:ui:scroller - Optional - String}\""
    },
    {
      "trigger": "ui-scroller-infiniteLoadingIdleLabel\tAttr",
      "contents": "infiniteLoadingIdleLabel=\"${1:ui:scroller - Optional - String}\""
    },
    {
      "trigger": "ui-scroller-infiniteLoadingLoadingLabel\tAttr",
      "contents": "infiniteLoadingLoadingLabel=\"${1:ui:scroller - Optional - String}\""
    },
    {
      "trigger": "ui-scroller-pullToShowMoreClick\tAttr",
      "contents": "pullToShowMoreClick=\"${1:ui:scroller - Optional - String}\""
    },
    {
      "trigger": "ui-scroller-pullToShowMorePull\tAttr",
      "contents": "pullToShowMorePull=\"${1:ui:scroller - Optional - String}\""
    },
    {
      "trigger": "ui-scroller-pullToShowMoreRelease\tAttr",
      "contents": "pullToShowMoreRelease=\"${1:ui:scroller - Optional - String}\""
    },
    {
      "trigger": "ui-scroller-pullToShowMoreUpdating\tAttr",
      "contents": "pullToShowMoreUpdating=\"${1:ui:scroller - Optional - String}\""
    },
    {
      "trigger": "ui-scroller-pullToShowMoreSubtitle\tAttr",
      "contents": "pullToShowMoreSubtitle=\"${1:ui:scroller - Optional - String}\""
    },
    {
      "trigger": "ui-scroller-pullToShowMoreError\tAttr",
      "contents": "pullToShowMoreError=\"${1:ui:scroller - Optional - String}\""
    },
    {
      "trigger": "ui-scroller-pullToRefreshClick\tAttr",
      "contents": "pullToRefreshClick=\"${1:ui:scroller - Optional - String}\""
    },
    {
      "trigger": "ui-scroller-pullToRefreshPull\tAttr",
      "contents": "pullToRefreshPull=\"${1:ui:scroller - Optional - String}\""
    },
    {
      "trigger": "ui-scroller-pullToRefreshRelease\tAttr",
      "contents": "pullToRefreshRelease=\"${1:ui:scroller - Optional - String}\""
    },
    {
      "trigger": "ui-scroller-pullToRefreshUpdating\tAttr",
      "contents": "pullToRefreshUpdating=\"${1:ui:scroller - Optional - String}\""
    },
    {
      "trigger": "ui-scroller-pullToRefreshError\tAttr",
      "contents": "pullToRefreshError=\"${1:ui:scroller - Optional - String}\""
    },
    {
      "trigger": "ui-scroller-pullToRefreshSubtitle\tAttr",
      "contents": "pullToRefreshSubtitle=\"${1:ui:scroller - Optional - String}\""
    },
    {
      "trigger": "ui-scroller-scrollButtonUp\tAttr",
      "contents": "scrollButtonUp=\"${1:ui:scroller - Optional - String}\""
    },
    {
      "trigger": "ui-scroller-scrollButtonDown\tAttr",
      "contents": "scrollButtonDown=\"${1:ui:scroller - Optional - String}\""
    },
    {
      "trigger": "ui-scroller-scrollButtonLeft\tAttr",
      "contents": "scrollButtonLeft=\"${1:ui:scroller - Optional - String}\""
    },
    {
      "trigger": "ui-scroller-scrollButtonRight\tAttr",
      "contents": "scrollButtonRight=\"${1:ui:scroller - Optional - String}\""
    },
    {
      "trigger": "ui-scroller-supportVoiceOver\tAttr",
      "contents": "supportVoiceOver=\"${1:ui:scroller - Optional - Boolean}\""
    },
    {
      "trigger": "ui-scroller-scrollTo\tAttr",
      "contents": "scrollTo=\"${1:ui:scroller - Optional - ui:scrollTo}\""
    },
    {
      "trigger": "ui-scroller-scrollBy\tAttr",
      "contents": "scrollBy=\"${1:ui:scroller - Optional - ui:scrollBy}\""
    },
    {
      "trigger": "ui-scrollerDeprecated-hScroll\tAttr",
      "contents": "hScroll=\"${1:ui:scrollerDeprecated - Optional - Boolean}\""
    },
    {
      "trigger": "ui-scrollerDeprecated-vScroll\tAttr",
      "contents": "vScroll=\"${1:ui:scrollerDeprecated - Optional - Boolean}\""
    },
    {
      "trigger": "ui-scrollerDeprecated-showScrollbars\tAttr",
      "contents": "showScrollbars=\"${1:ui:scrollerDeprecated - Optional - Boolean}\""
    },
    {
      "trigger": "ui-scrollerDeprecated-enabled\tAttr",
      "contents": "enabled=\"${1:ui:scrollerDeprecated - Optional - Boolean}\""
    },
    {
      "trigger": "ui-scrollerDeprecated-useTransform\tAttr",
      "contents": "useTransform=\"${1:ui:scrollerDeprecated - Optional - Boolean}\""
    },
    {
      "trigger": "ui-scrollerDeprecated-useTransition\tAttr",
      "contents": "useTransition=\"${1:ui:scrollerDeprecated - Optional - Boolean}\""
    },
    {
      "trigger": "ui-scrollerDeprecated-snap\tAttr",
      "contents": "snap=\"${1:ui:scrollerDeprecated - Optional - String}\""
    },
    {
      "trigger": "ui-scrollerDeprecated-width\tAttr",
      "contents": "width=\"${1:ui:scrollerDeprecated - Optional - String}\""
    },
    {
      "trigger": "ui-scrollerDeprecated-class\tAttr",
      "contents": "class=\"${1:ui:scrollerDeprecated - Optional - String}\""
    },
    {
      "trigger": "ui-scrollerDeprecated-scrollContentClass\tAttr",
      "contents": "scrollContentClass=\"${1:ui:scrollerDeprecated - Optional - String}\""
    },
    {
      "trigger": "ui-scrollerDeprecated-onBeforeScrollStart\tAttr",
      "contents": "onBeforeScrollStart=\"${1:ui:scrollerDeprecated - Optional - Aura.Action}\""
    },
    {
      "trigger": "ui-scrollerDeprecated-onScrollStart\tAttr",
      "contents": "onScrollStart=\"${1:ui:scrollerDeprecated - Optional - Aura.Action}\""
    },
    {
      "trigger": "ui-scrollerDeprecated-onScrollEnd\tAttr",
      "contents": "onScrollEnd=\"${1:ui:scrollerDeprecated - Optional - Aura.Action}\""
    },
    {
      "trigger": "ui-scrollerDeprecated-onScrollMove\tAttr",
      "contents": "onScrollMove=\"${1:ui:scrollerDeprecated - Optional - Aura.Action}\""
    },
    {
      "trigger": "ui-scrollerDeprecated-onScrollToBottom\tAttr",
      "contents": "onScrollToBottom=\"${1:ui:scrollerDeprecated - Optional - Aura.Action}\""
    },
    {
      "trigger": "ui-scrollerDeprecated-scrollToBottomThreshold\tAttr",
      "contents": "scrollToBottomThreshold=\"${1:ui:scrollerDeprecated - Optional - Integer}\""
    },
    {
      "trigger": "ui-scrollerDeprecated-onPullToShowMore\tAttr",
      "contents": "onPullToShowMore=\"${1:ui:scrollerDeprecated - Optional - Aura.Action}\""
    },
    {
      "trigger": "ui-scrollerDeprecated-pullToShowMorePull\tAttr",
      "contents": "pullToShowMorePull=\"${1:ui:scrollerDeprecated - Optional - String}\""
    },
    {
      "trigger": "ui-scrollerDeprecated-pullToShowMoreRelease\tAttr",
      "contents": "pullToShowMoreRelease=\"${1:ui:scrollerDeprecated - Optional - String}\""
    },
    {
      "trigger": "ui-scrollerDeprecated-pullToShowMoreUpdating\tAttr",
      "contents": "pullToShowMoreUpdating=\"${1:ui:scrollerDeprecated - Optional - String}\""
    },
    {
      "trigger": "ui-scrollerDeprecated-pullToShowMoreSubtitle\tAttr",
      "contents": "pullToShowMoreSubtitle=\"${1:ui:scrollerDeprecated - Optional - String}\""
    },
    {
      "trigger": "ui-scrollerDeprecated-canShowMore\tAttr",
      "contents": "canShowMore=\"${1:ui:scrollerDeprecated - Optional - Boolean}\""
    },
    {
      "trigger": "ui-scrollerDeprecated-onPullToRefresh\tAttr",
      "contents": "onPullToRefresh=\"${1:ui:scrollerDeprecated - Optional - Aura.Action}\""
    },
    {
      "trigger": "ui-scrollerDeprecated-pullToRefreshPull\tAttr",
      "contents": "pullToRefreshPull=\"${1:ui:scrollerDeprecated - Optional - String}\""
    },
    {
      "trigger": "ui-scrollerDeprecated-pullToRefreshRelease\tAttr",
      "contents": "pullToRefreshRelease=\"${1:ui:scrollerDeprecated - Optional - String}\""
    },
    {
      "trigger": "ui-scrollerDeprecated-pullToRefreshUpdating\tAttr",
      "contents": "pullToRefreshUpdating=\"${1:ui:scrollerDeprecated - Optional - String}\""
    },
    {
      "trigger": "ui-scrollerDeprecated-pullToRefreshSubtitle\tAttr",
      "contents": "pullToRefreshSubtitle=\"${1:ui:scrollerDeprecated - Optional - String}\""
    },
    {
      "trigger": "ui-scrollerDeprecated-canRefresh\tAttr",
      "contents": "canRefresh=\"${1:ui:scrollerDeprecated - Optional - Boolean}\""
    },
    {
      "trigger": "ui-scrollerDeprecated-extendedPullContent\tAttr",
      "contents": "extendedPullContent=\"${1:ui:scrollerDeprecated - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-scrollerDeprecated-stopEventPropagation\tAttr",
      "contents": "stopEventPropagation=\"${1:ui:scrollerDeprecated - Optional - Boolean}\""
    },
    {
      "trigger": "ui-scrollerDeprecated-checkDOMChanges\tAttr",
      "contents": "checkDOMChanges=\"${1:ui:scrollerDeprecated - Optional - Boolean}\""
    },
    {
      "trigger": "ui-scrollerDeprecated-bindEventsToScroller\tAttr",
      "contents": "bindEventsToScroller=\"${1:ui:scrollerDeprecated - Optional - Boolean}\""
    },
    {
      "trigger": "ui-scrollerDeprecated-refreshed\tAttr",
      "contents": "refreshed=\"${1:ui:scrollerDeprecated - Optional - ui:scrollerRefreshed}\""
    },
    {
      "trigger": "ui-scrollerDeprecated-scrollTo\tAttr",
      "contents": "scrollTo=\"${1:ui:scrollerDeprecated - Optional - ui:scrollTo}\""
    },
    {
      "trigger": "ui-scrollerDeprecated-scrollBy\tAttr",
      "contents": "scrollBy=\"${1:ui:scrollerDeprecated - Optional - ui:scrollBy}\""
    },
    {
      "trigger": "ui-spinner-isVisible\tAttr",
      "contents": "isVisible=\"${1:ui:spinner - Optional - Boolean}\""
    },
    {
      "trigger": "ui-spinner-class\tAttr",
      "contents": "class=\"${1:ui:spinner - Optional - Boolean}\""
    },
    {
      "trigger": "ui-spinner-toggle\tAttr",
      "contents": "toggle=\"${1:ui:spinner - Optional - ui:toggleLoadingIndicator}\""
    },
    {
      "trigger": "ui-stamp-severity\tAttr",
      "contents": "severity=\"${1:ui:stamp - Optional - String}\""
    },
    {
      "trigger": "ui-stamp-title\tAttr",
      "contents": "title=\"${1:ui:stamp - Optional - String}\""
    },
    {
      "trigger": "ui-stamp-onclick\tAttr",
      "contents": "onclick=\"${1:ui:stamp - Optional - Aura.Action}\""
    },
    {
      "trigger": "ui-tab-class\tAttr",
      "contents": "class=\"${1:ui:tab - Optional - String}\""
    },
    {
      "trigger": "ui-tab-title\tAttr",
      "contents": "title=\"${1:ui:tab - Optional - String}\""
    },
    {
      "trigger": "ui-tab-name\tAttr",
      "contents": "name=\"${1:ui:tab - Optional - String}\""
    },
    {
      "trigger": "ui-tab-icon\tAttr",
      "contents": "icon=\"${1:ui:tab - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-tab-scroll\tAttr",
      "contents": "scroll=\"${1:ui:tab - Optional - Boolean}\""
    },
    {
      "trigger": "ui-tab-active\tAttr",
      "contents": "active=\"${1:ui:tab - Optional - Boolean}\""
    },
    {
      "trigger": "ui-tab-hidden\tAttr",
      "contents": "hidden=\"${1:ui:tab - Optional - Boolean}\""
    },
    {
      "trigger": "ui-tab-iconClass\tAttr",
      "contents": "iconClass=\"${1:ui:tab - Optional - String}\""
    },
    {
      "trigger": "ui-tab-closable\tAttr",
      "contents": "closable=\"${1:ui:tab - Optional - Boolean}\""
    },
    {
      "trigger": "ui-tab-ariaControlId\tAttr",
      "contents": "ariaControlId=\"${1:ui:tab - Optional - String}\""
    },
    {
      "trigger": "ui-tab-beforeActivate\tAttr",
      "contents": "beforeActivate=\"${1:ui:tab - Optional - ui:tabsetEvent}\""
    },
    {
      "trigger": "ui-tab-onActivated\tAttr",
      "contents": "onActivated=\"${1:ui:tab - Optional - ui:tabsetEvent}\""
    },
    {
      "trigger": "ui-tab-setActive\tAttr",
      "contents": "setActive=\"${1:ui:tab - Optional - ui:tabsetEvent}\""
    },
    {
      "trigger": "ui-tabBar-tabs\tAttr",
      "contents": "tabs=\"${1:ui:tabBar - Optional - List}\""
    },
    {
      "trigger": "ui-tabBar-class\tAttr",
      "contents": "class=\"${1:ui:tabBar - Optional - String}\""
    },
    {
      "trigger": "ui-tabBar-useOverflowMenu\tAttr",
      "contents": "useOverflowMenu=\"${1:ui:tabBar - Optional - Boolean}\""
    },
    {
      "trigger": "ui-tabBar-overflowLabel\tAttr",
      "contents": "overflowLabel=\"${1:ui:tabBar - Optional - String}\""
    },
    {
      "trigger": "ui-tabBar-overflowIcon\tAttr",
      "contents": "overflowIcon=\"${1:ui:tabBar - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-tabBar-overflowData\tAttr",
      "contents": "overflowData=\"${1:ui:tabBar - Optional - Map}\""
    },
    {
      "trigger": "ui-tabBar-tabHeaders\tAttr",
      "contents": "tabHeaders=\"${1:ui:tabBar - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-tabBar-setActive\tAttr",
      "contents": "setActive=\"${1:ui:tabBar - Optional - ui:tabsetEvent}\""
    },
    {
      "trigger": "ui-tabBar-addTab\tAttr",
      "contents": "addTab=\"${1:ui:tabBar - Optional - ui:tabsetEvent}\""
    },
    {
      "trigger": "ui-tabBar-closeTab\tAttr",
      "contents": "closeTab=\"${1:ui:tabBar - Optional - ui:tabsetEvent}\""
    },
    {
      "trigger": "ui-tabBar-onTabClosed\tAttr",
      "contents": "onTabClosed=\"${1:ui:tabBar - Optional - ui:tabsetEvent}\""
    },
    {
      "trigger": "ui-tabBar-onTabActivated\tAttr",
      "contents": "onTabActivated=\"${1:ui:tabBar - Optional - ui:tabsetEvent}\""
    },
    {
      "trigger": "ui-tabBar-onTabHover\tAttr",
      "contents": "onTabHover=\"${1:ui:tabBar - Optional - ui:onTabHover}\""
    },
    {
      "trigger": "ui-tabBar-onTabUnhover\tAttr",
      "contents": "onTabUnhover=\"${1:ui:tabBar - Optional - ui:onTabHover}\""
    },
    {
      "trigger": "ui-tabItem-class\tAttr",
      "contents": "class=\"${1:ui:tabItem - Optional - String}\""
    },
    {
      "trigger": "ui-tabItem-title\tAttr",
      "contents": "title=\"${1:ui:tabItem - Optional - String}\""
    },
    {
      "trigger": "ui-tabItem-name\tAttr",
      "contents": "name=\"${1:ui:tabItem - Optional - String}\""
    },
    {
      "trigger": "ui-tabItem-icon\tAttr",
      "contents": "icon=\"${1:ui:tabItem - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-tabItem-active\tAttr",
      "contents": "active=\"${1:ui:tabItem - Optional - Boolean}\""
    },
    {
      "trigger": "ui-tabItem-hidden\tAttr",
      "contents": "hidden=\"${1:ui:tabItem - Optional - Boolean}\""
    },
    {
      "trigger": "ui-tabItem-iconClass\tAttr",
      "contents": "iconClass=\"${1:ui:tabItem - Optional - String}\""
    },
    {
      "trigger": "ui-tabItem-closable\tAttr",
      "contents": "closable=\"${1:ui:tabItem - Optional - Boolean}\""
    },
    {
      "trigger": "ui-tabItem-ariaControlId\tAttr",
      "contents": "ariaControlId=\"${1:ui:tabItem - Optional - String}\""
    },
    {
      "trigger": "ui-tabItem-active\tAttr",
      "contents": "active=\"${1:ui:tabItem - Optional - Boolean}\""
    },
    {
      "trigger": "ui-tabItem-focus\tAttr",
      "contents": "focus=\"${1:ui:tabItem - Optional - Boolean}\""
    },
    {
      "trigger": "ui-tabItem-callback\tAttr",
      "contents": "callback=\"${1:ui:tabItem - Optional - Object}\""
    },
    {
      "trigger": "ui-tabItem-onActivate\tAttr",
      "contents": "onActivate=\"${1:ui:tabItem - Optional - ui:tabsetEvent}\""
    },
    {
      "trigger": "ui-tabItem-onClose\tAttr",
      "contents": "onClose=\"${1:ui:tabItem - Optional - ui:tabsetEvent}\""
    },
    {
      "trigger": "ui-tabItem-onTabHover\tAttr",
      "contents": "onTabHover=\"${1:ui:tabItem - Optional - ui:onTabHover}\""
    },
    {
      "trigger": "ui-tabItem-onTabUnhover\tAttr",
      "contents": "onTabUnhover=\"${1:ui:tabItem - Optional - ui:onTabHover}\""
    },
    {
      "trigger": "ui-tabOverflowMenuItem-class\tAttr",
      "contents": "class=\"${1:ui:tabOverflowMenuItem - Optional - String}\""
    },
    {
      "trigger": "ui-tabOverflowMenuItem-title\tAttr",
      "contents": "title=\"${1:ui:tabOverflowMenuItem - Optional - String}\""
    },
    {
      "trigger": "ui-tabOverflowMenuItem-icon\tAttr",
      "contents": "icon=\"${1:ui:tabOverflowMenuItem - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-tabOverflowMenuItem-active\tAttr",
      "contents": "active=\"${1:ui:tabOverflowMenuItem - Optional - Boolean}\""
    },
    {
      "trigger": "ui-tabOverflowMenuItem-iconClass\tAttr",
      "contents": "iconClass=\"${1:ui:tabOverflowMenuItem - Optional - String}\""
    },
    {
      "trigger": "ui-tabOverflowMenuItem-ariaControlId\tAttr",
      "contents": "ariaControlId=\"${1:ui:tabOverflowMenuItem - Optional - String}\""
    },
    {
      "trigger": "ui-tabOverflowMenuItem-menuItems\tAttr",
      "contents": "menuItems=\"${1:ui:tabOverflowMenuItem - Optional - Object[]}\""
    },
    {
      "trigger": "ui-tabOverflowMenuItem-menuItemCache\tAttr",
      "contents": "menuItemCache=\"${1:ui:tabOverflowMenuItem - Optional - Object}\""
    },
    {
      "trigger": "ui-tabOverflowMenuItem-focusedItemName\tAttr",
      "contents": "focusedItemName=\"${1:ui:tabOverflowMenuItem - Optional - String}\""
    },
    {
      "trigger": "ui-tabOverflowMenuItem-active\tAttr",
      "contents": "active=\"${1:ui:tabOverflowMenuItem - Optional - Boolean}\""
    },
    {
      "trigger": "ui-tabOverflowMenuItem-index\tAttr",
      "contents": "index=\"${1:ui:tabOverflowMenuItem - Optional - Integer}\""
    },
    {
      "trigger": "ui-tabOverflowMenuItem-onTabHover\tAttr",
      "contents": "onTabHover=\"${1:ui:tabOverflowMenuItem - Optional - ui:onTabHover}\""
    },
    {
      "trigger": "ui-tabOverflowMenuItem-onTabUnhover\tAttr",
      "contents": "onTabUnhover=\"${1:ui:tabOverflowMenuItem - Optional - ui:onTabHover}\""
    },
    {
      "trigger": "ui-tabOverflowMenuItem-onTabSelection\tAttr",
      "contents": "onTabSelection=\"${1:ui:tabOverflowMenuItem - Optional - ui:tabsetEvent}\""
    },
    {
      "trigger": "ui-tabOverflowMenuList-forwardWrap\tAttr",
      "contents": "forwardWrap=\"${1:ui:tabOverflowMenuList - Optional - ui:collapse}\""
    },
    {
      "trigger": "ui-tabOverflowMenuList-reverseWrap\tAttr",
      "contents": "reverseWrap=\"${1:ui:tabOverflowMenuList - Optional - ui:collapse}\""
    },
    {
      "trigger": "ui-tabset-tabs\tAttr",
      "contents": "tabs=\"${1:ui:tabset - Optional - List}\""
    },
    {
      "trigger": "ui-tabset-tabItems\tAttr",
      "contents": "tabItems=\"${1:ui:tabset - Optional - List}\""
    },
    {
      "trigger": "ui-tabset-class\tAttr",
      "contents": "class=\"${1:ui:tabset - Optional - String}\""
    },
    {
      "trigger": "ui-tabset-lazyRenderTabs\tAttr",
      "contents": "lazyRenderTabs=\"${1:ui:tabset - Optional - Boolean}\""
    },
    {
      "trigger": "ui-tabset-useOverflowMenu\tAttr",
      "contents": "useOverflowMenu=\"${1:ui:tabset - Optional - Boolean}\""
    },
    {
      "trigger": "ui-tabset-overflowLabel\tAttr",
      "contents": "overflowLabel=\"${1:ui:tabset - Optional - String}\""
    },
    {
      "trigger": "ui-tabset-addTab\tAttr",
      "contents": "addTab=\"${1:ui:tabset - Optional - ui:tabsetEvent}\""
    },
    {
      "trigger": "ui-tabset-removeTab\tAttr",
      "contents": "removeTab=\"${1:ui:tabset - Optional - ui:tabsetEvent}\""
    },
    {
      "trigger": "ui-tabset-activateTab\tAttr",
      "contents": "activateTab=\"${1:ui:tabset - Optional - ui:tabsetEvent}\""
    },
    {
      "trigger": "ui-tabset-getActiveTab\tAttr",
      "contents": "getActiveTab=\"${1:ui:tabset - Optional - ui:tabsetEvent}\""
    },
    {
      "trigger": "ui-tabset-beforeActivate\tAttr",
      "contents": "beforeActivate=\"${1:ui:tabset - Optional - ui:tabsetEvent}\""
    },
    {
      "trigger": "ui-tabset-onActivate\tAttr",
      "contents": "onActivate=\"${1:ui:tabset - Optional - ui:tabsetEvent}\""
    },
    {
      "trigger": "ui-timePicker-hours\tAttr",
      "contents": "hours=\"${1:ui:timePicker - Optional - Integer}\""
    },
    {
      "trigger": "ui-timePicker-is24HourFormat\tAttr",
      "contents": "is24HourFormat=\"${1:ui:timePicker - Optional - Boolean}\""
    },
    {
      "trigger": "ui-timePicker-isValid\tAttr",
      "contents": "isValid=\"${1:ui:timePicker - Optional - Boolean}\""
    },
    {
      "trigger": "ui-timePicker-minutes\tAttr",
      "contents": "minutes=\"${1:ui:timePicker - Optional - Integer}\""
    },
    {
      "trigger": "ui-timePicker-visible\tAttr",
      "contents": "visible=\"${1:ui:timePicker - Optional - Boolean}\""
    },
    {
      "trigger": "ui-toolbar-class\tAttr",
      "contents": "class=\"${1:ui:toolbar - Optional - String}\""
    },
    {
      "trigger": "ui-tooltip-tooltipBody\tAttr",
      "contents": "tooltipBody=\"${1:ui:tooltip - Optional - String}\""
    },
    {
      "trigger": "ui-tooltip-tooltipStyle\tAttr",
      "contents": "tooltipStyle=\"${1:ui:tooltip - Optional - String}\""
    },
    {
      "trigger": "ui-tooltip-disabled\tAttr",
      "contents": "disabled=\"${1:ui:tooltip - Optional - Boolean}\""
    },
    {
      "trigger": "ui-tooltip-advanced\tAttr",
      "contents": "advanced=\"${1:ui:tooltip - Optional - Boolean}\""
    },
    {
      "trigger": "ui-tooltip-trigger\tAttr",
      "contents": "trigger=\"${1:ui:tooltip - Optional - String}\""
    },
    {
      "trigger": "ui-tooltip-triggerClass\tAttr",
      "contents": "triggerClass=\"${1:ui:tooltip - Optional - String}\""
    },
    {
      "trigger": "ui-tooltip-isVisible\tAttr",
      "contents": "isVisible=\"${1:ui:tooltip - Optional - Boolean}\""
    },
    {
      "trigger": "ui-tooltip-fadeOut\tAttr",
      "contents": "fadeOut=\"${1:ui:tooltip - Optional - Boolean}\""
    },
    {
      "trigger": "ui-tooltip-fadeIn\tAttr",
      "contents": "fadeIn=\"${1:ui:tooltip - Optional - Boolean}\""
    },
    {
      "trigger": "ui-tooltip-fadeOutDuration\tAttr",
      "contents": "fadeOutDuration=\"${1:ui:tooltip - Optional - Integer}\""
    },
    {
      "trigger": "ui-tooltip-fadeInDuration\tAttr",
      "contents": "fadeInDuration=\"${1:ui:tooltip - Optional - Integer}\""
    },
    {
      "trigger": "ui-tooltip-delay\tAttr",
      "contents": "delay=\"${1:ui:tooltip - Optional - Integer}\""
    },
    {
      "trigger": "ui-tooltip-class\tAttr",
      "contents": "class=\"${1:ui:tooltip - Optional - String}\""
    },
    {
      "trigger": "ui-tooltip-classList\tAttr",
      "contents": "classList=\"${1:ui:tooltip - Optional - String}\""
    },
    {
      "trigger": "ui-tooltip-tabIndex\tAttr",
      "contents": "tabIndex=\"${1:ui:tooltip - Optional - Integer}\""
    },
    {
      "trigger": "ui-tooltip-tabIndexOverride\tAttr",
      "contents": "tabIndexOverride=\"${1:ui:tooltip - Optional - Integer}\""
    },
    {
      "trigger": "ui-tooltip-direction\tAttr",
      "contents": "direction=\"${1:ui:tooltip - Optional - String}\""
    },
    {
      "trigger": "ui-tooltip-allowFlips\tAttr",
      "contents": "allowFlips=\"${1:ui:tooltip - Optional - Boolean}\""
    },
    {
      "trigger": "ui-tooltip-domId\tAttr",
      "contents": "domId=\"${1:ui:tooltip - Optional - String}\""
    },
    {
      "trigger": "ui-tree-nodes\tAttr",
      "contents": "nodes=\"${1:ui:tree - Optional - java://List<aura.components.ui.TreeNode>}\""
    },
    {
      "trigger": "ui-tree-class\tAttr",
      "contents": "class=\"${1:ui:tree - Optional - String}\""
    },
    {
      "trigger": "ui-tree-activeNode\tAttr",
      "contents": "activeNode=\"${1:ui:tree - Optional - Aura.Component}\""
    },
    {
      "trigger": "ui-tree-getChildren\tAttr",
      "contents": "getChildren=\"${1:ui:tree - Optional - ui:getChildren}\""
    },
    {
      "trigger": "ui-treeNode-href\tAttr",
      "contents": "href=\"${1:ui:treeNode - Optional - String}\""
    },
    {
      "trigger": "ui-treeNode-title\tAttr",
      "contents": "title=\"${1:ui:treeNode - Optional - String}\""
    },
    {
      "trigger": "ui-treeNode-leafClass\tAttr",
      "contents": "leafClass=\"${1:ui:treeNode - Optional - String}\""
    },
    {
      "trigger": "ui-treeNode-class\tAttr",
      "contents": "class=\"${1:ui:treeNode - Optional - String}\""
    },
    {
      "trigger": "ui-treeNode-expanded\tAttr",
      "contents": "expanded=\"${1:ui:treeNode - Optional - Boolean}\""
    },
    {
      "trigger": "ui-treeNode-active\tAttr",
      "contents": "active=\"${1:ui:treeNode - Optional - Boolean}\""
    },
    {
      "trigger": "ui-treeNode-hidden\tAttr",
      "contents": "hidden=\"${1:ui:treeNode - Optional - Boolean}\""
    },
    {
      "trigger": "ui-treeNode-item\tAttr",
      "contents": "item=\"${1:ui:treeNode - Optional - java://org.auraframework.components.ui.TreeNode}\""
    },
    {
      "trigger": "ui-treeNode-getChildren\tAttr",
      "contents": "getChildren=\"${1:ui:treeNode - Optional - ui:getChildren}\""
    },
    {
      "trigger": "ui-underConstruction-short\tAttr",
      "contents": "short=\"${1:ui:underConstruction - Optional - Boolean}\""
    },
    {
      "trigger": "ui-vbox-north\tAttr",
      "contents": "north=\"${1:ui:vbox - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-vbox-south\tAttr",
      "contents": "south=\"${1:ui:vbox - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-vbox-centerClass\tAttr",
      "contents": "centerClass=\"${1:ui:vbox - Optional - String}\""
    },
    {
      "trigger": "ui-virtualDataGrid-sortBy\tAttr",
      "contents": "sortBy=\"${1:ui:virtualDataGrid - Optional - String}\""
    },
    {
      "trigger": "ui-virtualDataGrid-items\tAttr",
      "contents": "items=\"${1:ui:virtualDataGrid - Optional - Object}\""
    },
    {
      "trigger": "ui-virtualDataGrid-widths\tAttr",
      "contents": "widths=\"${1:ui:virtualDataGrid - Optional - Integer[]}\""
    },
    {
      "trigger": "ui-virtualDataGrid-sortBy\tAttr",
      "contents": "sortBy=\"${1:ui:virtualDataGrid - Optional - String}\""
    },
    {
      "trigger": "ui-virtualDataGrid-class\tAttr",
      "contents": "class=\"${1:ui:virtualDataGrid - Optional - String}\""
    },
    {
      "trigger": "ui-virtualDataGrid-items\tAttr",
      "contents": "items=\"${1:ui:virtualDataGrid - Optional - List}\""
    },
    {
      "trigger": "ui-virtualDataGrid-headerColumns\tAttr",
      "contents": "headerColumns=\"${1:ui:virtualDataGrid - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-virtualDataGrid-columns\tAttr",
      "contents": "columns=\"${1:ui:virtualDataGrid - Optional - Aura.ComponentDefRef[]}\""
    },
    {
      "trigger": "ui-virtualDataGrid-columnsEdit\tAttr",
      "contents": "columnsEdit=\"${1:ui:virtualDataGrid - Optional - Aura.ComponentDefRef[]}\""
    },
    {
      "trigger": "ui-virtualDataGrid-dataModel\tAttr",
      "contents": "dataModel=\"${1:ui:virtualDataGrid - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "ui-virtualDataGrid-_dirty\tAttr",
      "contents": "_dirty=\"${1:ui:virtualDataGrid - Optional - Integer}\""
    },
    {
      "trigger": "ui-virtualDataGrid-itemVar\tAttr",
      "contents": "itemVar=\"${1:ui:virtualDataGrid - Optional - String}\""
    },
    {
      "trigger": "ui-virtualDataGrid-_sortBy\tAttr",
      "contents": "_sortBy=\"${1:ui:virtualDataGrid - Optional - String}\""
    },
    {
      "trigger": "ui-virtualDataGrid-useRowHeaders\tAttr",
      "contents": "useRowHeaders=\"${1:ui:virtualDataGrid - Optional - Boolean}\""
    },
    {
      "trigger": "ui-virtualDataGrid-fixedHeader\tAttr",
      "contents": "fixedHeader=\"${1:ui:virtualDataGrid - Optional - Boolean}\""
    },
    {
      "trigger": "ui-virtualDataGrid-enableResizableColumns\tAttr",
      "contents": "enableResizableColumns=\"${1:ui:virtualDataGrid - Optional - Boolean}\""
    },
    {
      "trigger": "ui-virtualDataGrid-resizableColumnsConfig\tAttr",
      "contents": "resizableColumnsConfig=\"${1:ui:virtualDataGrid - Optional - Object}\""
    },
    {
      "trigger": "ui-virtualDataGrid-refresh\tAttr",
      "contents": "refresh=\"${1:ui:virtualDataGrid - Optional - ui:refresh}\""
    },
    {
      "trigger": "ui-virtualDataGrid-gridAction\tAttr",
      "contents": "gridAction=\"${1:ui:virtualDataGrid - Optional - ui:gridAction}\""
    },
    {
      "trigger": "ui-virtualDataGrid-onsort\tAttr",
      "contents": "onsort=\"${1:ui:virtualDataGrid - Optional - ui:sort}\""
    },
    {
      "trigger": "ui-virtualDataGrid-onColumnResize\tAttr",
      "contents": "onColumnResize=\"${1:ui:virtualDataGrid - Optional - ui:resize}\""
    },
    {
      "trigger": "ui-virtualList-_dirty\tAttr",
      "contents": "_dirty=\"${1:ui:virtualList - Optional - Integer}\""
    },
    {
      "trigger": "ui-virtualList-itemTemplate\tAttr",
      "contents": "itemTemplate=\"${1:ui:virtualList - Required - Aura.ComponentDefRef[]}\""
    },
    {
      "trigger": "ui-virtualList-items\tAttr",
      "contents": "items=\"${1:ui:virtualList - Optional - Object[]}\""
    },
    {
      "trigger": "ui-virtualList-forceRender\tAttr",
      "contents": "forceRender=\"${1:ui:virtualList - Optional - Boolean}\""
    },
    {
      "trigger": "ui-virtualList-itemVar\tAttr",
      "contents": "itemVar=\"${1:ui:virtualList - Required - String}\""
    },
    {
      "trigger": "ui-virtualList-dataProvider\tAttr",
      "contents": "dataProvider=\"${1:ui:virtualList - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "actionsTest-beanActionModel-counter\tAttr",
      "contents": "counter=\"${1:actionsTest:beanActionModel - Optional - string}\""
    },
    {
      "trigger": "actionsTest-beanActionModelChild-childCounter\tAttr",
      "contents": "childCounter=\"${1:actionsTest:beanActionModelChild - Optional - string}\""
    },
    {
      "trigger": "actionsTest-chainBoundaryCases-responseOrder\tAttr",
      "contents": "responseOrder=\"${1:actionsTest:chainBoundaryCases - Optional - String}\""
    },
    {
      "trigger": "actionsTest-chainBoundaryCases-callbackCount\tAttr",
      "contents": "callbackCount=\"${1:actionsTest:chainBoundaryCases - Optional - Integer}\""
    },
    {
      "trigger": "actionsTest-chainBoundaryCases-press\tAttr",
      "contents": "press=\"${1:actionsTest:chainBoundaryCases - Optional - ui:press}\""
    },
    {
      "trigger": "actionsTest-chainExternalActions-press\tAttr",
      "contents": "press=\"${1:actionsTest:chainExternalActions - Optional - ui:press}\""
    },
    {
      "trigger": "actionsTest-chainLocalActions-responseOrder\tAttr",
      "contents": "responseOrder=\"${1:actionsTest:chainLocalActions - Optional - String}\""
    },
    {
      "trigger": "actionsTest-chainLocalActions-press\tAttr",
      "contents": "press=\"${1:actionsTest:chainLocalActions - Optional - ui:press}\""
    },
    {
      "trigger": "actionsTest-clientAction-value\tAttr",
      "contents": "value=\"${1:actionsTest:clientAction - Optional - String}\""
    },
    {
      "trigger": "actionsTest-deferredServerAction-result\tAttr",
      "contents": "result=\"${1:actionsTest:deferredServerAction - Optional - String}\""
    },
    {
      "trigger": "actionsTest-deferredServerAction-error\tAttr",
      "contents": "error=\"${1:actionsTest:deferredServerAction - Optional - String}\""
    },
    {
      "trigger": "actionsTest-serverAction-text\tAttr",
      "contents": "text=\"${1:actionsTest:serverAction - Optional - String}\""
    },
    {
      "trigger": "actionsTest-serverAction-errorMessage\tAttr",
      "contents": "errorMessage=\"${1:actionsTest:serverAction - Optional - String}\""
    },
    {
      "trigger": "actionsTest-serverAction-transactionId\tAttr",
      "contents": "transactionId=\"${1:actionsTest:serverAction - Optional - Integer}\""
    },
    {
      "trigger": "actionsTest-transactions-transactionId\tAttr",
      "contents": "transactionId=\"${1:actionsTest:transactions - Optional - string}\""
    },
    {
      "trigger": "actionsTest-transactionsEntry-transactionId\tAttr",
      "contents": "transactionId=\"${1:actionsTest:transactionsEntry - Optional - string}\""
    },
    {
      "trigger": "actionsTest-transactionsEntry-actionId\tAttr",
      "contents": "actionId=\"${1:actionsTest:transactionsEntry - Optional - string}\""
    },
    {
      "trigger": "actionsTest-transactionsEntry-state\tAttr",
      "contents": "state=\"${1:actionsTest:transactionsEntry - Optional - string}\""
    },
    {
      "trigger": "appCache-slate-output\tAttr",
      "contents": "output=\"${1:appCache:slate - Optional - String}\""
    },
    {
      "trigger": "attributesTest-attributeTypes-typeMap\tAttr",
      "contents": "typeMap=\"${1:attributesTest:attributeTypes - Optional - Map}\""
    },
    {
      "trigger": "attributesTest-attributeTypes-typeInteger\tAttr",
      "contents": "typeInteger=\"${1:attributesTest:attributeTypes - Optional - Integer}\""
    },
    {
      "trigger": "attributesTest-attributeTypes-typeString\tAttr",
      "contents": "typeString=\"${1:attributesTest:attributeTypes - Optional - String}\""
    },
    {
      "trigger": "attributesTest-attributeTypes-typeList\tAttr",
      "contents": "typeList=\"${1:attributesTest:attributeTypes - Optional - List}\""
    },
    {
      "trigger": "attributesTest-attributeTypes-typeStringList\tAttr",
      "contents": "typeStringList=\"${1:attributesTest:attributeTypes - Optional - String[]}\""
    },
    {
      "trigger": "attributesTest-attributeTypes-typeMapList\tAttr",
      "contents": "typeMapList=\"${1:attributesTest:attributeTypes - Optional - Map[]}\""
    },
    {
      "trigger": "attributesTest-attributeTypes-typeSet\tAttr",
      "contents": "typeSet=\"${1:attributesTest:attributeTypes - Optional - Set}\""
    },
    {
      "trigger": "attributesTest-customAttributeType-pairAttr\tAttr",
      "contents": "pairAttr=\"${1:attributesTest:customAttributeType - Optional - java://org.auraframework.util.type.CustomPairType}\""
    },
    {
      "trigger": "attributesTest-defaultValue-strAttributeWithNoDefaultValue\tAttr",
      "contents": "strAttributeWithNoDefaultValue=\"${1:attributesTest:defaultValue - Optional - String}\""
    },
    {
      "trigger": "attributesTest-defaultValue-strAttributeWithDefaultValue\tAttr",
      "contents": "strAttributeWithDefaultValue=\"${1:attributesTest:defaultValue - Optional - String}\""
    },
    {
      "trigger": "attributesTest-defaultValue-objAttributeWithNoDefaultValue\tAttr",
      "contents": "objAttributeWithNoDefaultValue=\"${1:attributesTest:defaultValue - Optional - Object}\""
    },
    {
      "trigger": "attributesTest-defaultValue-objAttributeWithDefaultValue\tAttr",
      "contents": "objAttributeWithDefaultValue=\"${1:attributesTest:defaultValue - Optional - Object}\""
    },
    {
      "trigger": "attributesTest-defaultValue-listAttributeWithNoDefaultValue\tAttr",
      "contents": "listAttributeWithNoDefaultValue=\"${1:attributesTest:defaultValue - Optional - Boolean[]}\""
    },
    {
      "trigger": "attributesTest-defaultValue-listAttributeWithDefaultValue\tAttr",
      "contents": "listAttributeWithDefaultValue=\"${1:attributesTest:defaultValue - Optional - Boolean[]}\""
    },
    {
      "trigger": "attributesTest-defaultValue-mapAttributeWithNoDefaultValue\tAttr",
      "contents": "mapAttributeWithNoDefaultValue=\"${1:attributesTest:defaultValue - Optional - Map}\""
    },
    {
      "trigger": "attributesTest-defaultValue-mapAttributeWithDefaultValue\tAttr",
      "contents": "mapAttributeWithDefaultValue=\"${1:attributesTest:defaultValue - Optional - Map}\""
    },
    {
      "trigger": "attributesTest-defaultValue-componentDefault\tAttr",
      "contents": "componentDefault=\"${1:attributesTest:defaultValue - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "attributesTest-defaultValue-booleanDefaultWithNoValue\tAttr",
      "contents": "booleanDefaultWithNoValue=\"${1:attributesTest:defaultValue - Optional - Boolean}\""
    },
    {
      "trigger": "attributesTest-defaultValue-booleanDefaultWithStringTrue\tAttr",
      "contents": "booleanDefaultWithStringTrue=\"${1:attributesTest:defaultValue - Optional - Boolean}\""
    },
    {
      "trigger": "attributesTest-defaultValue-booleanDefaultWithStringFalse\tAttr",
      "contents": "booleanDefaultWithStringFalse=\"${1:attributesTest:defaultValue - Optional - Boolean}\""
    },
    {
      "trigger": "attributesTest-defaultValue-booleanDefaultWithLiteralExpTrue\tAttr",
      "contents": "booleanDefaultWithLiteralExpTrue=\"${1:attributesTest:defaultValue - Optional - Boolean}\""
    },
    {
      "trigger": "attributesTest-defaultValue-booleanDefaultWithLiteralExpFalse\tAttr",
      "contents": "booleanDefaultWithLiteralExpFalse=\"${1:attributesTest:defaultValue - Optional - Boolean}\""
    },
    {
      "trigger": "attributesTest-defaultValue-booleanDefaultWithViewExpTrue\tAttr",
      "contents": "booleanDefaultWithViewExpTrue=\"${1:attributesTest:defaultValue - Optional - Boolean}\""
    },
    {
      "trigger": "attributesTest-defaultValue-booleanDefaultWithViewExpFalse\tAttr",
      "contents": "booleanDefaultWithViewExpFalse=\"${1:attributesTest:defaultValue - Optional - Boolean}\""
    },
    {
      "trigger": "attributesTest-defaultValue-dateDefaultWithNoValue\tAttr",
      "contents": "dateDefaultWithNoValue=\"${1:attributesTest:defaultValue - Optional - Date}\""
    },
    {
      "trigger": "attributesTest-defaultValue-dateDefaultWithString\tAttr",
      "contents": "dateDefaultWithString=\"${1:attributesTest:defaultValue - Optional - Date}\""
    },
    {
      "trigger": "attributesTest-defaultValue-dateDefaultWithLiteralExp\tAttr",
      "contents": "dateDefaultWithLiteralExp=\"${1:attributesTest:defaultValue - Optional - Date}\""
    },
    {
      "trigger": "attributesTest-defaultValue-dateDefaultWithTimeString\tAttr",
      "contents": "dateDefaultWithTimeString=\"${1:attributesTest:defaultValue - Optional - Date}\""
    },
    {
      "trigger": "attributesTest-defaultValue-dateDefaultWithTimeLiteralExp\tAttr",
      "contents": "dateDefaultWithTimeLiteralExp=\"${1:attributesTest:defaultValue - Optional - Date}\""
    },
    {
      "trigger": "attributesTest-defaultValue-dateTimeDefaultWithNoValue\tAttr",
      "contents": "dateTimeDefaultWithNoValue=\"${1:attributesTest:defaultValue - Optional - DateTime}\""
    },
    {
      "trigger": "attributesTest-defaultValue-dateTimeDefaultZero\tAttr",
      "contents": "dateTimeDefaultZero=\"${1:attributesTest:defaultValue - Optional - DateTime}\""
    },
    {
      "trigger": "attributesTest-defaultValue-dateTimeDefaultWithString\tAttr",
      "contents": "dateTimeDefaultWithString=\"${1:attributesTest:defaultValue - Optional - DateTime}\""
    },
    {
      "trigger": "attributesTest-defaultValue-dateTimeDefaultWithLiteralExp\tAttr",
      "contents": "dateTimeDefaultWithLiteralExp=\"${1:attributesTest:defaultValue - Optional - DateTime}\""
    },
    {
      "trigger": "attributesTest-defaultValue-decimalDefaultWithNoValue\tAttr",
      "contents": "decimalDefaultWithNoValue=\"${1:attributesTest:defaultValue - Optional - Decimal}\""
    },
    {
      "trigger": "attributesTest-defaultValue-decimalDefaultWithStringPositiveInt\tAttr",
      "contents": "decimalDefaultWithStringPositiveInt=\"${1:attributesTest:defaultValue - Optional - Decimal}\""
    },
    {
      "trigger": "attributesTest-defaultValue-decimalDefaultWithStringNegativeInt\tAttr",
      "contents": "decimalDefaultWithStringNegativeInt=\"${1:attributesTest:defaultValue - Optional - Decimal}\""
    },
    {
      "trigger": "attributesTest-defaultValue-decimalDefaultWithStringPositiveDecimal\tAttr",
      "contents": "decimalDefaultWithStringPositiveDecimal=\"${1:attributesTest:defaultValue - Optional - Decimal}\""
    },
    {
      "trigger": "attributesTest-defaultValue-decimalDefaultWithStringNegativeDecimal\tAttr",
      "contents": "decimalDefaultWithStringNegativeDecimal=\"${1:attributesTest:defaultValue - Optional - Decimal}\""
    },
    {
      "trigger": "attributesTest-defaultValue-decimalDefaultWithLiteralExpPositiveInt\tAttr",
      "contents": "decimalDefaultWithLiteralExpPositiveInt=\"${1:attributesTest:defaultValue - Optional - Decimal}\""
    },
    {
      "trigger": "attributesTest-defaultValue-decimalDefaultWithLiteralExpNegativeInt\tAttr",
      "contents": "decimalDefaultWithLiteralExpNegativeInt=\"${1:attributesTest:defaultValue - Optional - Decimal}\""
    },
    {
      "trigger": "attributesTest-defaultValue-decimalDefaultWithLiteralExpPositiveDecimal\tAttr",
      "contents": "decimalDefaultWithLiteralExpPositiveDecimal=\"${1:attributesTest:defaultValue - Optional - Decimal}\""
    },
    {
      "trigger": "attributesTest-defaultValue-decimalDefaultWithLiteralExpNegativeDecimal\tAttr",
      "contents": "decimalDefaultWithLiteralExpNegativeDecimal=\"${1:attributesTest:defaultValue - Optional - Decimal}\""
    },
    {
      "trigger": "attributesTest-defaultValue-decimalDefaultWithExpView\tAttr",
      "contents": "decimalDefaultWithExpView=\"${1:attributesTest:defaultValue - Optional - Decimal}\""
    },
    {
      "trigger": "attributesTest-defaultValue-decimalDefaultWithExpression\tAttr",
      "contents": "decimalDefaultWithExpression=\"${1:attributesTest:defaultValue - Optional - Decimal}\""
    },
    {
      "trigger": "attributesTest-defaultValue-doubleDefaultWithNoValue\tAttr",
      "contents": "doubleDefaultWithNoValue=\"${1:attributesTest:defaultValue - Optional - Double}\""
    },
    {
      "trigger": "attributesTest-defaultValue-doubleDefaultWithStringPositiveInt\tAttr",
      "contents": "doubleDefaultWithStringPositiveInt=\"${1:attributesTest:defaultValue - Optional - Double}\""
    },
    {
      "trigger": "attributesTest-defaultValue-doubleDefaultWithStringNegativeInt\tAttr",
      "contents": "doubleDefaultWithStringNegativeInt=\"${1:attributesTest:defaultValue - Optional - Double}\""
    },
    {
      "trigger": "attributesTest-defaultValue-doubleDefaultWithStringPositiveDecimal\tAttr",
      "contents": "doubleDefaultWithStringPositiveDecimal=\"${1:attributesTest:defaultValue - Optional - Double}\""
    },
    {
      "trigger": "attributesTest-defaultValue-doubleDefaultWithStringNegativeDecimal\tAttr",
      "contents": "doubleDefaultWithStringNegativeDecimal=\"${1:attributesTest:defaultValue - Optional - Double}\""
    },
    {
      "trigger": "attributesTest-defaultValue-doubleDefaultWithLiteralExpPositiveInt\tAttr",
      "contents": "doubleDefaultWithLiteralExpPositiveInt=\"${1:attributesTest:defaultValue - Optional - Double}\""
    },
    {
      "trigger": "attributesTest-defaultValue-doubleDefaultWithLiteralExpNegativeInt\tAttr",
      "contents": "doubleDefaultWithLiteralExpNegativeInt=\"${1:attributesTest:defaultValue - Optional - Double}\""
    },
    {
      "trigger": "attributesTest-defaultValue-doubleDefaultWithLiteralExpPositiveDecimal\tAttr",
      "contents": "doubleDefaultWithLiteralExpPositiveDecimal=\"${1:attributesTest:defaultValue - Optional - Double}\""
    },
    {
      "trigger": "attributesTest-defaultValue-doubleDefaultWithLiteralExpNegativeDecimal\tAttr",
      "contents": "doubleDefaultWithLiteralExpNegativeDecimal=\"${1:attributesTest:defaultValue - Optional - Double}\""
    },
    {
      "trigger": "attributesTest-defaultValue-doubleDefaultWithExpView\tAttr",
      "contents": "doubleDefaultWithExpView=\"${1:attributesTest:defaultValue - Optional - Double}\""
    },
    {
      "trigger": "attributesTest-defaultValue-doubleDefaultWithExpression\tAttr",
      "contents": "doubleDefaultWithExpression=\"${1:attributesTest:defaultValue - Optional - Double}\""
    },
    {
      "trigger": "attributesTest-defaultValue-integerDefaultWithNoValue\tAttr",
      "contents": "integerDefaultWithNoValue=\"${1:attributesTest:defaultValue - Optional - Integer}\""
    },
    {
      "trigger": "attributesTest-defaultValue-integerDefaultWithStringPositiveInt\tAttr",
      "contents": "integerDefaultWithStringPositiveInt=\"${1:attributesTest:defaultValue - Optional - Integer}\""
    },
    {
      "trigger": "attributesTest-defaultValue-integerDefaultWithStringNegativeInt\tAttr",
      "contents": "integerDefaultWithStringNegativeInt=\"${1:attributesTest:defaultValue - Optional - Integer}\""
    },
    {
      "trigger": "attributesTest-defaultValue-integerDefaultWithStringPositiveDecimal\tAttr",
      "contents": "integerDefaultWithStringPositiveDecimal=\"${1:attributesTest:defaultValue - Optional - Integer}\""
    },
    {
      "trigger": "attributesTest-defaultValue-integerDefaultWithLiteralExpPositiveInt\tAttr",
      "contents": "integerDefaultWithLiteralExpPositiveInt=\"${1:attributesTest:defaultValue - Optional - Integer}\""
    },
    {
      "trigger": "attributesTest-defaultValue-integerDefaultWithLiteralExpNegativeInt\tAttr",
      "contents": "integerDefaultWithLiteralExpNegativeInt=\"${1:attributesTest:defaultValue - Optional - Integer}\""
    },
    {
      "trigger": "attributesTest-defaultValue-integerDefaultWithExpView\tAttr",
      "contents": "integerDefaultWithExpView=\"${1:attributesTest:defaultValue - Optional - Integer}\""
    },
    {
      "trigger": "attributesTest-defaultValue-integerDefaultWithExpression\tAttr",
      "contents": "integerDefaultWithExpression=\"${1:attributesTest:defaultValue - Optional - Integer}\""
    },
    {
      "trigger": "attributesTest-defaultValue-longDefaultWithNoValue\tAttr",
      "contents": "longDefaultWithNoValue=\"${1:attributesTest:defaultValue - Optional - Long}\""
    },
    {
      "trigger": "attributesTest-defaultValue-longDefaultWithStringPositiveInt\tAttr",
      "contents": "longDefaultWithStringPositiveInt=\"${1:attributesTest:defaultValue - Optional - Long}\""
    },
    {
      "trigger": "attributesTest-defaultValue-longDefaultWithStringNegativeInt\tAttr",
      "contents": "longDefaultWithStringNegativeInt=\"${1:attributesTest:defaultValue - Optional - Long}\""
    },
    {
      "trigger": "attributesTest-defaultValue-longDefaultWithStringPositiveDecimal\tAttr",
      "contents": "longDefaultWithStringPositiveDecimal=\"${1:attributesTest:defaultValue - Optional - Long}\""
    },
    {
      "trigger": "attributesTest-defaultValue-longDefaultWithLiteralExpPositiveInt\tAttr",
      "contents": "longDefaultWithLiteralExpPositiveInt=\"${1:attributesTest:defaultValue - Optional - Long}\""
    },
    {
      "trigger": "attributesTest-defaultValue-longDefaultWithLiteralExpNegativeInt\tAttr",
      "contents": "longDefaultWithLiteralExpNegativeInt=\"${1:attributesTest:defaultValue - Optional - Long}\""
    },
    {
      "trigger": "attributesTest-defaultValue-longDefaultWithExpView\tAttr",
      "contents": "longDefaultWithExpView=\"${1:attributesTest:defaultValue - Optional - Long}\""
    },
    {
      "trigger": "attributesTest-defaultValue-longDefaultWithExpression\tAttr",
      "contents": "longDefaultWithExpression=\"${1:attributesTest:defaultValue - Optional - Long}\""
    },
    {
      "trigger": "attributesTest-defaultValue-stringDefaultWithNoValue\tAttr",
      "contents": "stringDefaultWithNoValue=\"${1:attributesTest:defaultValue - Optional - String}\""
    },
    {
      "trigger": "attributesTest-defaultValue-stringDefaultWithString\tAttr",
      "contents": "stringDefaultWithString=\"${1:attributesTest:defaultValue - Optional - String}\""
    },
    {
      "trigger": "attributesTest-defaultValue-stringDefaultWithStringEmptyString\tAttr",
      "contents": "stringDefaultWithStringEmptyString=\"${1:attributesTest:defaultValue - Optional - String}\""
    },
    {
      "trigger": "attributesTest-defaultValue-stringDefaultWithLiteralExp\tAttr",
      "contents": "stringDefaultWithLiteralExp=\"${1:attributesTest:defaultValue - Optional - String}\""
    },
    {
      "trigger": "attributesTest-defaultValue-stringDefaultWithLiteralExpEmptyString\tAttr",
      "contents": "stringDefaultWithLiteralExpEmptyString=\"${1:attributesTest:defaultValue - Optional - String}\""
    },
    {
      "trigger": "attributesTest-defaultValue-stringDefaultWithExpView\tAttr",
      "contents": "stringDefaultWithExpView=\"${1:attributesTest:defaultValue - Optional - String}\""
    },
    {
      "trigger": "attributesTest-defaultValue-stringDefaultWithExpression\tAttr",
      "contents": "stringDefaultWithExpression=\"${1:attributesTest:defaultValue - Optional - String}\""
    },
    {
      "trigger": "attributesTest-defaultValue-stringDefaultWithExpGVP\tAttr",
      "contents": "stringDefaultWithExpGVP=\"${1:attributesTest:defaultValue - Optional - String}\""
    },
    {
      "trigger": "attributesTest-defaultValue-setDefaultWithEmpty\tAttr",
      "contents": "setDefaultWithEmpty=\"${1:attributesTest:defaultValue - Optional - Set}\""
    },
    {
      "trigger": "attributesTest-defaultValue-setDefaultWithString\tAttr",
      "contents": "setDefaultWithString=\"${1:attributesTest:defaultValue - Optional - Set}\""
    },
    {
      "trigger": "attributesTest-defaultValue-setDefaultWithBracketString\tAttr",
      "contents": "setDefaultWithBracketString=\"${1:attributesTest:defaultValue - Optional - Set}\""
    },
    {
      "trigger": "attributesTest-defaultValue-setDefaultWithStringContainBracket\tAttr",
      "contents": "setDefaultWithStringContainBracket=\"${1:attributesTest:defaultValue - Optional - Set}\""
    },
    {
      "trigger": "attributesTest-defaultValueChild-booleanDefaultInherit\tAttr",
      "contents": "booleanDefaultInherit=\"${1:attributesTest:defaultValueChild - Optional - Boolean}\""
    },
    {
      "trigger": "attributesTest-defaultValueChild-decimalDefaultInherit\tAttr",
      "contents": "decimalDefaultInherit=\"${1:attributesTest:defaultValueChild - Optional - Decimal}\""
    },
    {
      "trigger": "attributesTest-defaultValueChild-doubleDefaultInherit\tAttr",
      "contents": "doubleDefaultInherit=\"${1:attributesTest:defaultValueChild - Optional - Double}\""
    },
    {
      "trigger": "attributesTest-defaultValueChild-integerDefaultInherit\tAttr",
      "contents": "integerDefaultInherit=\"${1:attributesTest:defaultValueChild - Optional - Integer}\""
    },
    {
      "trigger": "attributesTest-defaultValueChild-longDefaultInherit\tAttr",
      "contents": "longDefaultInherit=\"${1:attributesTest:defaultValueChild - Optional - Long}\""
    },
    {
      "trigger": "attributesTest-defaultValueChild-stringDefaultInherit\tAttr",
      "contents": "stringDefaultInherit=\"${1:attributesTest:defaultValueChild - Optional - String}\""
    },
    {
      "trigger": "attributesTest-defaultValueChild-objectDefaultInherit\tAttr",
      "contents": "objectDefaultInherit=\"${1:attributesTest:defaultValueChild - Optional - Object}\""
    },
    {
      "trigger": "attributesTest-defaultValueChild-mapDefaultInherit\tAttr",
      "contents": "mapDefaultInherit=\"${1:attributesTest:defaultValueChild - Optional - Map}\""
    },
    {
      "trigger": "attributesTest-defaultValueChild-listDefaultInherit\tAttr",
      "contents": "listDefaultInherit=\"${1:attributesTest:defaultValueChild - Optional - List}\""
    },
    {
      "trigger": "attributesTest-parent-SimpleAttribute\tAttr",
      "contents": "SimpleAttribute=\"${1:attributesTest:parent - Optional - String}\""
    },
    {
      "trigger": "attributesTest-passByReference-stringByReference\tAttr",
      "contents": "stringByReference=\"${1:attributesTest:passByReference - Optional - String}\""
    },
    {
      "trigger": "attributesTest-passByReference-intByReference\tAttr",
      "contents": "intByReference=\"${1:attributesTest:passByReference - Optional - Integer}\""
    },
    {
      "trigger": "attributesTest-passByReference-listByReference\tAttr",
      "contents": "listByReference=\"${1:attributesTest:passByReference - Optional - List}\""
    },
    {
      "trigger": "attributesTest-passByReference-mapByReference\tAttr",
      "contents": "mapByReference=\"${1:attributesTest:passByReference - Optional - Map}\""
    },
    {
      "trigger": "attributesTest-passByReference-objectWithList\tAttr",
      "contents": "objectWithList=\"${1:attributesTest:passByReference - Optional - Map}\""
    },
    {
      "trigger": "attributesTest-passByReferenceInner-intAttribute\tAttr",
      "contents": "intAttribute=\"${1:attributesTest:passByReferenceInner - Optional - Integer}\""
    },
    {
      "trigger": "attributesTest-passByReferenceInner-listAttribute\tAttr",
      "contents": "listAttribute=\"${1:attributesTest:passByReferenceInner - Optional - List}\""
    },
    {
      "trigger": "attributesTest-passByReferenceInner-mapAttribute\tAttr",
      "contents": "mapAttribute=\"${1:attributesTest:passByReferenceInner - Optional - Map}\""
    },
    {
      "trigger": "attributesTest-passByReferenceInner-objectAttribute\tAttr",
      "contents": "objectAttribute=\"${1:attributesTest:passByReferenceInner - Optional - Map}\""
    },
    {
      "trigger": "attributesTest-passByValue-initValue\tAttr",
      "contents": "initValue=\"${1:attributesTest:passByValue - Optional - String}\""
    },
    {
      "trigger": "attributesTest-passByValue-booleanValue\tAttr",
      "contents": "booleanValue=\"${1:attributesTest:passByValue - Optional - Boolean}\""
    },
    {
      "trigger": "attributesTest-passByValue-numberValue\tAttr",
      "contents": "numberValue=\"${1:attributesTest:passByValue - Optional - Double}\""
    },
    {
      "trigger": "attributesTest-passByValue-stringValue\tAttr",
      "contents": "stringValue=\"${1:attributesTest:passByValue - Optional - String}\""
    },
    {
      "trigger": "attributesTest-passByValue-map\tAttr",
      "contents": "map=\"${1:attributesTest:passByValue - Optional - Map}\""
    },
    {
      "trigger": "attributesTest-passByValue-listValue\tAttr",
      "contents": "listValue=\"${1:attributesTest:passByValue - Optional - List}\""
    },
    {
      "trigger": "attributesTest-passByValue-mapValue\tAttr",
      "contents": "mapValue=\"${1:attributesTest:passByValue - Optional - Map}\""
    },
    {
      "trigger": "attributesTest-passByValue-changeEventTriggered\tAttr",
      "contents": "changeEventTriggered=\"${1:attributesTest:passByValue - Optional - boolean}\""
    },
    {
      "trigger": "attributesTest-passByValue-pairAttr\tAttr",
      "contents": "pairAttr=\"${1:attributesTest:passByValue - Optional - java://org.auraframework.util.type.CustomPairType}\""
    },
    {
      "trigger": "attributesTest-passByValueInner-renderCount\tAttr",
      "contents": "renderCount=\"${1:attributesTest:passByValueInner - Optional - Integer}\""
    },
    {
      "trigger": "attributesTest-passByValueInner-rerenderCount\tAttr",
      "contents": "rerenderCount=\"${1:attributesTest:passByValueInner - Optional - Integer}\""
    },
    {
      "trigger": "attributesTest-passByValueInner-booleanValue\tAttr",
      "contents": "booleanValue=\"${1:attributesTest:passByValueInner - Optional - Boolean}\""
    },
    {
      "trigger": "attributesTest-passByValueInner-numberValue\tAttr",
      "contents": "numberValue=\"${1:attributesTest:passByValueInner - Optional - Double}\""
    },
    {
      "trigger": "attributesTest-passByValueInner-stringValue\tAttr",
      "contents": "stringValue=\"${1:attributesTest:passByValueInner - Optional - String}\""
    },
    {
      "trigger": "attributesTest-passByValueInner-listValue\tAttr",
      "contents": "listValue=\"${1:attributesTest:passByValueInner - Optional - List}\""
    },
    {
      "trigger": "attributesTest-passByValueInner-mapValue\tAttr",
      "contents": "mapValue=\"${1:attributesTest:passByValueInner - Optional - Map}\""
    },
    {
      "trigger": "attributesTest-passByValueInner-changeEventTriggered\tAttr",
      "contents": "changeEventTriggered=\"${1:attributesTest:passByValueInner - Optional - boolean}\""
    },
    {
      "trigger": "attributesTest-passByValueInner-pairAttr\tAttr",
      "contents": "pairAttr=\"${1:attributesTest:passByValueInner - Optional - java://org.auraframework.util.type.CustomPairType}\""
    },
    {
      "trigger": "attributesTest-serializeTo-both\tAttr",
      "contents": "both=\"${1:attributesTest:serializeTo - Optional - String}\""
    },
    {
      "trigger": "attributesTest-serializeTo-server\tAttr",
      "contents": "server=\"${1:attributesTest:serializeTo - Optional - String}\""
    },
    {
      "trigger": "attributesTest-serializeTo-none\tAttr",
      "contents": "none=\"${1:attributesTest:serializeTo - Optional - String}\""
    },
    {
      "trigger": "attributesTest-serializeTo-bothDefault\tAttr",
      "contents": "bothDefault=\"${1:attributesTest:serializeTo - Optional - String}\""
    },
    {
      "trigger": "attributesTest-serializeTo-serverDefault\tAttr",
      "contents": "serverDefault=\"${1:attributesTest:serializeTo - Optional - String}\""
    },
    {
      "trigger": "attributesTest-serializeTo-noneDefault\tAttr",
      "contents": "noneDefault=\"${1:attributesTest:serializeTo - Optional - String}\""
    },
    {
      "trigger": "attributesTest-setValue-componentDefault\tAttr",
      "contents": "componentDefault=\"${1:attributesTest:setValue - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "attributesTest-setValue-componentDefault2\tAttr",
      "contents": "componentDefault2=\"${1:attributesTest:setValue - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "attributesTest-setValue-mapAttributeWithDefaultValue\tAttr",
      "contents": "mapAttributeWithDefaultValue=\"${1:attributesTest:setValue - Optional - Map}\""
    },
    {
      "trigger": "attributesTest-setValue-objAttributeWithDefaultValue\tAttr",
      "contents": "objAttributeWithDefaultValue=\"${1:attributesTest:setValue - Optional - Object}\""
    },
    {
      "trigger": "attributesTest-setValue-listAttributeWithDefaultValue\tAttr",
      "contents": "listAttributeWithDefaultValue=\"${1:attributesTest:setValue - Optional - List}\""
    },
    {
      "trigger": "attributesTest-setValue-arrayAttributeWithDefaultValue\tAttr",
      "contents": "arrayAttributeWithDefaultValue=\"${1:attributesTest:setValue - Optional - Boolean[]}\""
    },
    {
      "trigger": "attributesTest-setValue-longDefaultWithStringPositiveInt\tAttr",
      "contents": "longDefaultWithStringPositiveInt=\"${1:attributesTest:setValue - Optional - Long}\""
    },
    {
      "trigger": "attributesTest-setValue-integerDefaultWithStringPositiveInt\tAttr",
      "contents": "integerDefaultWithStringPositiveInt=\"${1:attributesTest:setValue - Optional - Integer}\""
    },
    {
      "trigger": "attributesTest-setValue-doubleDefaultWithStringPositiveInt\tAttr",
      "contents": "doubleDefaultWithStringPositiveInt=\"${1:attributesTest:setValue - Optional - Double}\""
    },
    {
      "trigger": "attributesTest-setValue-decimalDefaultWithStringPositiveInt\tAttr",
      "contents": "decimalDefaultWithStringPositiveInt=\"${1:attributesTest:setValue - Optional - Decimal}\""
    },
    {
      "trigger": "attributesTest-setValue-dateTimeDefaultWithString\tAttr",
      "contents": "dateTimeDefaultWithString=\"${1:attributesTest:setValue - Optional - DateTime}\""
    },
    {
      "trigger": "attributesTest-setValue-dateDefaultWithString\tAttr",
      "contents": "dateDefaultWithString=\"${1:attributesTest:setValue - Optional - Date}\""
    },
    {
      "trigger": "attributesTest-setValue-stringDefaultWithString\tAttr",
      "contents": "stringDefaultWithString=\"${1:attributesTest:setValue - Optional - String}\""
    },
    {
      "trigger": "attributesTest-setValue-booleanDefaultWithStringFalse\tAttr",
      "contents": "booleanDefaultWithStringFalse=\"${1:attributesTest:setValue - Optional - Boolean}\""
    },
    {
      "trigger": "attributesTest-simpleValue-strAttribute\tAttr",
      "contents": "strAttribute=\"${1:attributesTest:simpleValue - Optional - String}\""
    },
    {
      "trigger": "attributesTest-simpleValue-intAttribute\tAttr",
      "contents": "intAttribute=\"${1:attributesTest:simpleValue - Optional - Integer}\""
    },
    {
      "trigger": "auraStorageTest-actionsStorageTest-actionsStorageOn\tAttr",
      "contents": "actionsStorageOn=\"${1:auraStorageTest:actionsStorageTest - Optional - Boolean}\""
    },
    {
      "trigger": "auraStorageTest-initTest-clearStorageOnInit\tAttr",
      "contents": "clearStorageOnInit=\"${1:auraStorageTest:initTest - Optional - Boolean}\""
    },
    {
      "trigger": "auraStorageTest-initTest-defaultExpiration\tAttr",
      "contents": "defaultExpiration=\"${1:auraStorageTest:initTest - Optional - Integer}\""
    },
    {
      "trigger": "auraStorageTest-initTest-defaultAutoRefreshInterval\tAttr",
      "contents": "defaultAutoRefreshInterval=\"${1:auraStorageTest:initTest - Optional - Integer}\""
    },
    {
      "trigger": "auraStorageTest-initTest-persistent\tAttr",
      "contents": "persistent=\"${1:auraStorageTest:initTest - Optional - Boolean}\""
    },
    {
      "trigger": "auraStorageTest-initTest-version\tAttr",
      "contents": "version=\"${1:auraStorageTest:initTest - Optional - String}\""
    },
    {
      "trigger": "auraStorageTest-initTest-host\tAttr",
      "contents": "host=\"${1:auraStorageTest:initTest - Optional - String}\""
    },
    {
      "trigger": "auraStorageTest-initTest-actionStatus\tAttr",
      "contents": "actionStatus=\"${1:auraStorageTest:initTest - Optional - String}\""
    },
    {
      "trigger": "auraStorageTest-initTest-dupNamedStorage\tAttr",
      "contents": "dupNamedStorage=\"${1:auraStorageTest:initTest - Optional - Boolean}\""
    },
    {
      "trigger": "auraStorageTest-isolationTest-status\tAttr",
      "contents": "status=\"${1:auraStorageTest:isolationTest - Optional - String}\""
    },
    {
      "trigger": "auraStorageTest-isolationTest-items\tAttr",
      "contents": "items=\"${1:auraStorageTest:isolationTest - Optional - Object}\""
    },
    {
      "trigger": "auraStorageTest-isolationTest-isolationKey\tAttr",
      "contents": "isolationKey=\"${1:auraStorageTest:isolationTest - Optional - String}\""
    },
    {
      "trigger": "auraStorageTest-isolationTest-storageItemValue\tAttr",
      "contents": "storageItemValue=\"${1:auraStorageTest:isolationTest - Optional - String}\""
    },
    {
      "trigger": "auraStorageTest-newComponent-defaultExpiration\tAttr",
      "contents": "defaultExpiration=\"${1:auraStorageTest:newComponent - Optional - Integer}\""
    },
    {
      "trigger": "auraStorageTest-newComponent-defaultAutoRefreshInterval\tAttr",
      "contents": "defaultAutoRefreshInterval=\"${1:auraStorageTest:newComponent - Optional - Integer}\""
    },
    {
      "trigger": "auraStorageTest-playerFacet-name\tAttr",
      "contents": "name=\"${1:auraStorageTest:playerFacet - Optional - String}\""
    },
    {
      "trigger": "auraStorageTest-playerFacet-nickName\tAttr",
      "contents": "nickName=\"${1:auraStorageTest:playerFacet - Optional - String}\""
    },
    {
      "trigger": "auraStorageTest-serverStorableTest-responseOrder\tAttr",
      "contents": "responseOrder=\"${1:auraStorageTest:serverStorableTest - Optional - String}\""
    },
    {
      "trigger": "auraStorageTest-serverStorableTest-defaultExpiration\tAttr",
      "contents": "defaultExpiration=\"${1:auraStorageTest:serverStorableTest - Optional - Integer}\""
    },
    {
      "trigger": "auraStorageTest-serverStorableTest-defaultAutoRefreshInterval\tAttr",
      "contents": "defaultAutoRefreshInterval=\"${1:auraStorageTest:serverStorableTest - Optional - Integer}\""
    },
    {
      "trigger": "auraStorageTest-teamFacet-name\tAttr",
      "contents": "name=\"${1:auraStorageTest:teamFacet - Optional - String}\""
    },
    {
      "trigger": "auraStorageTest-teamFacet-city\tAttr",
      "contents": "city=\"${1:auraStorageTest:teamFacet - Optional - String}\""
    },
    {
      "trigger": "auraStorageTest-versionTest-defaultExpiration\tAttr",
      "contents": "defaultExpiration=\"${1:auraStorageTest:versionTest - Optional - Integer}\""
    },
    {
      "trigger": "auraStorageTest-versionTest-defaultAutoRefreshInterval\tAttr",
      "contents": "defaultAutoRefreshInterval=\"${1:auraStorageTest:versionTest - Optional - Integer}\""
    },
    {
      "trigger": "auraStorageTest-versionTest-persistent\tAttr",
      "contents": "persistent=\"${1:auraStorageTest:versionTest - Optional - Boolean}\""
    },
    {
      "trigger": "auraStorageTest-versionTest-version\tAttr",
      "contents": "version=\"${1:auraStorageTest:versionTest - Optional - String}\""
    },
    {
      "trigger": "auratest-access-testType\tAttr",
      "contents": "testType=\"${1:auratest:access - Optional - String}\""
    },
    {
      "trigger": "auratest-access-output\tAttr",
      "contents": "output=\"${1:auratest:access - Optional - Object}\""
    },
    {
      "trigger": "auratest-access-testDone\tAttr",
      "contents": "testDone=\"${1:auratest:access - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-access-accessLevel\tAttr",
      "contents": "accessLevel=\"${1:auratest:access - Optional - String}\""
    },
    {
      "trigger": "auratest-access-Private\tAttr",
      "contents": "Private=\"${1:auratest:access - Optional - String}\""
    },
    {
      "trigger": "auratest-access-Public\tAttr",
      "contents": "Public=\"${1:auratest:access - Optional - String}\""
    },
    {
      "trigger": "auratest-access-Internal\tAttr",
      "contents": "Internal=\"${1:auratest:access - Optional - String}\""
    },
    {
      "trigger": "auratest-access-Global\tAttr",
      "contents": "Global=\"${1:auratest:access - Optional - String}\""
    },
    {
      "trigger": "auratest-access-globalEvent\tAttr",
      "contents": "globalEvent=\"${1:auratest:access - Optional - auratest:accessGlobalEvent}\""
    },
    {
      "trigger": "auratest-access-publicEvent\tAttr",
      "contents": "publicEvent=\"${1:auratest:access - Optional - auratest:accessPublicEvent}\""
    },
    {
      "trigger": "auratest-access-internalEvent\tAttr",
      "contents": "internalEvent=\"${1:auratest:access - Optional - auratest:accessInternalEvent}\""
    },
    {
      "trigger": "auratest-access-privateEvent\tAttr",
      "contents": "privateEvent=\"${1:auratest:access - Optional - auratest:accessPrivateEvent}\""
    },
    {
      "trigger": "auratest-accessExtendsGlobalWithAttributes-output\tAttr",
      "contents": "output=\"${1:auratest:accessExtendsGlobalWithAttributes - Optional - String}\""
    },
    {
      "trigger": "auratest-accessExtendsGlobalWithAttributes-attrName\tAttr",
      "contents": "attrName=\"${1:auratest:accessExtendsGlobalWithAttributes - Optional - String}\""
    },
    {
      "trigger": "auratest-accessGlobalAttribute-attr\tAttr",
      "contents": "attr=\"${1:auratest:accessGlobalAttribute - Optional - String}\""
    },
    {
      "trigger": "auratest-accessInternalAttribute-attr\tAttr",
      "contents": "attr=\"${1:auratest:accessInternalAttribute - Optional - String}\""
    },
    {
      "trigger": "auratest-accessPrivateAttribute-attr\tAttr",
      "contents": "attr=\"${1:auratest:accessPrivateAttribute - Optional - String}\""
    },
    {
      "trigger": "auratest-accessPrivateAttribute-attrDefault\tAttr",
      "contents": "attrDefault=\"${1:auratest:accessPrivateAttribute - Optional - String}\""
    },
    {
      "trigger": "auratest-accessPublicAttribute-attr\tAttr",
      "contents": "attr=\"${1:auratest:accessPublicAttribute - Optional - String}\""
    },
    {
      "trigger": "auratest-auraMethod-outputStringAttr\tAttr",
      "contents": "outputStringAttr=\"${1:auratest:auraMethod - Optional - String}\""
    },
    {
      "trigger": "auratest-auraMethod-stringAttr\tAttr",
      "contents": "stringAttr=\"${1:auratest:auraMethod - Optional - String}\""
    },
    {
      "trigger": "auratest-auraMethod-stringAttr\tAttr",
      "contents": "stringAttr=\"${1:auratest:auraMethod - Optional - String}\""
    },
    {
      "trigger": "auratest-auraMethod-stringAttr2\tAttr",
      "contents": "stringAttr2=\"${1:auratest:auraMethod - Optional - String}\""
    },
    {
      "trigger": "auratest-auraMethod-stringAttrParent\tAttr",
      "contents": "stringAttrParent=\"${1:auratest:auraMethod - Optional - String}\""
    },
    {
      "trigger": "auratest-auraMethodChild-stringAttrChild\tAttr",
      "contents": "stringAttrChild=\"${1:auratest:auraMethodChild - Optional - String}\""
    },
    {
      "trigger": "auratest-baseInputTest-cmpType\tAttr",
      "contents": "cmpType=\"${1:auratest:baseInputTest - Optional - string}\""
    },
    {
      "trigger": "auratest-baseInputTest-ref\tAttr",
      "contents": "ref=\"${1:auratest:baseInputTest - Optional - Object}\""
    },
    {
      "trigger": "auratest-componentClassChild-errorOutFromHelper_Child\tAttr",
      "contents": "errorOutFromHelper_Child=\"${1:auratest:componentClassChild - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassChild-errorOutFromRender_Child\tAttr",
      "contents": "errorOutFromRender_Child=\"${1:auratest:componentClassChild - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassChild-errorOutFromAfterRender_Child\tAttr",
      "contents": "errorOutFromAfterRender_Child=\"${1:auratest:componentClassChild - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassChild-errorOutFromReRender_Child\tAttr",
      "contents": "errorOutFromReRender_Child=\"${1:auratest:componentClassChild - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassChild-errorOutFromUnRender_Child\tAttr",
      "contents": "errorOutFromUnRender_Child=\"${1:auratest:componentClassChild - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassChild-value\tAttr",
      "contents": "value=\"${1:auratest:componentClassChild - Optional - String}\""
    },
    {
      "trigger": "auratest-componentClassGrandChildClientProvider-value\tAttr",
      "contents": "value=\"${1:auratest:componentClassGrandChildClientProvider - Optional - String}\""
    },
    {
      "trigger": "auratest-componentClassGrandChildServerProvider-value\tAttr",
      "contents": "value=\"${1:auratest:componentClassGrandChildServerProvider - Optional - String}\""
    },
    {
      "trigger": "auratest-componentClassInner-valueInner\tAttr",
      "contents": "valueInner=\"${1:auratest:componentClassInner - Optional - String}\""
    },
    {
      "trigger": "auratest-componentClassInner-errorOutFromHelper_Inner\tAttr",
      "contents": "errorOutFromHelper_Inner=\"${1:auratest:componentClassInner - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassInner-errorOutFromRender_Inner\tAttr",
      "contents": "errorOutFromRender_Inner=\"${1:auratest:componentClassInner - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassInner-errorOutFromAfterRender_Inner\tAttr",
      "contents": "errorOutFromAfterRender_Inner=\"${1:auratest:componentClassInner - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassInner-errorOutFromReRender_Inner\tAttr",
      "contents": "errorOutFromReRender_Inner=\"${1:auratest:componentClassInner - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassInner-errorOutFromUnRender_Inner\tAttr",
      "contents": "errorOutFromUnRender_Inner=\"${1:auratest:componentClassInner - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassInner-value\tAttr",
      "contents": "value=\"${1:auratest:componentClassInner - Optional - String}\""
    },
    {
      "trigger": "auratest-componentClassLifecycleTest-testOuter\tAttr",
      "contents": "testOuter=\"${1:auratest:componentClassLifecycleTest - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassLifecycleTest-testOuterInIteration\tAttr",
      "contents": "testOuterInIteration=\"${1:auratest:componentClassLifecycleTest - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassLifecycleTest-testParent\tAttr",
      "contents": "testParent=\"${1:auratest:componentClassLifecycleTest - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassLifecycleTest-testParentInIteration\tAttr",
      "contents": "testParentInIteration=\"${1:auratest:componentClassLifecycleTest - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassLifecycleTest-testChild\tAttr",
      "contents": "testChild=\"${1:auratest:componentClassLifecycleTest - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassLifecycleTest-testChildInIteration\tAttr",
      "contents": "testChildInIteration=\"${1:auratest:componentClassLifecycleTest - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassLifecycleTest-testGrandChildServer\tAttr",
      "contents": "testGrandChildServer=\"${1:auratest:componentClassLifecycleTest - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassLifecycleTest-testGrandChildServerInIteration\tAttr",
      "contents": "testGrandChildServerInIteration=\"${1:auratest:componentClassLifecycleTest - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassLifecycleTest-testGrandChildClient\tAttr",
      "contents": "testGrandChildClient=\"${1:auratest:componentClassLifecycleTest - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassLifecycleTest-testGrandChildClientInIteration\tAttr",
      "contents": "testGrandChildClientInIteration=\"${1:auratest:componentClassLifecycleTest - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassLifecycleTest-testServerProviderGrandChildClientProvider\tAttr",
      "contents": "testServerProviderGrandChildClientProvider=\"${1:auratest:componentClassLifecycleTest - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassLifecycleTest-testClientProviderGrandChildClientProvider\tAttr",
      "contents": "testClientProviderGrandChildClientProvider=\"${1:auratest:componentClassLifecycleTest - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassLifecycleTest-testClientProviderGrandChildClientProviderInIteration\tAttr",
      "contents": "testClientProviderGrandChildClientProviderInIteration=\"${1:auratest:componentClassLifecycleTest - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassLifecycleTest-testServerProviderGrandChildClientProviderInIteration\tAttr",
      "contents": "testServerProviderGrandChildClientProviderInIteration=\"${1:auratest:componentClassLifecycleTest - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassLifecycleTest-testServerProviderClientProviderGrandChildClientProvider\tAttr",
      "contents": "testServerProviderClientProviderGrandChildClientProvider=\"${1:auratest:componentClassLifecycleTest - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassLifecycleTest-testServerProviderClientProviderGrandChildClientProviderInIteration\tAttr",
      "contents": "testServerProviderClientProviderGrandChildClientProviderInIteration=\"${1:auratest:componentClassLifecycleTest - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassLifecycleTest-testServerProviderGrandChildServerProvider\tAttr",
      "contents": "testServerProviderGrandChildServerProvider=\"${1:auratest:componentClassLifecycleTest - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassLifecycleTest-testClientProviderGrandChildServerProvider\tAttr",
      "contents": "testClientProviderGrandChildServerProvider=\"${1:auratest:componentClassLifecycleTest - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassLifecycleTest-testServerProviderGrandChildServerProviderInIteration\tAttr",
      "contents": "testServerProviderGrandChildServerProviderInIteration=\"${1:auratest:componentClassLifecycleTest - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassLifecycleTest-testClientProviderGrandChildServerProviderInIteration\tAttr",
      "contents": "testClientProviderGrandChildServerProviderInIteration=\"${1:auratest:componentClassLifecycleTest - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassLifecycleTest-testServerProviderClientProviderGrandChildServerProvider\tAttr",
      "contents": "testServerProviderClientProviderGrandChildServerProvider=\"${1:auratest:componentClassLifecycleTest - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassLifecycleTest-testServerProviderClientProviderGrandChildServerProviderInIteration\tAttr",
      "contents": "testServerProviderClientProviderGrandChildServerProviderInIteration=\"${1:auratest:componentClassLifecycleTest - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassLifecycleTest-shouldRender\tAttr",
      "contents": "shouldRender=\"${1:auratest:componentClassLifecycleTest - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassLifecycleTest-shouldCreate\tAttr",
      "contents": "shouldCreate=\"${1:auratest:componentClassLifecycleTest - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassLifecycleTest-iterationItems\tAttr",
      "contents": "iterationItems=\"${1:auratest:componentClassLifecycleTest - Optional - List}\""
    },
    {
      "trigger": "auratest-componentClassLifecycleTest-iterationForceServer\tAttr",
      "contents": "iterationForceServer=\"${1:auratest:componentClassLifecycleTest - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassLifecycleTest-cmpDef\tAttr",
      "contents": "cmpDef=\"${1:auratest:componentClassLifecycleTest - Optional - String}\""
    },
    {
      "trigger": "auratest-componentClassLifecycleTest-errorOutFrom\tAttr",
      "contents": "errorOutFrom=\"${1:auratest:componentClassLifecycleTest - Optional - String}\""
    },
    {
      "trigger": "auratest-componentClassLifecycleTest-logFilter\tAttr",
      "contents": "logFilter=\"${1:auratest:componentClassLifecycleTest - Optional - String}\""
    },
    {
      "trigger": "auratest-componentClassOuter-id\tAttr",
      "contents": "id=\"${1:auratest:componentClassOuter - Optional - String}\""
    },
    {
      "trigger": "auratest-componentClassOuter-valueOuter\tAttr",
      "contents": "valueOuter=\"${1:auratest:componentClassOuter - Optional - String}\""
    },
    {
      "trigger": "auratest-componentClassOuter-errorOutFromHelper_Outer\tAttr",
      "contents": "errorOutFromHelper_Outer=\"${1:auratest:componentClassOuter - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassOuter-errorOutFromRender_Outer\tAttr",
      "contents": "errorOutFromRender_Outer=\"${1:auratest:componentClassOuter - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassOuter-errorOutFromAfterRender_Outer\tAttr",
      "contents": "errorOutFromAfterRender_Outer=\"${1:auratest:componentClassOuter - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassOuter-errorOutFromReRender_Outer\tAttr",
      "contents": "errorOutFromReRender_Outer=\"${1:auratest:componentClassOuter - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassOuter-errorOutFromUnRender_Outer\tAttr",
      "contents": "errorOutFromUnRender_Outer=\"${1:auratest:componentClassOuter - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassOuter-value\tAttr",
      "contents": "value=\"${1:auratest:componentClassOuter - Optional - String}\""
    },
    {
      "trigger": "auratest-componentClassParent-id\tAttr",
      "contents": "id=\"${1:auratest:componentClassParent - Optional - String}\""
    },
    {
      "trigger": "auratest-componentClassParent-value\tAttr",
      "contents": "value=\"${1:auratest:componentClassParent - Optional - String}\""
    },
    {
      "trigger": "auratest-componentClassParent-errorOutFromHelper_Parent\tAttr",
      "contents": "errorOutFromHelper_Parent=\"${1:auratest:componentClassParent - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassParent-errorOutFromRender_Parent\tAttr",
      "contents": "errorOutFromRender_Parent=\"${1:auratest:componentClassParent - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassParent-errorOutFromAfterRender_Parent\tAttr",
      "contents": "errorOutFromAfterRender_Parent=\"${1:auratest:componentClassParent - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassParent-errorOutFromReRender_Parent\tAttr",
      "contents": "errorOutFromReRender_Parent=\"${1:auratest:componentClassParent - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassParent-errorOutFromUnRender_Parent\tAttr",
      "contents": "errorOutFromUnRender_Parent=\"${1:auratest:componentClassParent - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassParent-value\tAttr",
      "contents": "value=\"${1:auratest:componentClassParent - Optional - String}\""
    },
    {
      "trigger": "auratest-componentClassServerProviderIteration-iterationForceServer\tAttr",
      "contents": "iterationForceServer=\"${1:auratest:componentClassServerProviderIteration - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassServerProviderIteration-shouldCreate1\tAttr",
      "contents": "shouldCreate1=\"${1:auratest:componentClassServerProviderIteration - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassServerProviderIteration-shouldCreate2\tAttr",
      "contents": "shouldCreate2=\"${1:auratest:componentClassServerProviderIteration - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassServerProviderIteration-shouldCreate3\tAttr",
      "contents": "shouldCreate3=\"${1:auratest:componentClassServerProviderIteration - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassServerProviderIteration-shouldCreate4\tAttr",
      "contents": "shouldCreate4=\"${1:auratest:componentClassServerProviderIteration - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-componentClassServerProviderIteration-iterationItems\tAttr",
      "contents": "iterationItems=\"${1:auratest:componentClassServerProviderIteration - Optional - List}\""
    },
    {
      "trigger": "auratest-errorHandling-requiredAttribute\tAttr",
      "contents": "requiredAttribute=\"${1:auratest:errorHandling - Required - String}\""
    },
    {
      "trigger": "auratest-errorHandling-message\tAttr",
      "contents": "message=\"${1:auratest:errorHandling - Optional - String}\""
    },
    {
      "trigger": "auratest-errorHandling-error\tAttr",
      "contents": "error=\"${1:auratest:errorHandling - Optional - String}\""
    },
    {
      "trigger": "auratest-errorHandling-eventHandled\tAttr",
      "contents": "eventHandled=\"${1:auratest:errorHandling - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-errorHandling-handleSystemError\tAttr",
      "contents": "handleSystemError=\"${1:auratest:errorHandling - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-errorHandling-throwErrorFromInit\tAttr",
      "contents": "throwErrorFromInit=\"${1:auratest:errorHandling - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-errorHandling-throwErrorFromRender\tAttr",
      "contents": "throwErrorFromRender=\"${1:auratest:errorHandling - Optional - boolean}\""
    },
    {
      "trigger": "auratest-errorHandling-throwErrorFromRerender\tAttr",
      "contents": "throwErrorFromRerender=\"${1:auratest:errorHandling - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-errorHandling-throwErrorFromAfterRender\tAttr",
      "contents": "throwErrorFromAfterRender=\"${1:auratest:errorHandling - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-errorHandling-throwErrorFromUnrender\tAttr",
      "contents": "throwErrorFromUnrender=\"${1:auratest:errorHandling - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-eventCounter-renderCount\tAttr",
      "contents": "renderCount=\"${1:auratest:eventCounter - Optional - Integer}\""
    },
    {
      "trigger": "auratest-eventCounter-rerenderCount\tAttr",
      "contents": "rerenderCount=\"${1:auratest:eventCounter - Optional - Integer}\""
    },
    {
      "trigger": "auratest-eventCounter-unrenderCount\tAttr",
      "contents": "unrenderCount=\"${1:auratest:eventCounter - Optional - Integer}\""
    },
    {
      "trigger": "auratest-eventCounter-passthrough\tAttr",
      "contents": "passthrough=\"${1:auratest:eventCounter - Optional - String}\""
    },
    {
      "trigger": "auratest-eventCounter-passthroughObj\tAttr",
      "contents": "passthroughObj=\"${1:auratest:eventCounter - Optional - Object}\""
    },
    {
      "trigger": "auratest-eventCounter-dirty\tAttr",
      "contents": "dirty=\"${1:auratest:eventCounter - Optional - Integer}\""
    },
    {
      "trigger": "auratest-fastClickDomEvents-outterEvent\tAttr",
      "contents": "outterEvent=\"${1:auratest:fastClickDomEvents - Optional - String}\""
    },
    {
      "trigger": "auratest-fastClickDomEvents-middleEvent\tAttr",
      "contents": "middleEvent=\"${1:auratest:fastClickDomEvents - Optional - String}\""
    },
    {
      "trigger": "auratest-fastClickDomEvents-innerEvent\tAttr",
      "contents": "innerEvent=\"${1:auratest:fastClickDomEvents - Optional - String}\""
    },
    {
      "trigger": "auratest-html-clickCount\tAttr",
      "contents": "clickCount=\"${1:auratest:html - Optional - Integer}\""
    },
    {
      "trigger": "auratest-html-classValue\tAttr",
      "contents": "classValue=\"${1:auratest:html - Optional - String}\""
    },
    {
      "trigger": "auratest-html-mouseOverEvent\tAttr",
      "contents": "mouseOverEvent=\"${1:auratest:html - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-html-mouseOutEvent\tAttr",
      "contents": "mouseOutEvent=\"${1:auratest:html - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-html-type\tAttr",
      "contents": "type=\"${1:auratest:html - Optional - String}\""
    },
    {
      "trigger": "auratest-html-style\tAttr",
      "contents": "style=\"${1:auratest:html - Optional - String}\""
    },
    {
      "trigger": "auratest-html-dataName\tAttr",
      "contents": "dataName=\"${1:auratest:html - Optional - String}\""
    },
    {
      "trigger": "auratest-html-href\tAttr",
      "contents": "href=\"${1:auratest:html - Optional - String}\""
    },
    {
      "trigger": "auratest-htmlComponent-testUndefinedTagAttr\tAttr",
      "contents": "testUndefinedTagAttr=\"${1:auratest:htmlComponent - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-htmlComponent-testNoTagAttr\tAttr",
      "contents": "testNoTagAttr=\"${1:auratest:htmlComponent - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-jsmock-providedAttribute\tAttr",
      "contents": "providedAttribute=\"${1:auratest:jsmock - Optional - String}\""
    },
    {
      "trigger": "auratest-label-value\tAttr",
      "contents": "value=\"${1:auratest:label - Optional - String}\""
    },
    {
      "trigger": "auratest-label-valueElse\tAttr",
      "contents": "valueElse=\"${1:auratest:label - Optional - String}\""
    },
    {
      "trigger": "auratest-label-date\tAttr",
      "contents": "date=\"${1:auratest:label - Optional - Date}\""
    },
    {
      "trigger": "auratest-label-string\tAttr",
      "contents": "string=\"${1:auratest:label - Optional - String}\""
    },
    {
      "trigger": "auratest-label-boolean\tAttr",
      "contents": "boolean=\"${1:auratest:label - Optional - boolean}\""
    },
    {
      "trigger": "auratest-label-double\tAttr",
      "contents": "double=\"${1:auratest:label - Optional - double}\""
    },
    {
      "trigger": "auratest-label-undef\tAttr",
      "contents": "undef=\"${1:auratest:label - Optional - Object}\""
    },
    {
      "trigger": "auratest-label-noll\tAttr",
      "contents": "noll=\"${1:auratest:label - Optional - Object}\""
    },
    {
      "trigger": "auratest-label-booleanForIf\tAttr",
      "contents": "booleanForIf=\"${1:auratest:label - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-labelExpression-value\tAttr",
      "contents": "value=\"${1:auratest:labelExpression - Optional - String}\""
    },
    {
      "trigger": "auratest-labelExpression-valueElse\tAttr",
      "contents": "valueElse=\"${1:auratest:labelExpression - Optional - String}\""
    },
    {
      "trigger": "auratest-labelExpression-date\tAttr",
      "contents": "date=\"${1:auratest:labelExpression - Optional - Date}\""
    },
    {
      "trigger": "auratest-labelExpression-string\tAttr",
      "contents": "string=\"${1:auratest:labelExpression - Optional - String}\""
    },
    {
      "trigger": "auratest-labelExpression-boolean\tAttr",
      "contents": "boolean=\"${1:auratest:labelExpression - Optional - boolean}\""
    },
    {
      "trigger": "auratest-labelExpression-double\tAttr",
      "contents": "double=\"${1:auratest:labelExpression - Optional - double}\""
    },
    {
      "trigger": "auratest-labelExpression-undef\tAttr",
      "contents": "undef=\"${1:auratest:labelExpression - Optional - Object}\""
    },
    {
      "trigger": "auratest-labelExpression-noll\tAttr",
      "contents": "noll=\"${1:auratest:labelExpression - Optional - Object}\""
    },
    {
      "trigger": "auratest-labelExpression-list\tAttr",
      "contents": "list=\"${1:auratest:labelExpression - Optional - List}\""
    },
    {
      "trigger": "auratest-labelExpression-booleanForIf\tAttr",
      "contents": "booleanForIf=\"${1:auratest:labelExpression - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-logPanel-logs\tAttr",
      "contents": "logs=\"${1:auratest:logPanel - Optional - List}\""
    },
    {
      "trigger": "auratest-logPanel-filter\tAttr",
      "contents": "filter=\"${1:auratest:logPanel - Optional - String}\""
    },
    {
      "trigger": "auratest-require-version\tAttr",
      "contents": "version=\"${1:auratest:require - Optional - String}\""
    },
    {
      "trigger": "auratest-require-cmpExist\tAttr",
      "contents": "cmpExist=\"${1:auratest:require - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-require-versionInRender\tAttr",
      "contents": "versionInRender=\"${1:auratest:require - Optional - String}\""
    },
    {
      "trigger": "auratest-require-versionInAfterRender\tAttr",
      "contents": "versionInAfterRender=\"${1:auratest:require - Optional - String}\""
    },
    {
      "trigger": "auratest-require-versionInRerender\tAttr",
      "contents": "versionInRerender=\"${1:auratest:require - Optional - String}\""
    },
    {
      "trigger": "auratest-requireConsumer-consumedCmp\tAttr",
      "contents": "consumedCmp=\"${1:auratest:requireConsumer - Optional - Aura.Component}\""
    },
    {
      "trigger": "auratest-requireConsumer-versionInConsumedCmp\tAttr",
      "contents": "versionInConsumedCmp=\"${1:auratest:requireConsumer - Optional - String}\""
    },
    {
      "trigger": "auratest-requireConsumer-actionDone\tAttr",
      "contents": "actionDone=\"${1:auratest:requireConsumer - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-requireConsumer-versionEvt\tAttr",
      "contents": "versionEvt=\"${1:auratest:requireConsumer - Optional - auratest:testEvent}\""
    },
    {
      "trigger": "auratest-requireWithServerAction-actionDone\tAttr",
      "contents": "actionDone=\"${1:auratest:requireWithServerAction - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-requireWithServerAction-version\tAttr",
      "contents": "version=\"${1:auratest:requireWithServerAction - Optional - String}\""
    },
    {
      "trigger": "auratest-requireWithServerAction-text\tAttr",
      "contents": "text=\"${1:auratest:requireWithServerAction - Optional - String}\""
    },
    {
      "trigger": "auratest-requireWithServerAction-versionEvt\tAttr",
      "contents": "versionEvt=\"${1:auratest:requireWithServerAction - Optional - auratest:testEvent}\""
    },
    {
      "trigger": "auratest-rerenderAbstract-toggleAbstract\tAttr",
      "contents": "toggleAbstract=\"${1:auratest:rerenderAbstract - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-rerenderChild-title\tAttr",
      "contents": "title=\"${1:auratest:rerenderChild - Optional - String}\""
    },
    {
      "trigger": "auratest-rerenderChild-toggleChild\tAttr",
      "contents": "toggleChild=\"${1:auratest:rerenderChild - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-rerenderChild-ownRenderCounter\tAttr",
      "contents": "ownRenderCounter=\"${1:auratest:rerenderChild - Optional - Integer}\""
    },
    {
      "trigger": "auratest-rerenderCounter-count\tAttr",
      "contents": "count=\"${1:auratest:rerenderCounter - Optional - Integer}\""
    },
    {
      "trigger": "auratest-rerenderParent-toggleParent\tAttr",
      "contents": "toggleParent=\"${1:auratest:rerenderParent - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-testComponent1-myString\tAttr",
      "contents": "myString=\"${1:auratest:testComponent1 - Optional - String}\""
    },
    {
      "trigger": "auratest-testComponent2-myInteger\tAttr",
      "contents": "myInteger=\"${1:auratest:testComponent2 - Required - Integer}\""
    },
    {
      "trigger": "auratest-testComponent3-myBoolean\tAttr",
      "contents": "myBoolean=\"${1:auratest:testComponent3 - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-test_CompoundFormula_NonString-NameString\tAttr",
      "contents": "NameString=\"${1:auratest:test_CompoundFormula_NonString - Optional - String}\""
    },
    {
      "trigger": "auratest-test_CompoundFormula_NonString-Acc\tAttr",
      "contents": "Acc=\"${1:auratest:test_CompoundFormula_NonString - Optional - Account}\""
    },
    {
      "trigger": "auratest-test_InfiniteListButton-item\tAttr",
      "contents": "item=\"${1:auratest:test_InfiniteListButton - Required - Object}\""
    },
    {
      "trigger": "auratest-test_Labels_Positive-labelSection\tAttr",
      "contents": "labelSection=\"${1:auratest:test_Labels_Positive - Optional - String}\""
    },
    {
      "trigger": "auratest-test_Model_Parent-attrInParent\tAttr",
      "contents": "attrInParent=\"${1:auratest:test_Model_Parent - Optional - String}\""
    },
    {
      "trigger": "auratest-test_Relationship_Query1-contactAttr\tAttr",
      "contents": "contactAttr=\"${1:auratest:test_Relationship_Query1 - Optional - Contact}\""
    },
    {
      "trigger": "auratest-test_Relationship_Query2-contactId\tAttr",
      "contents": "contactId=\"${1:auratest:test_Relationship_Query2 - Optional - Id}\""
    },
    {
      "trigger": "auratest-test_button-label\tAttr",
      "contents": "label=\"${1:auratest:test_button - Optional - String}\""
    },
    {
      "trigger": "auratest-test_button-class\tAttr",
      "contents": "class=\"${1:auratest:test_button - Optional - String}\""
    },
    {
      "trigger": "auratest-test_button-press\tAttr",
      "contents": "press=\"${1:auratest:test_button - Optional - auratest:test_press}\""
    },
    {
      "trigger": "auratest-test_css_a-content\tAttr",
      "contents": "content=\"${1:auratest:test_css_a - Optional - String}\""
    },
    {
      "trigger": "auratest-test_css_b-content\tAttr",
      "contents": "content=\"${1:auratest:test_css_b - Optional - String}\""
    },
    {
      "trigger": "auratest-test_css_c-content\tAttr",
      "contents": "content=\"${1:auratest:test_css_c - Optional - String}\""
    },
    {
      "trigger": "auratest-test_css_d-content\tAttr",
      "contents": "content=\"${1:auratest:test_css_d - Optional - String}\""
    },
    {
      "trigger": "auratest-text-value\tAttr",
      "contents": "value=\"${1:auratest:text - Optional - String}\""
    },
    {
      "trigger": "auratest-text-truncate\tAttr",
      "contents": "truncate=\"${1:auratest:text - Optional - Integer}\""
    },
    {
      "trigger": "auratest-text-ellipsis\tAttr",
      "contents": "ellipsis=\"${1:auratest:text - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-text-truncateByWord\tAttr",
      "contents": "truncateByWord=\"${1:auratest:text - Optional - Boolean}\""
    },
    {
      "trigger": "auratest-unescapedHtml-value\tAttr",
      "contents": "value=\"${1:auratest:unescapedHtml - Optional - String}\""
    },
    {
      "trigger": "auratest-unrenderComponent-name\tAttr",
      "contents": "name=\"${1:auratest:unrenderComponent - Optional - String}\""
    },
    {
      "trigger": "auratest-versioningSuper-versionInSuperCmp\tAttr",
      "contents": "versionInSuperCmp=\"${1:auratest:versioningSuper - Optional - String}\""
    },
    {
      "trigger": "clientApiTest-arrayIndexOf-array\tAttr",
      "contents": "array=\"${1:clientApiTest:arrayIndexOf - Optional - String[]}\""
    },
    {
      "trigger": "clientApiTest-eventBinding-focusEvent\tAttr",
      "contents": "focusEvent=\"${1:clientApiTest:eventBinding - Optional - Boolean}\""
    },
    {
      "trigger": "clientApiTest-eventBinding-blurEvent\tAttr",
      "contents": "blurEvent=\"${1:clientApiTest:eventBinding - Optional - Boolean}\""
    },
    {
      "trigger": "clientApiTest-eventBinding-clickCount\tAttr",
      "contents": "clickCount=\"${1:clientApiTest:eventBinding - Optional - Integer}\""
    },
    {
      "trigger": "clientApiTest-getComponent-cmpGlobalId\tAttr",
      "contents": "cmpGlobalId=\"${1:clientApiTest:getComponent - Optional - String}\""
    },
    {
      "trigger": "clientApiTest-getDefinition-definitionNames\tAttr",
      "contents": "definitionNames=\"${1:clientApiTest:getDefinition - Optional - String[]}\""
    },
    {
      "trigger": "clientApiTest-getDefinition-complete\tAttr",
      "contents": "complete=\"${1:clientApiTest:getDefinition - Optional - Boolean}\""
    },
    {
      "trigger": "clientServiceTest-enqueueAction-log\tAttr",
      "contents": "log=\"${1:clientServiceTest:enqueueAction - Optional - List}\""
    },
    {
      "trigger": "componentTest-accessAttributes-output\tAttr",
      "contents": "output=\"${1:componentTest:accessAttributes - Optional - String}\""
    },
    {
      "trigger": "componentTest-accessAttributes-Private\tAttr",
      "contents": "Private=\"${1:componentTest:accessAttributes - Optional - String}\""
    },
    {
      "trigger": "componentTest-accessAttributes-Public\tAttr",
      "contents": "Public=\"${1:componentTest:accessAttributes - Optional - String}\""
    },
    {
      "trigger": "componentTest-accessAttributes-Internal\tAttr",
      "contents": "Internal=\"${1:componentTest:accessAttributes - Optional - String}\""
    },
    {
      "trigger": "componentTest-accessAttributes-Global\tAttr",
      "contents": "Global=\"${1:componentTest:accessAttributes - Optional - String}\""
    },
    {
      "trigger": "componentTest-accessAttributes-globalEvent\tAttr",
      "contents": "globalEvent=\"${1:componentTest:accessAttributes - Optional - auratest:accessGlobalEvent}\""
    },
    {
      "trigger": "componentTest-accessAttributes-publicEvent\tAttr",
      "contents": "publicEvent=\"${1:componentTest:accessAttributes - Optional - auratest:accessPublicEvent}\""
    },
    {
      "trigger": "componentTest-accessAttributes-internalEvent\tAttr",
      "contents": "internalEvent=\"${1:componentTest:accessAttributes - Optional - auratest:accessInternalEvent}\""
    },
    {
      "trigger": "componentTest-accessAttributes-privateEvent\tAttr",
      "contents": "privateEvent=\"${1:componentTest:accessAttributes - Optional - auratest:accessPrivateEvent}\""
    },
    {
      "trigger": "componentTest-accessUnprivilegedNamespace-cmpToCreate\tAttr",
      "contents": "cmpToCreate=\"${1:componentTest:accessUnprivilegedNamespace - Optional - String}\""
    },
    {
      "trigger": "componentTest-accessUnprivilegedNamespace-completed\tAttr",
      "contents": "completed=\"${1:componentTest:accessUnprivilegedNamespace - Optional - Boolean}\""
    },
    {
      "trigger": "componentTest-accessUnprivilegedNamespace-attrName\tAttr",
      "contents": "attrName=\"${1:componentTest:accessUnprivilegedNamespace - Optional - String}\""
    },
    {
      "trigger": "componentTest-appendComponent-descriptor\tAttr",
      "contents": "descriptor=\"${1:componentTest:appendComponent - Optional - String}\""
    },
    {
      "trigger": "componentTest-appendComponent-value\tAttr",
      "contents": "value=\"${1:componentTest:appendComponent - Optional - String}\""
    },
    {
      "trigger": "componentTest-appendComponent-output\tAttr",
      "contents": "output=\"${1:componentTest:appendComponent - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "componentTest-clientComponent-outputValue\tAttr",
      "contents": "outputValue=\"${1:componentTest:clientComponent - Optional - String}\""
    },
    {
      "trigger": "componentTest-componentBodyWithChanges-colors\tAttr",
      "contents": "colors=\"${1:componentTest:componentBodyWithChanges - Optional - List}\""
    },
    {
      "trigger": "componentTest-createComponent-handledEvent\tAttr",
      "contents": "handledEvent=\"${1:componentTest:createComponent - Optional - Boolean}\""
    },
    {
      "trigger": "componentTest-destroy-cmpDestroyed\tAttr",
      "contents": "cmpDestroyed=\"${1:componentTest:destroy - Optional - Boolean}\""
    },
    {
      "trigger": "componentTest-destroy-childCmpDestroyed\tAttr",
      "contents": "childCmpDestroyed=\"${1:componentTest:destroy - Optional - Boolean}\""
    },
    {
      "trigger": "componentTest-destroy-cmpAttribute\tAttr",
      "contents": "cmpAttribute=\"${1:componentTest:destroy - Optional - Aura.Component}\""
    },
    {
      "trigger": "componentTest-destroy-cmpArrayAttribute\tAttr",
      "contents": "cmpArrayAttribute=\"${1:componentTest:destroy - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "componentTest-destroy-objWithDestroy\tAttr",
      "contents": "objWithDestroy=\"${1:componentTest:destroy - Optional - Object}\""
    },
    {
      "trigger": "componentTest-findWithDefRefs-singleElement\tAttr",
      "contents": "singleElement=\"${1:componentTest:findWithDefRefs - Optional - Aura.ComponentDefRef[]}\""
    },
    {
      "trigger": "componentTest-findWithDefRefs-dupElement\tAttr",
      "contents": "dupElement=\"${1:componentTest:findWithDefRefs - Optional - Aura.ComponentDefRef[]}\""
    },
    {
      "trigger": "componentTest-hasModel-value\tAttr",
      "contents": "value=\"${1:componentTest:hasModel - Optional - String}\""
    },
    {
      "trigger": "componentTest-hasModel-headerComponents\tAttr",
      "contents": "headerComponents=\"${1:componentTest:hasModel - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "componentTest-hasModel-innerComponents\tAttr",
      "contents": "innerComponents=\"${1:componentTest:hasModel - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "componentTest-hasModel-footerComponents\tAttr",
      "contents": "footerComponents=\"${1:componentTest:hasModel - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "componentTest-helper-message\tAttr",
      "contents": "message=\"${1:componentTest:helper - Optional - String}\""
    },
    {
      "trigger": "componentTest-helper-callsHelperMethodInRender\tAttr",
      "contents": "callsHelperMethodInRender=\"${1:componentTest:helper - Optional - Boolean}\""
    },
    {
      "trigger": "componentTest-helper-callsHelperMethodInAfterRender\tAttr",
      "contents": "callsHelperMethodInAfterRender=\"${1:componentTest:helper - Optional - Boolean}\""
    },
    {
      "trigger": "componentTest-helper-callsHelperMethodInRerender\tAttr",
      "contents": "callsHelperMethodInRerender=\"${1:componentTest:helper - Optional - Boolean}\""
    },
    {
      "trigger": "componentTest-helper-callsHelperMethodInUnrender\tAttr",
      "contents": "callsHelperMethodInUnrender=\"${1:componentTest:helper - Optional - Boolean}\""
    },
    {
      "trigger": "componentTest-helper-newMessage\tAttr",
      "contents": "newMessage=\"${1:componentTest:helper - Optional - String}\""
    },
    {
      "trigger": "componentTest-knowParent-parent\tAttr",
      "contents": "parent=\"${1:componentTest:knowParent - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "componentTest-require-version\tAttr",
      "contents": "version=\"${1:componentTest:require - Optional - String}\""
    },
    {
      "trigger": "componentTest-simpleExtends-title\tAttr",
      "contents": "title=\"${1:componentTest:simpleExtends - Optional - String}\""
    },
    {
      "trigger": "componentTest-versionInServer-newComponent\tAttr",
      "contents": "newComponent=\"${1:componentTest:versionInServer - Optional - Aura.Component}\""
    },
    {
      "trigger": "componentTest-versionInServer-actionDone\tAttr",
      "contents": "actionDone=\"${1:componentTest:versionInServer - Optional - Boolean}\""
    },
    {
      "trigger": "componentTest-versionInServer-version\tAttr",
      "contents": "version=\"${1:componentTest:versionInServer - Optional - String}\""
    },
    {
      "trigger": "componentTest-versioning-version\tAttr",
      "contents": "version=\"${1:componentTest:versioning - Optional - String}\""
    },
    {
      "trigger": "componentTest-versioning-actionDone\tAttr",
      "contents": "actionDone=\"${1:componentTest:versioning - Optional - Boolean}\""
    },
    {
      "trigger": "expressionTest-arrayValue-first\tAttr",
      "contents": "first=\"${1:expressionTest:arrayValue - Optional - Object[]}\""
    },
    {
      "trigger": "expressionTest-arrayValue-second\tAttr",
      "contents": "second=\"${1:expressionTest:arrayValue - Optional - Object[]}\""
    },
    {
      "trigger": "expressionTest-arrayValue-firstArrayLen\tAttr",
      "contents": "firstArrayLen=\"${1:expressionTest:arrayValue - Optional - Integer}\""
    },
    {
      "trigger": "expressionTest-arrayValue-secondArrayLen\tAttr",
      "contents": "secondArrayLen=\"${1:expressionTest:arrayValue - Optional - Integer}\""
    },
    {
      "trigger": "expressionTest-arrays-isNotSet\tAttr",
      "contents": "isNotSet=\"${1:expressionTest:arrays - Optional - String[]}\""
    },
    {
      "trigger": "expressionTest-arrays-stringArray\tAttr",
      "contents": "stringArray=\"${1:expressionTest:arrays - Optional - String[]}\""
    },
    {
      "trigger": "expressionTest-arrays-arrayAsObject\tAttr",
      "contents": "arrayAsObject=\"${1:expressionTest:arrays - Optional - Object}\""
    },
    {
      "trigger": "expressionTest-arrays-componentArray\tAttr",
      "contents": "componentArray=\"${1:expressionTest:arrays - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "expressionTest-arrays-passedInArray\tAttr",
      "contents": "passedInArray=\"${1:expressionTest:arrays - Optional - Object[]}\""
    },
    {
      "trigger": "expressionTest-arrays-passedInArrayLength\tAttr",
      "contents": "passedInArrayLength=\"${1:expressionTest:arrays - Optional - Integer}\""
    },
    {
      "trigger": "expressionTest-byValue-initValue\tAttr",
      "contents": "initValue=\"${1:expressionTest:byValue - Optional - String}\""
    },
    {
      "trigger": "expressionTest-byValue-booleanValue\tAttr",
      "contents": "booleanValue=\"${1:expressionTest:byValue - Optional - Boolean}\""
    },
    {
      "trigger": "expressionTest-byValue-numberValue\tAttr",
      "contents": "numberValue=\"${1:expressionTest:byValue - Optional - Double}\""
    },
    {
      "trigger": "expressionTest-byValue-stringValue\tAttr",
      "contents": "stringValue=\"${1:expressionTest:byValue - Optional - String}\""
    },
    {
      "trigger": "expressionTest-functions-integer\tAttr",
      "contents": "integer=\"${1:expressionTest:functions - Optional - integer}\""
    },
    {
      "trigger": "expressionTest-functions-double\tAttr",
      "contents": "double=\"${1:expressionTest:functions - Optional - double}\""
    },
    {
      "trigger": "expressionTest-functions-doubleString\tAttr",
      "contents": "doubleString=\"${1:expressionTest:functions - Optional - String}\""
    },
    {
      "trigger": "expressionTest-functions-string\tAttr",
      "contents": "string=\"${1:expressionTest:functions - Optional - String}\""
    },
    {
      "trigger": "expressionTest-functions-emptyString\tAttr",
      "contents": "emptyString=\"${1:expressionTest:functions - Optional - String}\""
    },
    {
      "trigger": "expressionTest-functions-Infinity\tAttr",
      "contents": "Infinity=\"${1:expressionTest:functions - Optional - double}\""
    },
    {
      "trigger": "expressionTest-functions-NegativeInfinity\tAttr",
      "contents": "NegativeInfinity=\"${1:expressionTest:functions - Optional - double}\""
    },
    {
      "trigger": "expressionTest-functions-NaN\tAttr",
      "contents": "NaN=\"${1:expressionTest:functions - Optional - double}\""
    },
    {
      "trigger": "expressionTest-functions-nullObj\tAttr",
      "contents": "nullObj=\"${1:expressionTest:functions - Optional - Object}\""
    },
    {
      "trigger": "expressionTest-functions-nullList\tAttr",
      "contents": "nullList=\"${1:expressionTest:functions - Optional - List}\""
    },
    {
      "trigger": "expressionTest-functions-object\tAttr",
      "contents": "object=\"${1:expressionTest:functions - Optional - Object}\""
    },
    {
      "trigger": "expressionTest-functions-map\tAttr",
      "contents": "map=\"${1:expressionTest:functions - Optional - Map}\""
    },
    {
      "trigger": "expressionTest-functions-list\tAttr",
      "contents": "list=\"${1:expressionTest:functions - Optional - List}\""
    },
    {
      "trigger": "expressionTest-functions-listWithNull\tAttr",
      "contents": "listWithNull=\"${1:expressionTest:functions - Optional - List}\""
    },
    {
      "trigger": "expressionTest-functions-listWithList\tAttr",
      "contents": "listWithList=\"${1:expressionTest:functions - Optional - List}\""
    },
    {
      "trigger": "expressionTest-functions-listWithNested4Layers\tAttr",
      "contents": "listWithNested4Layers=\"${1:expressionTest:functions - Optional - List}\""
    },
    {
      "trigger": "expressionTest-functions-listWithLoop\tAttr",
      "contents": "listWithLoop=\"${1:expressionTest:functions - Optional - List}\""
    },
    {
      "trigger": "expressionTest-functions-label0\tAttr",
      "contents": "label0=\"${1:expressionTest:functions - Optional - String}\""
    },
    {
      "trigger": "expressionTest-functions-label1\tAttr",
      "contents": "label1=\"${1:expressionTest:functions - Optional - String}\""
    },
    {
      "trigger": "expressionTest-functions-label2\tAttr",
      "contents": "label2=\"${1:expressionTest:functions - Optional - String}\""
    },
    {
      "trigger": "expressionTest-mapValue-map\tAttr",
      "contents": "map=\"${1:expressionTest:mapValue - Optional - Map}\""
    },
    {
      "trigger": "expressionTest-mapValue-triggers\tAttr",
      "contents": "triggers=\"${1:expressionTest:mapValue - Optional - Map}\""
    },
    {
      "trigger": "expressionTest-mapValue-triggers2\tAttr",
      "contents": "triggers2=\"${1:expressionTest:mapValue - Optional - Map}\""
    },
    {
      "trigger": "expressionTest-mapValue-fribble\tAttr",
      "contents": "fribble=\"${1:expressionTest:mapValue - Optional - Boolean}\""
    },
    {
      "trigger": "expressionTest-null-isNull\tAttr",
      "contents": "isNull=\"${1:expressionTest:null - Optional - String}\""
    },
    {
      "trigger": "expressionTest-simpleValue-booleanValue\tAttr",
      "contents": "booleanValue=\"${1:expressionTest:simpleValue - Optional - Boolean}\""
    },
    {
      "trigger": "expressionTest-simpleValue-integerValue\tAttr",
      "contents": "integerValue=\"${1:expressionTest:simpleValue - Optional - Integer}\""
    },
    {
      "trigger": "expressionTest-simpleValue-stringValue\tAttr",
      "contents": "stringValue=\"${1:expressionTest:simpleValue - Optional - String}\""
    },
    {
      "trigger": "expressionTest-test-expression\tAttr",
      "contents": "expression=\"${1:expressionTest:test - Optional - Object}\""
    },
    {
      "trigger": "expressionTest-test-exprText\tAttr",
      "contents": "exprText=\"${1:expressionTest:test - Optional - String}\""
    },
    {
      "trigger": "expressionTest-test-expected\tAttr",
      "contents": "expected=\"${1:expressionTest:test - Optional - Object}\""
    },
    {
      "trigger": "expressionTest-undefined-isNotSet\tAttr",
      "contents": "isNotSet=\"${1:expressionTest:undefined - Optional - String}\""
    },
    {
      "trigger": "flavorTest-bug_flavorMisappliedToInner-count\tAttr",
      "contents": "count=\"${1:flavorTest:bug_flavorMisappliedToInner - Required - String}\""
    },
    {
      "trigger": "flavorTest-dynamically_flavorable_rerender-count\tAttr",
      "contents": "count=\"${1:flavorTest:dynamically_flavorable_rerender - Required - String}\""
    },
    {
      "trigger": "flavorTest-expressions-flav\tAttr",
      "contents": "flav=\"${1:flavorTest:expressions - Optional - String}\""
    },
    {
      "trigger": "gvpTest-basicTest-xxx\tAttr",
      "contents": "xxx=\"${1:gvpTest:basicTest - Optional - String}\""
    },
    {
      "trigger": "gvpTest-basicTest-attributeLabel\tAttr",
      "contents": "attributeLabel=\"${1:gvpTest:basicTest - Optional - String}\""
    },
    {
      "trigger": "gvpTest-contextGVPTest-name\tAttr",
      "contents": "name=\"${1:gvpTest:contextGVPTest - Optional - String}\""
    },
    {
      "trigger": "gvpTest-contextGVPTest-value\tAttr",
      "contents": "value=\"${1:gvpTest:contextGVPTest - Optional - String}\""
    },
    {
      "trigger": "gvpTest-customGVPInitInTemplateTest-valueChanged\tAttr",
      "contents": "valueChanged=\"${1:gvpTest:customGVPInitInTemplateTest - Optional - Boolean}\""
    },
    {
      "trigger": "gvpTest-customGVPInitInTemplateTest-gvpValue\tAttr",
      "contents": "gvpValue=\"${1:gvpTest:customGVPInitInTemplateTest - Optional - String}\""
    },
    {
      "trigger": "gvpTest-customGVPTemplate-stringValue\tAttr",
      "contents": "stringValue=\"${1:gvpTest:customGVPTemplate - Optional - String}\""
    },
    {
      "trigger": "gvpTest-customGVPTest-stringValue\tAttr",
      "contents": "stringValue=\"${1:gvpTest:customGVPTest - Optional - String}\""
    },
    {
      "trigger": "gvpTest-customGVPTest-handleSystemError\tAttr",
      "contents": "handleSystemError=\"${1:gvpTest:customGVPTest - Optional - Boolean}\""
    },
    {
      "trigger": "gvpTest-customGVPTest-debuggingMessage\tAttr",
      "contents": "debuggingMessage=\"${1:gvpTest:customGVPTest - Optional - String}\""
    },
    {
      "trigger": "gvpTest-labelProvider-simplevalue1\tAttr",
      "contents": "simplevalue1=\"${1:gvpTest:labelProvider - Optional - Object}\""
    },
    {
      "trigger": "gvpTest-labelProvider-simplevalue2\tAttr",
      "contents": "simplevalue2=\"${1:gvpTest:labelProvider - Optional - Object}\""
    },
    {
      "trigger": "gvpTest-labelProvider-simplevalue3\tAttr",
      "contents": "simplevalue3=\"${1:gvpTest:labelProvider - Optional - Object}\""
    },
    {
      "trigger": "gvpTest-labelProvider-simplevalue4\tAttr",
      "contents": "simplevalue4=\"${1:gvpTest:labelProvider - Optional - Object}\""
    },
    {
      "trigger": "gvpTest-parseLabels-xxx\tAttr",
      "contents": "xxx=\"${1:gvpTest:parseLabels - Optional - String}\""
    },
    {
      "trigger": "gvpTest-parseLabels-yyy\tAttr",
      "contents": "yyy=\"${1:gvpTest:parseLabels - Optional - String}\""
    },
    {
      "trigger": "handleEventTest-aHandlesEventFromA-evt\tAttr",
      "contents": "evt=\"${1:handleEventTest:aHandlesEventFromA - Optional - handleEventTest:event}\""
    },
    {
      "trigger": "handleEventTest-bHandlesEventFromA-evtB\tAttr",
      "contents": "evtB=\"${1:handleEventTest:bHandlesEventFromA - Optional - handleEventTest:event}\""
    },
    {
      "trigger": "handleEventTest-handlerWithNameAndEvent-somename\tAttr",
      "contents": "somename=\"${1:handleEventTest:handlerWithNameAndEvent - Optional - handleEventTest:event}\""
    },
    {
      "trigger": "handleEventTest-handlerWithNameForApplicationEvent-anApplicationEvent\tAttr",
      "contents": "anApplicationEvent=\"${1:handleEventTest:handlerWithNameForApplicationEvent - Optional - handleEventTest:applicationEvent}\""
    },
    {
      "trigger": "handleEventTest-handlesABAppEvents-A\tAttr",
      "contents": "A=\"${1:handleEventTest:handlesABAppEvents - Optional - handleEventTest:event}\""
    },
    {
      "trigger": "handleEventTest-handlesABAppEvents-B\tAttr",
      "contents": "B=\"${1:handleEventTest:handlesABAppEvents - Optional - handleEventTest:event}\""
    },
    {
      "trigger": "handleEventTest-multipleHandlersForEvent-A\tAttr",
      "contents": "A=\"${1:handleEventTest:multipleHandlersForEvent - Optional - handleEventTest:event}\""
    },
    {
      "trigger": "handleEventTest-registersApplicationEvent-anApplicationEvent\tAttr",
      "contents": "anApplicationEvent=\"${1:handleEventTest:registersApplicationEvent - Optional - handleEventTest:applicationEvent}\""
    },
    {
      "trigger": "ifTest-testIf-thang\tAttr",
      "contents": "thang=\"${1:ifTest:testIf - Optional - Boolean}\""
    },
    {
      "trigger": "ifTest-testIfElse-thang\tAttr",
      "contents": "thang=\"${1:ifTest:testIfElse - Optional - Boolean}\""
    },
    {
      "trigger": "ifTest-testIfNested-outer\tAttr",
      "contents": "outer=\"${1:ifTest:testIfNested - Optional - Boolean}\""
    },
    {
      "trigger": "ifTest-testIfNested-inner\tAttr",
      "contents": "inner=\"${1:ifTest:testIfNested - Optional - Boolean}\""
    },
    {
      "trigger": "ifTest-testIfServer-thang\tAttr",
      "contents": "thang=\"${1:ifTest:testIfServer - Optional - Boolean}\""
    },
    {
      "trigger": "ifTest-testIfWithIterationInside-bool1\tAttr",
      "contents": "bool1=\"${1:ifTest:testIfWithIterationInside - Optional - Boolean}\""
    },
    {
      "trigger": "ifTest-testIfWithModel-attr\tAttr",
      "contents": "attr=\"${1:ifTest:testIfWithModel - Optional - String}\""
    },
    {
      "trigger": "ifTest-testRenderIfNested-outer\tAttr",
      "contents": "outer=\"${1:ifTest:testRenderIfNested - Optional - Boolean}\""
    },
    {
      "trigger": "ifTest-testRenderIfNested-inner\tAttr",
      "contents": "inner=\"${1:ifTest:testRenderIfNested - Optional - Boolean}\""
    },
    {
      "trigger": "integrationService-noHistoryService-txt\tAttr",
      "contents": "txt=\"${1:integrationService:noHistoryService - Optional - String}\""
    },
    {
      "trigger": "integrationService-simpleStub-placeholder\tAttr",
      "contents": "placeholder=\"${1:integrationService:simpleStub - Optional - String}\""
    },
    {
      "trigger": "integrationService-simpleStub-localId\tAttr",
      "contents": "localId=\"${1:integrationService:simpleStub - Optional - String}\""
    },
    {
      "trigger": "integrationService-simpleStub-desc\tAttr",
      "contents": "desc=\"${1:integrationService:simpleStub - Optional - String}\""
    },
    {
      "trigger": "integrationService-simpleStub-attrMap\tAttr",
      "contents": "attrMap=\"${1:integrationService:simpleStub - Optional - Map}\""
    },
    {
      "trigger": "iterationPerformanceTest-iterationBatchOperations-initialState\tAttr",
      "contents": "initialState=\"${1:iterationPerformanceTest:iterationBatchOperations - Optional - Object}\""
    },
    {
      "trigger": "iterationPerformanceTest-iterationBatchOperations-iterationItems\tAttr",
      "contents": "iterationItems=\"${1:iterationPerformanceTest:iterationBatchOperations - Optional - Object}\""
    },
    {
      "trigger": "iterationTest-arrayIteration-newCmp\tAttr",
      "contents": "newCmp=\"${1:iterationTest:arrayIteration - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "iterationTest-arrayIterationNotPreloaded-value\tAttr",
      "contents": "value=\"${1:iterationTest:arrayIterationNotPreloaded - Optional - String[]}\""
    },
    {
      "trigger": "iterationTest-arrayIterationPreloaded-value\tAttr",
      "contents": "value=\"${1:iterationTest:arrayIterationPreloaded - Optional - String[]}\""
    },
    {
      "trigger": "iterationTest-basicIteration-showIteration\tAttr",
      "contents": "showIteration=\"${1:iterationTest:basicIteration - Optional - Boolean}\""
    },
    {
      "trigger": "iterationTest-basicIteration-items\tAttr",
      "contents": "items=\"${1:iterationTest:basicIteration - Optional - List}\""
    },
    {
      "trigger": "iterationTest-basicIteration-start\tAttr",
      "contents": "start=\"${1:iterationTest:basicIteration - Optional - Object}\""
    },
    {
      "trigger": "iterationTest-basicIteration-end\tAttr",
      "contents": "end=\"${1:iterationTest:basicIteration - Optional - Object}\""
    },
    {
      "trigger": "iterationTest-basicIteration-iterationCompleteFired\tAttr",
      "contents": "iterationCompleteFired=\"${1:iterationTest:basicIteration - Optional - Boolean}\""
    },
    {
      "trigger": "iterationTest-basicIteration-iterationCompleteOperation\tAttr",
      "contents": "iterationCompleteOperation=\"${1:iterationTest:basicIteration - Optional - String}\""
    },
    {
      "trigger": "iterationTest-cmpWithDefaultAtt-messages\tAttr",
      "contents": "messages=\"${1:iterationTest:cmpWithDefaultAtt - Optional - List}\""
    },
    {
      "trigger": "iterationTest-cmpWithDefaultAtt-color\tAttr",
      "contents": "color=\"${1:iterationTest:cmpWithDefaultAtt - Optional - string}\""
    },
    {
      "trigger": "iterationTest-cmpWithDefaultAtt2-messages\tAttr",
      "contents": "messages=\"${1:iterationTest:cmpWithDefaultAtt2 - Optional - List}\""
    },
    {
      "trigger": "iterationTest-cmpWithDefaultAtt2-color\tAttr",
      "contents": "color=\"${1:iterationTest:cmpWithDefaultAtt2 - Optional - string}\""
    },
    {
      "trigger": "iterationTest-componentIteration-start\tAttr",
      "contents": "start=\"${1:iterationTest:componentIteration - Optional - Integer}\""
    },
    {
      "trigger": "iterationTest-componentIteration-end\tAttr",
      "contents": "end=\"${1:iterationTest:componentIteration - Optional - Integer}\""
    },
    {
      "trigger": "iterationTest-componentIteration-cmps\tAttr",
      "contents": "cmps=\"${1:iterationTest:componentIteration - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "iterationTest-diffTypeOfChildren-start\tAttr",
      "contents": "start=\"${1:iterationTest:diffTypeOfChildren - Optional - Integer}\""
    },
    {
      "trigger": "iterationTest-diffTypeOfChildren-end\tAttr",
      "contents": "end=\"${1:iterationTest:diffTypeOfChildren - Optional - Integer}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ArrayFromAttribute-listdata\tAttr",
      "contents": "listdata=\"${1:iterationTest:iterationArrayValueChange_ArrayFromAttribute - Optional - List}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ArrayFromAttribute-start\tAttr",
      "contents": "start=\"${1:iterationTest:iterationArrayValueChange_ArrayFromAttribute - Optional - integer}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ArrayFromAttribute-end\tAttr",
      "contents": "end=\"${1:iterationTest:iterationArrayValueChange_ArrayFromAttribute - Optional - integer}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ArrayFromAttribute-indexToChange\tAttr",
      "contents": "indexToChange=\"${1:iterationTest:iterationArrayValueChange_ArrayFromAttribute - Optional - integer}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ArrayFromAttribute-newValueToChange\tAttr",
      "contents": "newValueToChange=\"${1:iterationTest:iterationArrayValueChange_ArrayFromAttribute - Optional - string}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ArrayFromAttribute-indexToInsert\tAttr",
      "contents": "indexToInsert=\"${1:iterationTest:iterationArrayValueChange_ArrayFromAttribute - Optional - string}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ArrayFromAttribute-newValueToInsert\tAttr",
      "contents": "newValueToInsert=\"${1:iterationTest:iterationArrayValueChange_ArrayFromAttribute - Optional - string}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ArrayFromAttribute-indexToDelete\tAttr",
      "contents": "indexToDelete=\"${1:iterationTest:iterationArrayValueChange_ArrayFromAttribute - Optional - string}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ArrayFromAttribute_PassThroughValue-listdata\tAttr",
      "contents": "listdata=\"${1:iterationTest:iterationArrayValueChange_ArrayFromAttribute_PassThroughValue - Optional - List}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ArrayFromAttribute_PassThroughValue-start\tAttr",
      "contents": "start=\"${1:iterationTest:iterationArrayValueChange_ArrayFromAttribute_PassThroughValue - Optional - integer}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ArrayFromAttribute_PassThroughValue-end\tAttr",
      "contents": "end=\"${1:iterationTest:iterationArrayValueChange_ArrayFromAttribute_PassThroughValue - Optional - integer}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ArrayFromAttribute_PassThroughValue-indexToChange\tAttr",
      "contents": "indexToChange=\"${1:iterationTest:iterationArrayValueChange_ArrayFromAttribute_PassThroughValue - Optional - integer}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ArrayFromAttribute_PassThroughValue-newValueToChange\tAttr",
      "contents": "newValueToChange=\"${1:iterationTest:iterationArrayValueChange_ArrayFromAttribute_PassThroughValue - Optional - string}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ArrayFromAttribute_PassThroughValue-indexToInsert\tAttr",
      "contents": "indexToInsert=\"${1:iterationTest:iterationArrayValueChange_ArrayFromAttribute_PassThroughValue - Optional - string}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ArrayFromAttribute_PassThroughValue-newValueToInsert\tAttr",
      "contents": "newValueToInsert=\"${1:iterationTest:iterationArrayValueChange_ArrayFromAttribute_PassThroughValue - Optional - string}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ArrayFromAttribute_PassThroughValue-indexToDelete\tAttr",
      "contents": "indexToDelete=\"${1:iterationTest:iterationArrayValueChange_ArrayFromAttribute_PassThroughValue - Optional - string}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ArrayFromModel-start\tAttr",
      "contents": "start=\"${1:iterationTest:iterationArrayValueChange_ArrayFromModel - Optional - integer}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ArrayFromModel-end\tAttr",
      "contents": "end=\"${1:iterationTest:iterationArrayValueChange_ArrayFromModel - Optional - integer}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ArrayFromModel-indexToChange\tAttr",
      "contents": "indexToChange=\"${1:iterationTest:iterationArrayValueChange_ArrayFromModel - Optional - integer}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ArrayFromModel-newValueToChange\tAttr",
      "contents": "newValueToChange=\"${1:iterationTest:iterationArrayValueChange_ArrayFromModel - Optional - string}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ArrayFromModel-indexToInsert\tAttr",
      "contents": "indexToInsert=\"${1:iterationTest:iterationArrayValueChange_ArrayFromModel - Optional - string}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ArrayFromModel-newValueToInsert\tAttr",
      "contents": "newValueToInsert=\"${1:iterationTest:iterationArrayValueChange_ArrayFromModel - Optional - string}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ArrayFromModel-indexToDelete\tAttr",
      "contents": "indexToDelete=\"${1:iterationTest:iterationArrayValueChange_ArrayFromModel - Optional - string}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ArrayFromModel_PassThroughValue-start\tAttr",
      "contents": "start=\"${1:iterationTest:iterationArrayValueChange_ArrayFromModel_PassThroughValue - Optional - integer}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ArrayFromModel_PassThroughValue-end\tAttr",
      "contents": "end=\"${1:iterationTest:iterationArrayValueChange_ArrayFromModel_PassThroughValue - Optional - integer}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ArrayFromModel_PassThroughValue-indexToChange\tAttr",
      "contents": "indexToChange=\"${1:iterationTest:iterationArrayValueChange_ArrayFromModel_PassThroughValue - Optional - integer}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ArrayFromModel_PassThroughValue-newValueToChange\tAttr",
      "contents": "newValueToChange=\"${1:iterationTest:iterationArrayValueChange_ArrayFromModel_PassThroughValue - Optional - string}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ArrayFromModel_PassThroughValue-indexToInsert\tAttr",
      "contents": "indexToInsert=\"${1:iterationTest:iterationArrayValueChange_ArrayFromModel_PassThroughValue - Optional - string}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ArrayFromModel_PassThroughValue-newValueToInsert\tAttr",
      "contents": "newValueToInsert=\"${1:iterationTest:iterationArrayValueChange_ArrayFromModel_PassThroughValue - Optional - string}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ArrayFromModel_PassThroughValue-indexToDelete\tAttr",
      "contents": "indexToDelete=\"${1:iterationTest:iterationArrayValueChange_ArrayFromModel_PassThroughValue - Optional - string}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ObjectFromAttribute-mapdata\tAttr",
      "contents": "mapdata=\"${1:iterationTest:iterationArrayValueChange_ObjectFromAttribute - Optional - Object}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ObjectFromAttribute-start\tAttr",
      "contents": "start=\"${1:iterationTest:iterationArrayValueChange_ObjectFromAttribute - Optional - integer}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ObjectFromAttribute-end\tAttr",
      "contents": "end=\"${1:iterationTest:iterationArrayValueChange_ObjectFromAttribute - Optional - integer}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ObjectFromAttribute-indexToChange\tAttr",
      "contents": "indexToChange=\"${1:iterationTest:iterationArrayValueChange_ObjectFromAttribute - Optional - integer}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ObjectFromAttribute-newValueToChange\tAttr",
      "contents": "newValueToChange=\"${1:iterationTest:iterationArrayValueChange_ObjectFromAttribute - Optional - string}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ObjectFromAttribute-indexToInsert\tAttr",
      "contents": "indexToInsert=\"${1:iterationTest:iterationArrayValueChange_ObjectFromAttribute - Optional - string}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ObjectFromAttribute-newValueToInsert\tAttr",
      "contents": "newValueToInsert=\"${1:iterationTest:iterationArrayValueChange_ObjectFromAttribute - Optional - string}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ObjectFromAttribute-indexToDelete\tAttr",
      "contents": "indexToDelete=\"${1:iterationTest:iterationArrayValueChange_ObjectFromAttribute - Optional - string}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ObjectFromAttribute_PassThroughValue-mapdata\tAttr",
      "contents": "mapdata=\"${1:iterationTest:iterationArrayValueChange_ObjectFromAttribute_PassThroughValue - Optional - Object}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ObjectFromAttribute_PassThroughValue-start\tAttr",
      "contents": "start=\"${1:iterationTest:iterationArrayValueChange_ObjectFromAttribute_PassThroughValue - Optional - integer}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ObjectFromAttribute_PassThroughValue-end\tAttr",
      "contents": "end=\"${1:iterationTest:iterationArrayValueChange_ObjectFromAttribute_PassThroughValue - Optional - integer}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ObjectFromAttribute_PassThroughValue-indexToChange\tAttr",
      "contents": "indexToChange=\"${1:iterationTest:iterationArrayValueChange_ObjectFromAttribute_PassThroughValue - Optional - integer}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ObjectFromAttribute_PassThroughValue-newValueToChange\tAttr",
      "contents": "newValueToChange=\"${1:iterationTest:iterationArrayValueChange_ObjectFromAttribute_PassThroughValue - Optional - string}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ObjectFromAttribute_PassThroughValue-indexToInsert\tAttr",
      "contents": "indexToInsert=\"${1:iterationTest:iterationArrayValueChange_ObjectFromAttribute_PassThroughValue - Optional - string}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ObjectFromAttribute_PassThroughValue-newValueToInsert\tAttr",
      "contents": "newValueToInsert=\"${1:iterationTest:iterationArrayValueChange_ObjectFromAttribute_PassThroughValue - Optional - string}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ObjectFromAttribute_PassThroughValue-indexToDelete\tAttr",
      "contents": "indexToDelete=\"${1:iterationTest:iterationArrayValueChange_ObjectFromAttribute_PassThroughValue - Optional - string}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ObjectFromModel-start\tAttr",
      "contents": "start=\"${1:iterationTest:iterationArrayValueChange_ObjectFromModel - Optional - integer}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ObjectFromModel-end\tAttr",
      "contents": "end=\"${1:iterationTest:iterationArrayValueChange_ObjectFromModel - Optional - integer}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ObjectFromModel-indexToChange\tAttr",
      "contents": "indexToChange=\"${1:iterationTest:iterationArrayValueChange_ObjectFromModel - Optional - integer}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ObjectFromModel-newValueToChange\tAttr",
      "contents": "newValueToChange=\"${1:iterationTest:iterationArrayValueChange_ObjectFromModel - Optional - string}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ObjectFromModel-indexToInsert\tAttr",
      "contents": "indexToInsert=\"${1:iterationTest:iterationArrayValueChange_ObjectFromModel - Optional - string}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ObjectFromModel-newValueToInsert\tAttr",
      "contents": "newValueToInsert=\"${1:iterationTest:iterationArrayValueChange_ObjectFromModel - Optional - string}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ObjectFromModel-indexToDelete\tAttr",
      "contents": "indexToDelete=\"${1:iterationTest:iterationArrayValueChange_ObjectFromModel - Optional - string}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ObjectFromModel_PassThroughValue-start\tAttr",
      "contents": "start=\"${1:iterationTest:iterationArrayValueChange_ObjectFromModel_PassThroughValue - Optional - integer}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ObjectFromModel_PassThroughValue-end\tAttr",
      "contents": "end=\"${1:iterationTest:iterationArrayValueChange_ObjectFromModel_PassThroughValue - Optional - integer}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ObjectFromModel_PassThroughValue-indexToChange\tAttr",
      "contents": "indexToChange=\"${1:iterationTest:iterationArrayValueChange_ObjectFromModel_PassThroughValue - Optional - integer}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ObjectFromModel_PassThroughValue-newValueToChange\tAttr",
      "contents": "newValueToChange=\"${1:iterationTest:iterationArrayValueChange_ObjectFromModel_PassThroughValue - Optional - string}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ObjectFromModel_PassThroughValue-indexToInsert\tAttr",
      "contents": "indexToInsert=\"${1:iterationTest:iterationArrayValueChange_ObjectFromModel_PassThroughValue - Optional - string}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ObjectFromModel_PassThroughValue-newValueToInsert\tAttr",
      "contents": "newValueToInsert=\"${1:iterationTest:iterationArrayValueChange_ObjectFromModel_PassThroughValue - Optional - string}\""
    },
    {
      "trigger": "iterationTest-iterationArrayValueChange_ObjectFromModel_PassThroughValue-indexToDelete\tAttr",
      "contents": "indexToDelete=\"${1:iterationTest:iterationArrayValueChange_ObjectFromModel_PassThroughValue - Optional - string}\""
    },
    {
      "trigger": "iterationTest-iterationChildWJSProvider-strAttribute\tAttr",
      "contents": "strAttribute=\"${1:iterationTest:iterationChildWJSProvider - Optional - String}\""
    },
    {
      "trigger": "iterationTest-iterationChildWJSProvider-newStrAttribute\tAttr",
      "contents": "newStrAttribute=\"${1:iterationTest:iterationChildWJSProvider - Optional - String}\""
    },
    {
      "trigger": "iterationTest-iterationChildWithModel-fromiteration\tAttr",
      "contents": "fromiteration=\"${1:iterationTest:iterationChildWithModel - Optional - string}\""
    },
    {
      "trigger": "iterationTest-iterationChildWithModel-fromparent\tAttr",
      "contents": "fromparent=\"${1:iterationTest:iterationChildWithModel - Optional - string}\""
    },
    {
      "trigger": "iterationTest-iterationTemplateChange-items\tAttr",
      "contents": "items=\"${1:iterationTest:iterationTemplateChange - Optional - List}\""
    },
    {
      "trigger": "iterationTest-iterationTemplateChange-status\tAttr",
      "contents": "status=\"${1:iterationTest:iterationTemplateChange - Optional - String}\""
    },
    {
      "trigger": "iterationTest-iterationWJSProviderOnly-cmpDescriptorName\tAttr",
      "contents": "cmpDescriptorName=\"${1:iterationTest:iterationWJSProviderOnly - Optional - String}\""
    },
    {
      "trigger": "iterationTest-iterationWJSProviderOnlyList-items\tAttr",
      "contents": "items=\"${1:iterationTest:iterationWJSProviderOnlyList - Optional - String[]}\""
    },
    {
      "trigger": "iterationTest-iterationWithBodyTemplate-items\tAttr",
      "contents": "items=\"${1:iterationTest:iterationWithBodyTemplate - Optional - List}\""
    },
    {
      "trigger": "iterationTest-iterationWithBodyTemplate-stringAttr\tAttr",
      "contents": "stringAttr=\"${1:iterationTest:iterationWithBodyTemplate - Optional - String}\""
    },
    {
      "trigger": "iterationTest-iterationWithBodyTemplate-itemTemplate\tAttr",
      "contents": "itemTemplate=\"${1:iterationTest:iterationWithBodyTemplate - Required - Aura.ComponentDefRef[]}\""
    },
    {
      "trigger": "iterationTest-iterationWithBodyTemplateConsumer-stringAttr\tAttr",
      "contents": "stringAttr=\"${1:iterationTest:iterationWithBodyTemplateConsumer - Optional - String}\""
    },
    {
      "trigger": "iterationTest-iterationWithIfInside-list\tAttr",
      "contents": "list=\"${1:iterationTest:iterationWithIfInside - Optional - List}\""
    },
    {
      "trigger": "iterationTest-iterationWithIfInside-start\tAttr",
      "contents": "start=\"${1:iterationTest:iterationWithIfInside - Optional - integer}\""
    },
    {
      "trigger": "iterationTest-iterationWithIfInside-end\tAttr",
      "contents": "end=\"${1:iterationTest:iterationWithIfInside - Optional - integer}\""
    },
    {
      "trigger": "iterationTest-iterationWithIfInside-showEven\tAttr",
      "contents": "showEven=\"${1:iterationTest:iterationWithIfInside - Optional - Boolean}\""
    },
    {
      "trigger": "iterationTest-iterationWithLabelInside-data\tAttr",
      "contents": "data=\"${1:iterationTest:iterationWithLabelInside - Optional - List}\""
    },
    {
      "trigger": "iterationTest-iterationWithLabelInside-className\tAttr",
      "contents": "className=\"${1:iterationTest:iterationWithLabelInside - Optional - String}\""
    },
    {
      "trigger": "iterationTest-iterationWithModelInnerCmp-value\tAttr",
      "contents": "value=\"${1:iterationTest:iterationWithModelInnerCmp - Optional - String}\""
    },
    {
      "trigger": "iterationTest-iterationWrapper-value\tAttr",
      "contents": "value=\"${1:iterationTest:iterationWrapper - Optional - String}\""
    },
    {
      "trigger": "iterationTest-modifyDefRef-items\tAttr",
      "contents": "items=\"${1:iterationTest:modifyDefRef - Optional - List}\""
    },
    {
      "trigger": "iterationTest-modifyDefRef-cdr\tAttr",
      "contents": "cdr=\"${1:iterationTest:modifyDefRef - Optional - Aura.ComponentDefRef[]}\""
    },
    {
      "trigger": "iterationTest-resetIteration-data\tAttr",
      "contents": "data=\"${1:iterationTest:resetIteration - Optional - Object}\""
    },
    {
      "trigger": "iterationTest-resetIteration-innerClassName\tAttr",
      "contents": "innerClassName=\"${1:iterationTest:resetIteration - Optional - String}\""
    },
    {
      "trigger": "iterationTest-resetIteration-_initialized\tAttr",
      "contents": "_initialized=\"${1:iterationTest:resetIteration - Optional - String}\""
    },
    {
      "trigger": "iterationTest-startAndEndIndexWithDefaults-items\tAttr",
      "contents": "items=\"${1:iterationTest:startAndEndIndexWithDefaults - Optional - List}\""
    },
    {
      "trigger": "iterationTest-startAndEndIndexWithDefaults-setIndexesInInit\tAttr",
      "contents": "setIndexesInInit=\"${1:iterationTest:startAndEndIndexWithDefaults - Optional - Boolean}\""
    },
    {
      "trigger": "iterationTest-startAndEndIndexWithDefaults-start\tAttr",
      "contents": "start=\"${1:iterationTest:startAndEndIndexWithDefaults - Optional - Object}\""
    },
    {
      "trigger": "iterationTest-startAndEndIndexWithDefaults-end\tAttr",
      "contents": "end=\"${1:iterationTest:startAndEndIndexWithDefaults - Optional - Object}\""
    },
    {
      "trigger": "iterationTest-withLazyComponents-start\tAttr",
      "contents": "start=\"${1:iterationTest:withLazyComponents - Optional - Integer}\""
    },
    {
      "trigger": "iterationTest-withLazyComponents-end\tAttr",
      "contents": "end=\"${1:iterationTest:withLazyComponents - Optional - Integer}\""
    },
    {
      "trigger": "iterationTest-withLazyComponents-slowFacet\tAttr",
      "contents": "slowFacet=\"${1:iterationTest:withLazyComponents - Optional - boolean}\""
    },
    {
      "trigger": "iterationTest-withLazyComponents-fastFacet\tAttr",
      "contents": "fastFacet=\"${1:iterationTest:withLazyComponents - Optional - boolean}\""
    },
    {
      "trigger": "listTest-testListAttrItemTemplate-itemFromDataProvider\tAttr",
      "contents": "itemFromDataProvider=\"${1:listTest:testListAttrItemTemplate - Optional - String}\""
    },
    {
      "trigger": "listTest-testListAttrItemTemplate-itemFromThisComp\tAttr",
      "contents": "itemFromThisComp=\"${1:listTest:testListAttrItemTemplate - Optional - String}\""
    },
    {
      "trigger": "listTest-testListAttributeEvaluation-extraString\tAttr",
      "contents": "extraString=\"${1:listTest:testListAttributeEvaluation - Required - String}\""
    },
    {
      "trigger": "loadLevelTest-NonPreloadedServerComponent-waitId\tAttr",
      "contents": "waitId=\"${1:loadLevelTest:NonPreloadedServerComponent - Optional - String}\""
    },
    {
      "trigger": "loadLevelTest-NonPreloadedServerComponent-stringAttribute\tAttr",
      "contents": "stringAttribute=\"${1:loadLevelTest:NonPreloadedServerComponent - Optional - String}\""
    },
    {
      "trigger": "loadLevelTest-clientComponent-first\tAttr",
      "contents": "first=\"${1:loadLevelTest:clientComponent - Optional - String}\""
    },
    {
      "trigger": "loadLevelTest-clientComponent-last\tAttr",
      "contents": "last=\"${1:loadLevelTest:clientComponent - Optional - String}\""
    },
    {
      "trigger": "loadLevelTest-clientComponent-arrayOfMaps\tAttr",
      "contents": "arrayOfMaps=\"${1:loadLevelTest:clientComponent - Optional - List}\""
    },
    {
      "trigger": "loadLevelTest-clientProvidesServerCmp-value\tAttr",
      "contents": "value=\"${1:loadLevelTest:clientProvidesServerCmp - Optional - String}\""
    },
    {
      "trigger": "loadLevelTest-clientWithLazyClientChild-status\tAttr",
      "contents": "status=\"${1:loadLevelTest:clientWithLazyClientChild - Optional - String}\""
    },
    {
      "trigger": "loadLevelTest-clientWithServerChild-stringAttribute\tAttr",
      "contents": "stringAttribute=\"${1:loadLevelTest:clientWithServerChild - Optional - String}\""
    },
    {
      "trigger": "loadLevelTest-createNewCmp-testAttr\tAttr",
      "contents": "testAttr=\"${1:loadLevelTest:createNewCmp - Optional - String}\""
    },
    {
      "trigger": "loadLevelTest-createNewCmp-testAttr2\tAttr",
      "contents": "testAttr2=\"${1:loadLevelTest:createNewCmp - Optional - Integer}\""
    },
    {
      "trigger": "loadLevelTest-createNewCmp-arrayOfMaps\tAttr",
      "contents": "arrayOfMaps=\"${1:loadLevelTest:createNewCmp - Optional - Object[]}\""
    },
    {
      "trigger": "loadLevelTest-displayBoolean-bool\tAttr",
      "contents": "bool=\"${1:loadLevelTest:displayBoolean - Optional - Boolean}\""
    },
    {
      "trigger": "loadLevelTest-displayMap-stringAttribute\tAttr",
      "contents": "stringAttribute=\"${1:loadLevelTest:displayMap - Optional - String}\""
    },
    {
      "trigger": "loadLevelTest-displayMap-map\tAttr",
      "contents": "map=\"${1:loadLevelTest:displayMap - Optional - Map}\""
    },
    {
      "trigger": "loadLevelTest-displayNumber-number\tAttr",
      "contents": "number=\"${1:loadLevelTest:displayNumber - Optional - Integer}\""
    },
    {
      "trigger": "loadLevelTest-displayStringArray-StringArray\tAttr",
      "contents": "StringArray=\"${1:loadLevelTest:displayStringArray - Optional - String[]}\""
    },
    {
      "trigger": "loadLevelTest-lazyLoadBasicTypes-stringAttribute\tAttr",
      "contents": "stringAttribute=\"${1:loadLevelTest:lazyLoadBasicTypes - Optional - String}\""
    },
    {
      "trigger": "loadLevelTest-lazyLoadBasicTypes-waitId\tAttr",
      "contents": "waitId=\"${1:loadLevelTest:lazyLoadBasicTypes - Optional - String}\""
    },
    {
      "trigger": "loadLevelTest-lazyLoadInRenderIf-flip\tAttr",
      "contents": "flip=\"${1:loadLevelTest:lazyLoadInRenderIf - Optional - boolean}\""
    },
    {
      "trigger": "loadLevelTest-loadLevel-testLazy\tAttr",
      "contents": "testLazy=\"${1:loadLevelTest:loadLevel - Optional - boolean}\""
    },
    {
      "trigger": "loadLevelTest-loadLevel-testExclusive\tAttr",
      "contents": "testExclusive=\"${1:loadLevelTest:loadLevel - Optional - boolean}\""
    },
    {
      "trigger": "loadLevelTest-loadLevel-testNestedLazy\tAttr",
      "contents": "testNestedLazy=\"${1:loadLevelTest:loadLevel - Optional - boolean}\""
    },
    {
      "trigger": "loadLevelTest-loadLevel-testMissingRequiredAttribute\tAttr",
      "contents": "testMissingRequiredAttribute=\"${1:loadLevelTest:loadLevel - Optional - boolean}\""
    },
    {
      "trigger": "loadLevelTest-loadSimpleAttributes-stringAttribute\tAttr",
      "contents": "stringAttribute=\"${1:loadLevelTest:loadSimpleAttributes - Optional - String}\""
    },
    {
      "trigger": "loadLevelTest-loadSimpleAttributes-integerAttribute\tAttr",
      "contents": "integerAttribute=\"${1:loadLevelTest:loadSimpleAttributes - Optional - Integer}\""
    },
    {
      "trigger": "loadLevelTest-loadSimpleAttributes-booleanAttribute\tAttr",
      "contents": "booleanAttribute=\"${1:loadLevelTest:loadSimpleAttributes - Optional - Boolean}\""
    },
    {
      "trigger": "loadLevelTest-loadSimpleAttributes-waitId\tAttr",
      "contents": "waitId=\"${1:loadLevelTest:loadSimpleAttributes - Optional - String}\""
    },
    {
      "trigger": "loadLevelTest-newCmpHalfLoad-receiverCmp\tAttr",
      "contents": "receiverCmp=\"${1:loadLevelTest:newCmpHalfLoad - Optional - String}\""
    },
    {
      "trigger": "loadLevelTest-newCmpHalfLoad-receiverCmpAuraId\tAttr",
      "contents": "receiverCmpAuraId=\"${1:loadLevelTest:newCmpHalfLoad - Optional - String}\""
    },
    {
      "trigger": "loadLevelTest-newCmpHalfLoad-controllerFuncToCreateCmp\tAttr",
      "contents": "controllerFuncToCreateCmp=\"${1:loadLevelTest:newCmpHalfLoad - Optional - String}\""
    },
    {
      "trigger": "loadLevelTest-newCmpWithValueProvider-stringAttribute\tAttr",
      "contents": "stringAttribute=\"${1:loadLevelTest:newCmpWithValueProvider - Optional - String}\""
    },
    {
      "trigger": "loadLevelTest-newCmpWithValueProvider-nameAttribute\tAttr",
      "contents": "nameAttribute=\"${1:loadLevelTest:newCmpWithValueProvider - Optional - String}\""
    },
    {
      "trigger": "loadLevelTest-newCmpWithValueProvider-numberAttribute\tAttr",
      "contents": "numberAttribute=\"${1:loadLevelTest:newCmpWithValueProvider - Optional - Integer}\""
    },
    {
      "trigger": "loadLevelTest-serverComponent-waitId\tAttr",
      "contents": "waitId=\"${1:loadLevelTest:serverComponent - Optional - String}\""
    },
    {
      "trigger": "loadLevelTest-serverComponent-stringAttribute\tAttr",
      "contents": "stringAttribute=\"${1:loadLevelTest:serverComponent - Optional - String}\""
    },
    {
      "trigger": "loadLevelTest-serverComponentWReqAttr-waitId\tAttr",
      "contents": "waitId=\"${1:loadLevelTest:serverComponentWReqAttr - Optional - String}\""
    },
    {
      "trigger": "loadLevelTest-serverComponentWReqAttr-stringAttribute\tAttr",
      "contents": "stringAttribute=\"${1:loadLevelTest:serverComponentWReqAttr - Required - String}\""
    },
    {
      "trigger": "loadLevelTest-serverWithLazyChild-waitId\tAttr",
      "contents": "waitId=\"${1:loadLevelTest:serverWithLazyChild - Optional - String}\""
    },
    {
      "trigger": "miscTest-aura_iteration-tochange\tAttr",
      "contents": "tochange=\"${1:miscTest:aura_iteration - Optional - Integer}\""
    },
    {
      "trigger": "miscTest-aura_iteration-newvalue\tAttr",
      "contents": "newvalue=\"${1:miscTest:aura_iteration - Optional - string}\""
    },
    {
      "trigger": "miscTest-aura_iteration-newEndIndex\tAttr",
      "contents": "newEndIndex=\"${1:miscTest:aura_iteration - Optional - Integer}\""
    },
    {
      "trigger": "miscTest-aura_iteration-inputValue\tAttr",
      "contents": "inputValue=\"${1:miscTest:aura_iteration - Optional - string}\""
    },
    {
      "trigger": "miscTest-aura_iteration-count\tAttr",
      "contents": "count=\"${1:miscTest:aura_iteration - Optional - integer}\""
    },
    {
      "trigger": "performanceTest-child-name\tAttr",
      "contents": "name=\"${1:performanceTest:child - Optional - String}\""
    },
    {
      "trigger": "performanceTest-grandparent-name\tAttr",
      "contents": "name=\"${1:performanceTest:grandparent - Optional - String}\""
    },
    {
      "trigger": "performanceTest-parent-name\tAttr",
      "contents": "name=\"${1:performanceTest:parent - Optional - String}\""
    },
    {
      "trigger": "performanceTest-runnerExample-loaded\tAttr",
      "contents": "loaded=\"${1:performanceTest:runnerExample - Optional - Boolean}\""
    },
    {
      "trigger": "performanceTest-runnerExample2-loaded\tAttr",
      "contents": "loaded=\"${1:performanceTest:runnerExample2 - Optional - Boolean}\""
    },
    {
      "trigger": "preloadTest-test_dynamicNamespace-whatToDo\tAttr",
      "contents": "whatToDo=\"${1:preloadTest:test_dynamicNamespace - Optional - String}\""
    },
    {
      "trigger": "provider-clientProvider-value\tAttr",
      "contents": "value=\"${1:provider:clientProvider - Optional - String}\""
    },
    {
      "trigger": "provider-cmpWithModel-value\tAttr",
      "contents": "value=\"${1:provider:cmpWithModel - Optional - String}\""
    },
    {
      "trigger": "provider-providerA-attA\tAttr",
      "contents": "attA=\"${1:provider:providerA - Optional - Boolean}\""
    },
    {
      "trigger": "provider-providerA-type\tAttr",
      "contents": "type=\"${1:provider:providerA - Optional - String}\""
    },
    {
      "trigger": "provider-providerB-attB\tAttr",
      "contents": "attB=\"${1:provider:providerB - Optional - Boolean}\""
    },
    {
      "trigger": "provider-providerB-new1\tAttr",
      "contents": "new1=\"${1:provider:providerB - Optional - String}\""
    },
    {
      "trigger": "provider-providerB-new2\tAttr",
      "contents": "new2=\"${1:provider:providerB - Optional - String}\""
    },
    {
      "trigger": "provider-providerB-new3\tAttr",
      "contents": "new3=\"${1:provider:providerB - Optional - String}\""
    },
    {
      "trigger": "provider-providerBase-type\tAttr",
      "contents": "type=\"${1:provider:providerBase - Optional - String}\""
    },
    {
      "trigger": "renderingTest-arrayValues-simpleValueArray\tAttr",
      "contents": "simpleValueArray=\"${1:renderingTest:arrayValues - Optional - String[]}\""
    },
    {
      "trigger": "renderingTest-arrayValues-componentArray\tAttr",
      "contents": "componentArray=\"${1:renderingTest:arrayValues - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "renderingTest-cmpWithRenderer-renderCounter\tAttr",
      "contents": "renderCounter=\"${1:renderingTest:cmpWithRenderer - Optional - Integer}\""
    },
    {
      "trigger": "renderingTest-cmpWithRenderer-rerenderCounter\tAttr",
      "contents": "rerenderCounter=\"${1:renderingTest:cmpWithRenderer - Optional - Integer}\""
    },
    {
      "trigger": "renderingTest-cmpWithRenderer-unrenderCounter\tAttr",
      "contents": "unrenderCounter=\"${1:renderingTest:cmpWithRenderer - Optional - Integer}\""
    },
    {
      "trigger": "renderingTest-cmpWithRendererExtendWithRenderer-extendRenderCounter\tAttr",
      "contents": "extendRenderCounter=\"${1:renderingTest:cmpWithRendererExtendWithRenderer - Optional - Integer}\""
    },
    {
      "trigger": "renderingTest-cmpWithRendererExtendWithRenderer-extendRerenderCounter\tAttr",
      "contents": "extendRerenderCounter=\"${1:renderingTest:cmpWithRendererExtendWithRenderer - Optional - Integer}\""
    },
    {
      "trigger": "renderingTest-cmpWithRendererExtendWithRenderer-extendUnrenderCounter\tAttr",
      "contents": "extendUnrenderCounter=\"${1:renderingTest:cmpWithRendererExtendWithRenderer - Optional - Integer}\""
    },
    {
      "trigger": "renderingTest-conditionalRendering-stuffToRender\tAttr",
      "contents": "stuffToRender=\"${1:renderingTest:conditionalRendering - Optional - Object}\""
    },
    {
      "trigger": "renderingTest-html-styleClass\tAttr",
      "contents": "styleClass=\"${1:renderingTest:html - Optional - String}\""
    },
    {
      "trigger": "renderingTest-renderCounter-index\tAttr",
      "contents": "index=\"${1:renderingTest:renderCounter - Optional - integer}\""
    },
    {
      "trigger": "renderingTest-renderCounter-renderCount\tAttr",
      "contents": "renderCount=\"${1:renderingTest:renderCounter - Optional - integer}\""
    },
    {
      "trigger": "renderingTest-renderCounter-rerenderCount\tAttr",
      "contents": "rerenderCount=\"${1:renderingTest:renderCounter - Optional - integer}\""
    },
    {
      "trigger": "renderingTest-renderCounter-unrenderCount\tAttr",
      "contents": "unrenderCount=\"${1:renderingTest:renderCounter - Optional - integer}\""
    },
    {
      "trigger": "renderingTest-renderCounter-onloadCount\tAttr",
      "contents": "onloadCount=\"${1:renderingTest:renderCounter - Optional - integer}\""
    },
    {
      "trigger": "renderingTest-test-stringAttribute\tAttr",
      "contents": "stringAttribute=\"${1:renderingTest:test - Optional - String}\""
    },
    {
      "trigger": "renderingTest-test-flag\tAttr",
      "contents": "flag=\"${1:renderingTest:test - Optional - Boolean}\""
    },
    {
      "trigger": "renderingTest-test-cmps\tAttr",
      "contents": "cmps=\"${1:renderingTest:test - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "renderingTest-testEventHandlerChain-stringValue\tAttr",
      "contents": "stringValue=\"${1:renderingTest:testEventHandlerChain - Optional - String}\""
    },
    {
      "trigger": "renderingTest-testEventHandlerChain-A\tAttr",
      "contents": "A=\"${1:renderingTest:testEventHandlerChain - Optional - handleEventTest:event}\""
    },
    {
      "trigger": "setAttributesTest-abstract-SimpleAttribute\tAttr",
      "contents": "SimpleAttribute=\"${1:setAttributesTest:abstract - Optional - string}\""
    },
    {
      "trigger": "setAttributesTest-attributesParent-city\tAttr",
      "contents": "city=\"${1:setAttributesTest:attributesParent - Optional - String}\""
    },
    {
      "trigger": "setAttributesTest-attributesParent-state\tAttr",
      "contents": "state=\"${1:setAttributesTest:attributesParent - Optional - String}\""
    },
    {
      "trigger": "setAttributesTest-attributesParent-address\tAttr",
      "contents": "address=\"${1:setAttributesTest:attributesParent - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "setAttributesTest-grandparent-SimpleAttribute\tAttr",
      "contents": "SimpleAttribute=\"${1:setAttributesTest:grandparent - Optional - java://String}\""
    },
    {
      "trigger": "setAttributesTest-grandparent-ComponentTypeAttribute\tAttr",
      "contents": "ComponentTypeAttribute=\"${1:setAttributesTest:grandparent - Optional - Aura.Component[]}\""
    },
    {
      "trigger": "setAttributesTest-typeCoercion-stringAttribute\tAttr",
      "contents": "stringAttribute=\"${1:setAttributesTest:typeCoercion - Optional - String}\""
    },
    {
      "trigger": "setAttributesTest-typeCoercion-stringArrayAttribute\tAttr",
      "contents": "stringArrayAttribute=\"${1:setAttributesTest:typeCoercion - Optional - String[]}\""
    },
    {
      "trigger": "setAttributesTest-typeCoercion-listAttribute\tAttr",
      "contents": "listAttribute=\"${1:setAttributesTest:typeCoercion - Optional - List}\""
    },
    {
      "trigger": "updateTest-updateWithoutHandling-text\tAttr",
      "contents": "text=\"${1:updateTest:updateWithoutHandling - Optional - string}\""
    },
    {
      "trigger": "updateTest-updateable-click\tAttr",
      "contents": "click=\"${1:updateTest:updateable - Optional - updateTest:updateableEvent}\""
    },
    {
      "trigger": "valueChange-componentInit-strAttribute\tAttr",
      "contents": "strAttribute=\"${1:valueChange:componentInit - Optional - String}\""
    },
    {
      "trigger": "valueChange-simpleValueChange-observed\tAttr",
      "contents": "observed=\"${1:valueChange:simpleValueChange - Optional - String}\""
    },
    {
      "trigger": "valueChange-simpleValueChange-observedB\tAttr",
      "contents": "observedB=\"${1:valueChange:simpleValueChange - Optional - string}\""
    },
    {
      "trigger": "valueChange-simpleValueChange-observedC\tAttr",
      "contents": "observedC=\"${1:valueChange:simpleValueChange - Optional - string}\""
    }
  ]
}