{
   "scope": "meta.tag.xml",
   "completions": [
      {
         "trigger": "tag-aura-component\t$A.Tag",
         "contents": "aura:component body=\"${1:aura:component Optional - Aura.Component[]}\">${2:Implements aura:rootComponent.\nThe root of the component hierarchy. Provides a default rendering implementation.}</aura:component>"
      },
      {
         "trigger": "tag-aura-debug\t$A.Tag",
         "contents": "aura:debug errorsData=\"${1:aura:debug Optional - String}\" warningsData=\"${2:aura:debug Optional - String}\" cmpData=\"${3:aura:debug Optional - String}\" eventData=\"${4:aura:debug Optional - String}\" storageData=\"${5:aura:debug Optional - String}\" consoleData=\"${6:aura:debug Optional - String}\" storageName=\"${7:aura:debug Optional - String}\" accessibilityData=\"${8:aura:debug Optional - String}\">${9:The Aura debug tool opens a separate browser window and outputs debug information about an Aura component. The debug tool has the following tabs: Errors, Warnings, Components, Events, Storage, Accessibility, and Console. To launch the Aura Debug tool, add the query string aura.debugtool=true after the URL of the Aura component file that you are viewing in your browser. For example: http://localhost:8080/auranote/noteList.cmp?aura.debugtool=true. To display additional statistics in the Components tab, append the query string aura.mode=STATS to the URL. For example: http://localhost:8080/auranote/noteList.cmp?aura.debugtool=true&aura.mode=STATS. You must disable the popup blocking feature of your web browser to use the debug tool.}</aura:debug>"
      },
      {
         "trigger": "tag-aura-embeddedTemplate\t$A.Tag",
         "contents": "aura:embeddedTemplate auraStyleTags=\"${1:aura:embeddedTemplate Optional - String}\" auraScriptTags=\"${2:aura:embeddedTemplate Optional - String}\" auraInit=\"${3:aura:embeddedTemplate Optional - String}\" auraInitBlock=\"${4:aura:embeddedTemplate Optional - String}\" extraStyleTags=\"${5:aura:embeddedTemplate Optional - Aura.Component[]}\" extraScriptTags=\"${6:aura:embeddedTemplate Optional - Aura.Component[]}\" extraMetaTags=\"${7:aura:embeddedTemplate Optional - Aura.Component[]}\">${8:A server-rendered template used to bootstrap the loading of the Aura framework and an application or component embedded in other containers, such as Visualforce, Siteforce, and legacy Salesforce UI.}</aura:embeddedTemplate>"
      },
      {
         "trigger": "tag-aura-expression\t$A.Tag",
         "contents": "aura:expression value=\"${1:aura:expression Optional - String}\">${2:Implements aura:rootComponent.\nRenders the value to which an expression evaluates. Creates an instance of this component which renders the\n                        referenced \"property reference value\" set to the value attribute when expressions are found in free text or markup.}</aura:expression>"
      },
      {
         "trigger": "tag-aura-html\t$A.Tag",
         "contents": "aura:html body=\"${1:aura:html Optional - Aura.Component[]}\" tag=\"${2:aura:html Optional - String}\" HTMLAttributes=\"${3:aura:html Optional - Map}\">${4:Implements aura:rootComponent.\nA meta component that represents all html elements.  Any html found in your markup causes the creation of one of these.}</aura:html>"
      },
      {
         "trigger": "tag-aura-if\t$A.Tag",
         "contents": "aura:if isTrue=\"${1:aura:if Required - Boolean}\" body=\"${2:aura:if Required - Aura.ComponentDefRef[]}\" else=\"${3:aura:if Optional - Aura.ComponentDefRef[]}\" template=\"${4:aura:if Optional - Aura.ComponentDefRef[]}\">${5:Implements aura:rootComponent.\nConditionally instantiates and renders either the body or the components in the else attribute.}</aura:if>"
      },
      {
         "trigger": "tag-aura-include\t$A.Tag",
         "contents": "aura:include name=\"${1:aura:include Required - String}\" imports=\"${2:aura:include Required - String}\">${3:Only usable in the body of aura:library (.lib) files. This attribute is used to specifiy the Javascript files that are loaded by the library and which file depend on which.}</aura:include>"
      },
      {
         "trigger": "tag-aura-integrationServiceTemplate\t$A.Tag",
         "contents": "aura:integrationServiceTemplate auraStyleTags=\"${1:aura:integrationServiceTemplate Optional - String}\" auraScriptTags=\"${2:aura:integrationServiceTemplate Optional - String}\" auraInit=\"${3:aura:integrationServiceTemplate Optional - String}\" auraInitBlock=\"${4:aura:integrationServiceTemplate Optional - String}\" extraStyleTags=\"${5:aura:integrationServiceTemplate Optional - Aura.Component[]}\" extraScriptTags=\"${6:aura:integrationServiceTemplate Optional - Aura.Component[]}\" extraMetaTags=\"${7:aura:integrationServiceTemplate Optional - Aura.Component[]}\">${8:A server-rendered template used to bootstrap the loading of the Aura framework and an application or component embedded in other containers, such as Visualforce, Siteforce, and legacy Salesforce UI.}</aura:integrationServiceTemplate>"
      },
      {
         "trigger": "tag-aura-iteration\t$A.Tag",
         "contents": "aura:iteration items=\"${1:aura:iteration Required - List}\" var=\"${2:aura:iteration Required - String}\" body=\"${7:aura:iteration Required - Aura.ComponentDefRef[]}\" indexVar=\"${3:aura:iteration Optional - String}\" start=\"${4:aura:iteration Optional - Integer}\" end=\"${5:aura:iteration Optional - Integer}\" loaded=\"${6:aura:iteration Optional - Boolean}\" template=\"${8:aura:iteration Optional - Aura.ComponentDefRef[]}\" forceServer=\"${9:aura:iteration Optional - Boolean}\">${10:Implements aura:rootComponent.\nRenders a view of a collection of items. Supports iterations containing components that can be created exclusively on the client-side.}</aura:iteration>"
      },
      {
         "trigger": "tag-aura-label\t$A.Tag",
         "contents": "aura:label value=\"${1:aura:label Optional - String}\">${2:Represents a label that accepts a dynamic value.}</aura:label>"
      },
      {
         "trigger": "tag-aura-placeholder\t$A.Tag",
         "contents": "aura:placeholder body=\"${1:aura:placeholder Optional - Aura.Component[]}\" refDescriptor=\"${2:aura:placeholder Optional - java://org.auraframework.def.DefDescriptor}\" attributes=\"${3:aura:placeholder Optional - Object}\" loaded=\"${4:aura:placeholder Optional - Boolean}\" exclusive=\"${5:aura:placeholder Optional - Boolean}\">${6:}</aura:placeholder>"
      },
      {
         "trigger": "tag-aura-renderIf\t$A.Tag",
         "contents": "aura:renderIf isTrue=\"${1:aura:renderIf Required - Boolean}\" else=\"${2:aura:renderIf Optional - Aura.Component[]}\">${3:This component allows you to conditionally render its contents. It renders its body only if isTrue evaluates to true. The else attribute allows you to render an alternative when isTrue evaluates to false.}</aura:renderIf>"
      },
      {
         "trigger": "tag-aura-template\t$A.Tag",
         "contents": "aura:template title=\"${1:aura:template Optional - String}\" auraStyleTags=\"${2:aura:template Optional - String}\" auraScriptTags=\"${3:aura:template Optional - String}\" auraBaseScriptTags=\"${4:aura:template Optional - String}\" auraNamespacesScriptTags=\"${5:aura:template Optional - String}\" auraResetCss=\"${6:aura:template Optional - String}\" auraInlineStyle=\"${7:aura:template Optional - String}\" auraInit=\"${8:aura:template Optional - String}\" auraInitSync=\"${9:aura:template Optional - String}\" auraPreInitBlock=\"${10:aura:template Optional - Aura.Component[]}\" auraInitBlock=\"${11:aura:template Optional - Aura.Component[]}\" autoInitialize=\"${12:aura:template Optional - String}\" autoInitializeSync=\"${13:aura:template Optional - String}\" doctype=\"${14:aura:template Optional - String}\" loadingText=\"${15:aura:template Optional - String}\" errorTitle=\"${16:aura:template Optional - String}\" errorMessage=\"${17:aura:template Optional - String}\" defaultBodyClass=\"${18:aura:template Optional - String}\" bodyClass=\"${19:aura:template Optional - String}\" extraStyleTags=\"${20:aura:template Optional - Aura.Component[]}\" extraScriptTags=\"${21:aura:template Optional - Aura.Component[]}\" extraMetaTags=\"${22:aura:template Optional - Aura.Component[]}\" normalizeCss=\"${23:aura:template Optional - Boolean}\" forceError=\"${24:aura:template Optional - Boolean}\" manifest=\"${25:aura:template Optional - String}\" lastMod=\"${26:aura:template Optional - String}\" afterAuraInit=\"${27:aura:template Optional - String}\" inlineStyle=\"${28:aura:template Optional - Aura.Component[]}\" appcacheProgressBarStyle=\"${29:aura:template Optional - Aura.Component[]}\">${30:Default template used to bootstrap Aura framework. To use another template, extend aura:template and set attributes using aura:set.}</aura:template>"
      },
      {
         "trigger": "tag-aura-text\t$A.Tag",
         "contents": "aura:text value=\"${1:aura:text Optional - String}\" truncate=\"${2:aura:text Optional - Integer}\" truncateByWord=\"${3:aura:text Optional - Boolean}\" ellipsis=\"${4:aura:text Optional - Boolean}\">${5:Implements aura:rootComponent.\nRenders plain text.  When any free text (not a tag or attribute value) is found in markup, an instance of this component is created with the value attribute set to the text found in the markup.}</aura:text>"
      },
      {
         "trigger": "tag-aura-unescapedHtml\t$A.Tag",
         "contents": "aura:unescapedHtml body=\"${1:aura:unescapedHtml Optional - Aura.Component[]}\" value=\"${2:aura:unescapedHtml Optional - String}\">${3:The value assigned to this component will be rendered as-is, without altering its contents. It's intended for outputting pre-formatted HTML, for example, where the formatting is arbitrary, or expensive to calculate. The body of this component is ignored, and won't be rendered. Warning: this component outputs value as unescaped HTML, which introduces the possibility of security vulnerabilities in your code. You must sanitize user input before rendering it unescaped, or you will create a cross-site scripting (XSS) vulnerability. Only use <aura:unescapedHtml> with trusted or sanitized sources of data.}</aura:unescapedHtml>"
      },
      {
         "trigger": "tag-auraStorage-fuelGauge\t$A.Tag",
         "contents": "auraStorage:fuelGauge storageName=\"${1:auraStorage:fuelGauge Required - String}\" value=\"${2:auraStorage:fuelGauge Optional - Decimal}\" enabled=\"${3:auraStorage:fuelGauge Optional - Boolean}\" implementation=\"${4:auraStorage:fuelGauge Optional - String}\">${5:}</auraStorage:fuelGauge>"
      },
      {
         "trigger": "tag-auraStorage-init\t$A.Tag",
         "contents": "auraStorage:init name=\"${1:auraStorage:init Required - String}\" persistent=\"${2:auraStorage:init Optional - Boolean}\" secure=\"${3:auraStorage:init Optional - Boolean}\" clearStorageOnInit=\"${4:auraStorage:init Optional - Boolean}\" defaultExpiration=\"${5:auraStorage:init Optional - Integer}\" defaultAutoRefreshInterval=\"${6:auraStorage:init Optional - Integer}\" maxSize=\"${7:auraStorage:init Optional - Integer}\" debugLoggingEnabled=\"${8:auraStorage:init Optional - Boolean}\" requireUseStorageQueryParam=\"${9:auraStorage:init Optional - Boolean}\" version=\"${10:auraStorage:init Optional - String}\">${11:}</auraStorage:init>"
      },
      {
         "trigger": "tag-auraadmin-cacheView\t$A.Tag",
         "contents": "auraadmin:cacheView name=\"${1:auraadmin:cacheView Required - String}\" data=\"${4:auraadmin:cacheView Required - Map}\" expanded=\"${2:auraadmin:cacheView Optional - boolean}\" showDefs=\"${3:auraadmin:cacheView Optional - boolean}\">${4:}</auraadmin:cacheView>"
      },
      {
         "trigger": "tag-auraadmin-cachingRegistryView\t$A.Tag",
         "contents": "auraadmin:cachingRegistryView expanded=\"${1:auraadmin:cachingRegistryView Optional - boolean}\">${2:}</auraadmin:cachingRegistryView>"
      },
      {
         "trigger": "tag-auraadmin-counterBeans\t$A.Tag",
         "contents": "auraadmin:counterBeans beans=\"${1:auraadmin:counterBeans Optional - List}\">${2:}</auraadmin:counterBeans>"
      },
      {
         "trigger": "tag-auraadmin-registryView\t$A.Tag",
         "contents": "auraadmin:registryView registry=\"${1:auraadmin:registryView Required - Map}\" buttons=\"${2:auraadmin:registryView Optional - Aura.Component[]}\">${3:}</auraadmin:registryView>"
      },
      {
         "trigger": "tag-auradev-blankTemplate\t$A.Tag",
         "contents": "auradev:blankTemplate>${2:}</auradev:blankTemplate>"
      },
      {
         "trigger": "tag-auradev-componentClass\t$A.Tag",
         "contents": "auradev:componentClass fullyQualifiedName=\"${1:auradev:componentClass Required - String}\" superFullyQualifiedName=\"${2:auradev:componentClass Required - String}\" className=\"${3:auradev:componentClass Required - String}\" superClassName=\"${4:auradev:componentClass Required - String}\" helperProperties=\"${5:auradev:componentClass Required - java://List<org.auraframework.impl.ServerServiceImpl.HelperInfo>}\" renderMethods=\"${6:auradev:componentClass Required - java://List<org.auraframework.util.json.JsFunction>}\" renderMethodStubs=\"${7:auradev:componentClass Required - String[]}\" superRenderMethodNames=\"${8:auradev:componentClass Required - java://List<org.auraframework.impl.ServerServiceImpl.RerenderInfo>}\" rootComponent=\"${9:auradev:componentClass Required - Boolean}\">${10:Renders the concrete javascript class for a component.}</auradev:componentClass>"
      },
      {
         "trigger": "tag-auradev-createApplicationDefQuickFix\t$A.Tag",
         "contents": "auradev:createApplicationDefQuickFix>${2:}</auradev:createApplicationDefQuickFix>"
      },
      {
         "trigger": "tag-auradev-createAttributeDefQuickFix\t$A.Tag",
         "contents": "auradev:createAttributeDefQuickFix>${2:}</auradev:createAttributeDefQuickFix>"
      },
      {
         "trigger": "tag-auradev-createBaseComponentDefQuickFix\t$A.Tag",
         "contents": "auradev:createBaseComponentDefQuickFix defType=\"${1:auradev:createBaseComponentDefQuickFix Optional - String}\">${2:}</auradev:createBaseComponentDefQuickFix>"
      },
      {
         "trigger": "tag-auradev-createComponentDefQuickFix\t$A.Tag",
         "contents": "auradev:createComponentDefQuickFix>${2:}</auradev:createComponentDefQuickFix>"
      },
      {
         "trigger": "tag-auradev-createThemeDefQuickFix\t$A.Tag",
         "contents": "auradev:createThemeDefQuickFix>${2:}</auradev:createThemeDefQuickFix>"
      },
      {
         "trigger": "tag-auradev-createThemeVarDefQuickFix\t$A.Tag",
         "contents": "auradev:createThemeVarDefQuickFix>${2:}</auradev:createThemeVarDefQuickFix>"
      },
      {
         "trigger": "tag-auradev-dependencyItem\t$A.Tag",
         "contents": "auradev:dependencyItem descriptor=\"${1:auradev:dependencyItem Optional - String}\" type=\"${2:auradev:dependencyItem Optional - String}\" uid=\"${3:auradev:dependencyItem Optional - String}\" error=\"${4:auradev:dependencyItem Optional - Boolean}\">${5:}</auradev:dependencyItem>"
      },
      {
         "trigger": "tag-auradev-lintc\t$A.Tag",
         "contents": "auradev:lintc name=\"${1:auradev:lintc Optional - String}\">${2:}</auradev:lintc>"
      },
      {
         "trigger": "tag-auradev-quickFix\t$A.Tag",
         "contents": "auradev:quickFix quickFix=\"${1:auradev:quickFix Optional - java://org.auraframework.throwable.quickfix.AuraQuickFix}\">${2:}</auradev:quickFix>"
      },
      {
         "trigger": "tag-auradev-quickFixButton\t$A.Tag",
         "contents": "auradev:quickFixButton quickFix=\"${1:auradev:quickFixButton Optional - java://org.auraframework.throwable.quickfix.AuraQuickFix}\">${2:}</auradev:quickFixButton>"
      },
      {
         "trigger": "tag-auradev-quickFixException\t$A.Tag",
         "contents": "auradev:quickFixException exception=\"${1:auradev:quickFixException Optional - java://org.auraframework.throwable.quickfix.QuickFixException}\" cause=\"${2:auradev:quickFixException Optional - String}\">${3:}</auradev:quickFixException>"
      },
      {
         "trigger": "tag-auradev-quickFixTemplate\t$A.Tag",
         "contents": "auradev:quickFixTemplate>${2:}</auradev:quickFixTemplate>"
      },
      {
         "trigger": "tag-auradev-removeAttributeDefQuickFix\t$A.Tag",
         "contents": "auradev:removeAttributeDefQuickFix>${2:}</auradev:removeAttributeDefQuickFix>"
      },
      {
         "trigger": "tag-auradev-removeBodyDefQuickFix\t$A.Tag",
         "contents": "auradev:removeBodyDefQuickFix>${2:}</auradev:removeBodyDefQuickFix>"
      },
      {
         "trigger": "tag-auradev-saveApplication\t$A.Tag",
         "contents": "auradev:saveApplication def=\"${1:auradev:saveApplication Optional - java://org.auraframework.def.ApplicationDef}\">${2:}</auradev:saveApplication>"
      },
      {
         "trigger": "tag-auradev-saveComponent\t$A.Tag",
         "contents": "auradev:saveComponent def=\"${1:auradev:saveComponent Optional - java://org.auraframework.def.ComponentDef}\">${2:}</auradev:saveComponent>"
      },
      {
         "trigger": "tag-auradev-saveComponentJava\t$A.Tag",
         "contents": "auradev:saveComponentJava def=\"${1:auradev:saveComponentJava Optional - java://org.auraframework.def.ComponentDef}\">${2:}</auradev:saveComponentJava>"
      },
      {
         "trigger": "tag-auradev-saveStyle\t$A.Tag",
         "contents": "auradev:saveStyle def=\"${1:auradev:saveStyle Optional - java://org.auraframework.def.StyleDef}\">${2:}</auradev:saveStyle>"
      },
      {
         "trigger": "tag-auradev-saveTheme\t$A.Tag",
         "contents": "auradev:saveTheme def=\"${1:auradev:saveTheme Optional - java://org.auraframework.def.ComponentDef}\">${2:}</auradev:saveTheme>"
      },
      {
         "trigger": "tag-auradev-showDependencies\t$A.Tag",
         "contents": "auradev:showDependencies component=\"${1:auradev:showDependencies Optional - String}\">${2:}</auradev:showDependencies>"
      },
      {
         "trigger": "tag-auradev-testDataProvider\t$A.Tag",
         "contents": "auradev:testDataProvider>${2:A test data provider.}</auradev:testDataProvider>"
      },
      {
         "trigger": "tag-auradev-testDataProvider2\t$A.Tag",
         "contents": "auradev:testDataProvider2>${2:A test data provider.}</auradev:testDataProvider2>"
      },
      {
         "trigger": "tag-auradocs-about\t$A.Tag",
         "contents": "auradocs:about>${2:}</auradocs:about>"
      },
      {
         "trigger": "tag-auradocs-api\t$A.Tag",
         "contents": "auradocs:api>${2:}</auradocs:api>"
      },
      {
         "trigger": "tag-auradocs-apiParam\t$A.Tag",
         "contents": "auradocs:apiParam symbol=\"${1:auradocs:apiParam Optional - Object}\">${2:}</auradocs:apiParam>"
      },
      {
         "trigger": "tag-auradocs-apiParams\t$A.Tag",
         "contents": "auradocs:apiParams params=\"${1:auradocs:apiParams Optional - Object[]}\">${2:}</auradocs:apiParams>"
      },
      {
         "trigger": "tag-auradocs-apiSymbol\t$A.Tag",
         "contents": "auradocs:apiSymbol symbol=\"${1:auradocs:apiSymbol Optional - Object}\">${2:}</auradocs:apiSymbol>"
      },
      {
         "trigger": "tag-auradocs-apiSymbols\t$A.Tag",
         "contents": "auradocs:apiSymbols title=\"${1:auradocs:apiSymbols Optional - String}\" symbols=\"${2:auradocs:apiSymbols Optional - Object[]}\">${3:}</auradocs:apiSymbols>"
      },
      {
         "trigger": "tag-auradocs-apiTopic\t$A.Tag",
         "contents": "auradocs:apiTopic>${2:}</auradocs:apiTopic>"
      },
      {
         "trigger": "tag-auradocs-codeblock\t$A.Tag",
         "contents": "auradocs:codeblock>${2:}</auradocs:codeblock>"
      },
      {
         "trigger": "tag-auradocs-contentsNode\t$A.Tag",
         "contents": "auradocs:contentsNode text=\"${1:auradocs:contentsNode Optional - String}\" id=\"${2:auradocs:contentsNode Optional - String}\" class=\"${3:auradocs:contentsNode Optional - String}\">${4:}</auradocs:contentsNode>"
      },
      {
         "trigger": "tag-auradocs-def\t$A.Tag",
         "contents": "auradocs:def descriptor=\"${1:auradocs:def Required - String}\" defType=\"${2:auradocs:def Optional - String}\">${3:}</auradocs:def>"
      },
      {
         "trigger": "tag-auradocs-defDependencies\t$A.Tag",
         "contents": "auradocs:defDependencies descriptor=\"${1:auradocs:defDependencies Required - String}\" defType=\"${2:auradocs:defDependencies Optional - String}\">${3:}</auradocs:defDependencies>"
      },
      {
         "trigger": "tag-auradocs-defDescription\t$A.Tag",
         "contents": "auradocs:defDescription descriptions=\"${1:auradocs:defDescription Optional - Object}\">${2:}</auradocs:defDescription>"
      },
      {
         "trigger": "tag-auradocs-defLayout\t$A.Tag",
         "contents": "auradocs:defLayout title=\"${1:auradocs:defLayout Optional - String}\" subtitle=\"${2:auradocs:defLayout Optional - Aura.Component[]}\" description=\"${3:auradocs:defLayout Optional - Aura.Component[]}\" labels=\"${4:auradocs:defLayout Optional - Aura.Component[]}\" status=\"${5:auradocs:defLayout Optional - Aura.Component[]}\">${6:}</auradocs:defLayout>"
      },
      {
         "trigger": "tag-auradocs-defLink\t$A.Tag",
         "contents": "auradocs:defLink descriptor=\"${1:auradocs:defLink Required - String}\" defType=\"${2:auradocs:defLink Optional - String}\">${3:}</auradocs:defLink>"
      },
      {
         "trigger": "tag-auradocs-defMemberList\t$A.Tag",
         "contents": "auradocs:defMemberList title=\"${1:auradocs:defMemberList Optional - String}\" list=\"${2:auradocs:defMemberList Optional - Object}\">${3:}</auradocs:defMemberList>"
      },
      {
         "trigger": "tag-auradocs-defOverview\t$A.Tag",
         "contents": "auradocs:defOverview descriptor=\"${1:auradocs:defOverview Required - String}\" defType=\"${2:auradocs:defOverview Optional - String}\">${3:}</auradocs:defOverview>"
      },
      {
         "trigger": "tag-auradocs-demoAuraError\t$A.Tag",
         "contents": "auradocs:demoAuraError>${2:}</auradocs:demoAuraError>"
      },
      {
         "trigger": "tag-auradocs-demoAutocomplete\t$A.Tag",
         "contents": "auradocs:demoAutocomplete>${2:}</auradocs:demoAutocomplete>"
      },
      {
         "trigger": "tag-auradocs-demoAutocompleteProvider\t$A.Tag",
         "contents": "auradocs:demoAutocompleteProvider dataType=\"${1:auradocs:demoAutocompleteProvider Optional - String}\">${2:A test data provider to test autocomplete component.}</auradocs:demoAutocompleteProvider>"
      },
      {
         "trigger": "tag-auradocs-demoCarousel\t$A.Tag",
         "contents": "auradocs:demoCarousel>${2:}</auradocs:demoCarousel>"
      },
      {
         "trigger": "tag-auradocs-demoCss\t$A.Tag",
         "contents": "auradocs:demoCss>${2:}</auradocs:demoCss>"
      },
      {
         "trigger": "tag-auradocs-demoDataProvider\t$A.Tag",
         "contents": "auradocs:demoDataProvider>${2:A test data provider.}</auradocs:demoDataProvider>"
      },
      {
         "trigger": "tag-auradocs-demoDialog\t$A.Tag",
         "contents": "auradocs:demoDialog>${2:}</auradocs:demoDialog>"
      },
      {
         "trigger": "tag-auradocs-demoEvents\t$A.Tag",
         "contents": "auradocs:demoEvents>${2:}</auradocs:demoEvents>"
      },
      {
         "trigger": "tag-auradocs-demoForm\t$A.Tag",
         "contents": "auradocs:demoForm myDate=\"${1:auradocs:demoForm Optional - Date}\">${2:}</auradocs:demoForm>"
      },
      {
         "trigger": "tag-auradocs-demoFriendlyError\t$A.Tag",
         "contents": "auradocs:demoFriendlyError>${2:}</auradocs:demoFriendlyError>"
      },
      {
         "trigger": "tag-auradocs-demoInputRT\t$A.Tag",
         "contents": "auradocs:demoInputRT>${2:}</auradocs:demoInputRT>"
      },
      {
         "trigger": "tag-auradocs-demoLabel\t$A.Tag",
         "contents": "auradocs:demoLabel>${2:}</auradocs:demoLabel>"
      },
      {
         "trigger": "tag-auradocs-demoLabelDyn\t$A.Tag",
         "contents": "auradocs:demoLabelDyn simplevalue1=\"${1:auradocs:demoLabelDyn Optional - Object}\">${2:}</auradocs:demoLabelDyn>"
      },
      {
         "trigger": "tag-auradocs-demoLangLocale\t$A.Tag",
         "contents": "auradocs:demoLangLocale>${2:}</auradocs:demoLangLocale>"
      },
      {
         "trigger": "tag-auradocs-demoList\t$A.Tag",
         "contents": "auradocs:demoList>${2:}</auradocs:demoList>"
      },
      {
         "trigger": "tag-auradocs-demoListTemplate\t$A.Tag",
         "contents": "auradocs:demoListTemplate label=\"${1:auradocs:demoListTemplate Optional - String}\">${2:}</auradocs:demoListTemplate>"
      },
      {
         "trigger": "tag-auradocs-demoLocale\t$A.Tag",
         "contents": "auradocs:demoLocale>${2:}</auradocs:demoLocale>"
      },
      {
         "trigger": "tag-auradocs-demoMenu\t$A.Tag",
         "contents": "auradocs:demoMenu status=\"${1:auradocs:demoMenu Optional - String[]}\">${2:}</auradocs:demoMenu>"
      },
      {
         "trigger": "tag-auradocs-demoMenuMeta\t$A.Tag",
         "contents": "auradocs:demoMenuMeta>${2:}</auradocs:demoMenuMeta>"
      },
      {
         "trigger": "tag-auradocs-demoMessage\t$A.Tag",
         "contents": "auradocs:demoMessage>${2:}</auradocs:demoMessage>"
      },
      {
         "trigger": "tag-auradocs-demoModal\t$A.Tag",
         "contents": "auradocs:demoModal>${2:}</auradocs:demoModal>"
      },
      {
         "trigger": "tag-auradocs-demoPanel\t$A.Tag",
         "contents": "auradocs:demoPanel demo=\"${1:auradocs:demoPanel Optional - String}\" example=\"${2:auradocs:demoPanel Optional - Aura.Component[]}\">${3:}</auradocs:demoPanel>"
      },
      {
         "trigger": "tag-auradocs-demoScroller\t$A.Tag",
         "contents": "auradocs:demoScroller>${2:}</auradocs:demoScroller>"
      },
      {
         "trigger": "tag-auradocs-demoSelect\t$A.Tag",
         "contents": "auradocs:demoSelect>${2:}</auradocs:demoSelect>"
      },
      {
         "trigger": "tag-auradocs-demoSpinner\t$A.Tag",
         "contents": "auradocs:demoSpinner>${2:}</auradocs:demoSpinner>"
      },
      {
         "trigger": "tag-auradocs-demoStamp\t$A.Tag",
         "contents": "auradocs:demoStamp>${2:}</auradocs:demoStamp>"
      },
      {
         "trigger": "tag-auradocs-demoSubmitForm\t$A.Tag",
         "contents": "auradocs:demoSubmitForm myDate=\"${1:auradocs:demoSubmitForm Optional - Date}\" sizes=\"${2:auradocs:demoSubmitForm Optional - List}\" invalidEmail=\"${3:auradocs:demoSubmitForm Optional - Boolean}\" invalidPW=\"${4:auradocs:demoSubmitForm Optional - Boolean}\" invalidURL=\"${5:auradocs:demoSubmitForm Optional - Boolean}\" filled=\"${6:auradocs:demoSubmitForm Optional - Boolean}\">${7:}</auradocs:demoSubmitForm>"
      },
      {
         "trigger": "tag-auradocs-demoTab\t$A.Tag",
         "contents": "auradocs:demoTab>${2:}</auradocs:demoTab>"
      },
      {
         "trigger": "tag-auradocs-demoTable\t$A.Tag",
         "contents": "auradocs:demoTable>${2:}</auradocs:demoTable>"
      },
      {
         "trigger": "tag-auradocs-demoTodo\t$A.Tag",
         "contents": "auradocs:demoTodo>${2:}</auradocs:demoTodo>"
      },
      {
         "trigger": "tag-auradocs-demoToolbar\t$A.Tag",
         "contents": "auradocs:demoToolbar>${2:}</auradocs:demoToolbar>"
      },
      {
         "trigger": "tag-auradocs-demoTooltip\t$A.Tag",
         "contents": "auradocs:demoTooltip>${2:}</auradocs:demoTooltip>"
      },
      {
         "trigger": "tag-auradocs-demoVbox\t$A.Tag",
         "contents": "auradocs:demoVbox>${2:}</auradocs:demoVbox>"
      },
      {
         "trigger": "tag-auradocs-demoVdatagrid\t$A.Tag",
         "contents": "auradocs:demoVdatagrid data=\"${1:auradocs:demoVdatagrid Optional - List}\">${2:}</auradocs:demoVdatagrid>"
      },
      {
         "trigger": "tag-auradocs-demos\t$A.Tag",
         "contents": "auradocs:demos>${2:}</auradocs:demos>"
      },
      {
         "trigger": "tag-auradocs-demosNode\t$A.Tag",
         "contents": "auradocs:demosNode text=\"${1:auradocs:demosNode Optional - String}\" id=\"${2:auradocs:demosNode Optional - String}\" class=\"${3:auradocs:demosNode Optional - String}\">${4:}</auradocs:demosNode>"
      },
      {
         "trigger": "tag-auradocs-descriptorLink\t$A.Tag",
         "contents": "auradocs:descriptorLink defModel=\"${1:auradocs:descriptorLink Required - java://org.auraframework.docs.DefModel}\">${2:}</auradocs:descriptorLink>"
      },
      {
         "trigger": "tag-auradocs-docTestRef\t$A.Tag",
         "contents": "auradocs:docTestRef>${2:}</auradocs:docTestRef>"
      },
      {
         "trigger": "tag-auradocs-doctabs\t$A.Tag",
         "contents": "auradocs:doctabs>${2:}</auradocs:doctabs>"
      },
      {
         "trigger": "tag-auradocs-download\t$A.Tag",
         "contents": "auradocs:download>${2:}</auradocs:download>"
      },
      {
         "trigger": "tag-auradocs-editorPanel\t$A.Tag",
         "contents": "auradocs:editorPanel title=\"${1:auradocs:editorPanel Required - String}\" descriptor=\"${2:auradocs:editorPanel Required - String}\" defType=\"${3:auradocs:editorPanel Optional - String}\" includeDefName=\"${4:auradocs:editorPanel Optional - String}\" region=\"${5:auradocs:editorPanel Optional - String}\">${6:}</auradocs:editorPanel>"
      },
      {
         "trigger": "tag-auradocs-empty\t$A.Tag",
         "contents": "auradocs:empty>${2:}</auradocs:empty>"
      },
      {
         "trigger": "tag-auradocs-error\t$A.Tag",
         "contents": "auradocs:error>${2:}</auradocs:error>"
      },
      {
         "trigger": "tag-auradocs-example\t$A.Tag",
         "contents": "auradocs:example label=\"${1:auradocs:example Required - String}\" description=\"${2:auradocs:example Required - String}\" descriptor=\"${3:auradocs:example Required - String}\">${4:}</auradocs:example>"
      },
      {
         "trigger": "tag-auradocs-examplesTemplate\t$A.Tag",
         "contents": "auradocs:examplesTemplate>${2:}</auradocs:examplesTemplate>"
      },
      {
         "trigger": "tag-auradocs-examplesc\t$A.Tag",
         "contents": "auradocs:examplesc name=\"${1:auradocs:examplesc Optional - String}\">${2:}</auradocs:examplesc>"
      },
      {
         "trigger": "tag-auradocs-helloAttributes\t$A.Tag",
         "contents": "auradocs:helloAttributes whom=\"${1:auradocs:helloAttributes Optional - String}\">${2:}</auradocs:helloAttributes>"
      },
      {
         "trigger": "tag-auradocs-helpPanel\t$A.Tag",
         "contents": "auradocs:helpPanel topic=\"${1:auradocs:helpPanel Optional - String}\" topicPanel=\"${2:auradocs:helpPanel Optional - Aura.Component[]}\">${3:}</auradocs:helpPanel>"
      },
      {
         "trigger": "tag-auradocs-home\t$A.Tag",
         "contents": "auradocs:home>${2:}</auradocs:home>"
      },
      {
         "trigger": "tag-auradocs-htmlTags\t$A.Tag",
         "contents": "auradocs:htmlTags>${2:}</auradocs:htmlTags>"
      },
      {
         "trigger": "tag-auradocs-htmlTagsTopic\t$A.Tag",
         "contents": "auradocs:htmlTagsTopic>${2:}</auradocs:htmlTagsTopic>"
      },
      {
         "trigger": "tag-auradocs-info\t$A.Tag",
         "contents": "auradocs:info>${2:}</auradocs:info>"
      },
      {
         "trigger": "tag-auradocs-nav\t$A.Tag",
         "contents": "auradocs:nav referenceOnly=\"${1:auradocs:nav Optional - boolean}\">${2:}</auradocs:nav>"
      },
      {
         "trigger": "tag-auradocs-navLink\t$A.Tag",
         "contents": "auradocs:navLink location=\"${1:auradocs:navLink Required - String}\">${2:}</auradocs:navLink>"
      },
      {
         "trigger": "tag-auradocs-openTopicTree\t$A.Tag",
         "contents": "auradocs:openTopicTree layoutToken=\"${1:auradocs:openTopicTree Optional - String}\" catchAllHref=\"${2:auradocs:openTopicTree Optional - String}\" tree=\"${3:auradocs:openTopicTree Optional - Aura.Component}\">${4:A decorator for a ui:tree that adds the attribute 'active=true' to the currently selected topic based on a mapping from the current URL location to the node with a matching href.}</auradocs:openTopicTree>"
      },
      {
         "trigger": "tag-auradocs-outputViewerc\t$A.Tag",
         "contents": "auradocs:outputViewerc def=\"${1:auradocs:outputViewerc Optional - String}\">${2:}</auradocs:outputViewerc>"
      },
      {
         "trigger": "tag-auradocs-prefixerTopic\t$A.Tag",
         "contents": "auradocs:prefixerTopic>${2:}</auradocs:prefixerTopic>"
      },
      {
         "trigger": "tag-auradocs-referenceTabTopic\t$A.Tag",
         "contents": "auradocs:referenceTabTopic>${2:}</auradocs:referenceTabTopic>"
      },
      {
         "trigger": "tag-auradocs-referenceTopicLink\t$A.Tag",
         "contents": "auradocs:referenceTopicLink topic=\"${1:auradocs:referenceTopicLink Required - String}\">${2:}</auradocs:referenceTopicLink>"
      },
      {
         "trigger": "tag-auradocs-referenceTree\t$A.Tag",
         "contents": "auradocs:referenceTree>${2:}</auradocs:referenceTree>"
      },
      {
         "trigger": "tag-auradocs-referenceTreeSection\t$A.Tag",
         "contents": "auradocs:referenceTreeSection title=\"${1:auradocs:referenceTreeSection Required - String}\" namespaces=\"${2:auradocs:referenceTreeSection Required - List}\">${3:}</auradocs:referenceTreeSection>"
      },
      {
         "trigger": "tag-auradocs-sampleUnescape\t$A.Tag",
         "contents": "auradocs:sampleUnescape>${2:}</auradocs:sampleUnescape>"
      },
      {
         "trigger": "tag-auradocs-searchFilterTree\t$A.Tag",
         "contents": "auradocs:searchFilterTree tree=\"${1:auradocs:searchFilterTree Optional - Aura.Component}\">${2:}</auradocs:searchFilterTree>"
      },
      {
         "trigger": "tag-auradocs-sidebar\t$A.Tag",
         "contents": "auradocs:sidebar toolbar=\"${1:auradocs:sidebar Optional - Aura.Component[]}\">${2:}</auradocs:sidebar>"
      },
      {
         "trigger": "tag-auradocs-simpledragdrop\t$A.Tag",
         "contents": "auradocs:simpledragdrop _dropzoneContext1=\"${1:auradocs:simpledragdrop Optional - Object}\" _dropzoneContext2=\"${2:auradocs:simpledragdrop Optional - Object}\" _draggableContext1=\"${3:auradocs:simpledragdrop Optional - Object}\" _draggableContext2=\"${4:auradocs:simpledragdrop Optional - Object}\" list1=\"${5:auradocs:simpledragdrop Optional - String[]}\" list2=\"${6:auradocs:simpledragdrop Optional - String[]}\">${7:}</auradocs:simpledragdrop>"
      },
      {
         "trigger": "tag-auradocs-spinnerTopic\t$A.Tag",
         "contents": "auradocs:spinnerTopic>${2:}</auradocs:spinnerTopic>"
      },
      {
         "trigger": "tag-auradocs-stretchEditorPanel\t$A.Tag",
         "contents": "auradocs:stretchEditorPanel>${2:}</auradocs:stretchEditorPanel>"
      },
      {
         "trigger": "tag-auradocs-stretchTab\t$A.Tag",
         "contents": "auradocs:stretchTab>${2:}</auradocs:stretchTab>"
      },
      {
         "trigger": "tag-auradocs-tableDemo\t$A.Tag",
         "contents": "auradocs:tableDemo>${2:}</auradocs:tableDemo>"
      },
      {
         "trigger": "tag-auradocs-template\t$A.Tag",
         "contents": "auradocs:template>${2:}</auradocs:template>"
      },
      {
         "trigger": "tag-auradocs-topic\t$A.Tag",
         "contents": "auradocs:topic>${2:}</auradocs:topic>"
      },
      {
         "trigger": "tag-auradocs-topicExample\t$A.Tag",
         "contents": "auradocs:topicExample descriptor=\"${1:auradocs:topicExample Required - String}\" defType=\"${2:auradocs:topicExample Optional - String}\">${3:}</auradocs:topicExample>"
      },
      {
         "trigger": "tag-auradocs-topicLink\t$A.Tag",
         "contents": "auradocs:topicLink topic=\"${1:auradocs:topicLink Required - String}\">${2:}</auradocs:topicLink>"
      },
      {
         "trigger": "tag-auradocs-topicList\t$A.Tag",
         "contents": "auradocs:topicList>${2:}</auradocs:topicList>"
      },
      {
         "trigger": "tag-auradocs-topicPanel\t$A.Tag",
         "contents": "auradocs:topicPanel topic=\"${1:auradocs:topicPanel Optional - String}\" example=\"${2:auradocs:topicPanel Optional - Aura.Component[]}\">${3:}</auradocs:topicPanel>"
      },
      {
         "trigger": "tag-auradocs-topics\t$A.Tag",
         "contents": "auradocs:topics>${2:}</auradocs:topics>"
      },
      {
         "trigger": "tag-auradocs-viewer\t$A.Tag",
         "contents": "auradocs:viewer descriptor=\"${1:auradocs:viewer Required - String}\">${2:}</auradocs:viewer>"
      },
      {
         "trigger": "tag-auradocs-warning\t$A.Tag",
         "contents": "auradocs:warning>${2:}</auradocs:warning>"
      },
      {
         "trigger": "tag-auradocs-welcomeTopic\t$A.Tag",
         "contents": "auradocs:welcomeTopic>${2:}</auradocs:welcomeTopic>"
      },
      {
         "trigger": "tag-aurajstest-emptyTemplate\t$A.Tag",
         "contents": "aurajstest:emptyTemplate>${2:Used by aurajstest:inject so that TestInjectionRenderer is entirely responsible for output}</aurajstest:emptyTemplate>"
      },
      {
         "trigger": "tag-aurajstest-jstestCase\t$A.Tag",
         "contents": "aurajstest:jstestCase case=\"${1:aurajstest:jstestCase Optional - java://org.auraframework.def.TestCaseDef}\" suite=\"${2:aurajstest:jstestCase Optional - java://org.auraframework.def.TestSuiteDef}\" url=\"${3:aurajstest:jstestCase Optional - String}\" status=\"${4:aurajstest:jstestCase Optional - String}\">${5:}</aurajstest:jstestCase>"
      },
      {
         "trigger": "tag-ui-abstractDataGrid\t$A.Tag",
         "contents": "ui:abstractDataGrid items=\"${1:ui:abstractDataGrid Optional - List}\" itemShape=\"${2:ui:abstractDataGrid Optional - Object}\" mode=\"${3:ui:abstractDataGrid Optional - String}\" state=\"${4:ui:abstractDataGrid Optional - String}\" sortable=\"${5:ui:abstractDataGrid Optional - Boolean}\" createable=\"${6:ui:abstractDataGrid Optional - Boolean}\" selectAll=\"${7:ui:abstractDataGrid Optional - Boolean}\" selectedItems=\"${8:ui:abstractDataGrid Optional - List}\" sortBy=\"${9:ui:abstractDataGrid Optional - String}\" dataProvider=\"${10:ui:abstractDataGrid Optional - Aura.Component[]}\" dataWriter=\"${11:ui:abstractDataGrid Optional - Aura.Component[]}\" columns=\"${12:ui:abstractDataGrid Optional - Aura.Component[]}\" summaryRow=\"${13:ui:abstractDataGrid Optional - Aura.ComponentDefRef[]}\" actionDelegate=\"${14:ui:abstractDataGrid Optional - Aura.Component[]}\">${15:Implements ui:visible.\nAn abstract component that provides a basic layout for the ui:dataGrid component.}</ui:abstractDataGrid>"
      },
      {
         "trigger": "tag-ui-abstractList\t$A.Tag",
         "contents": "ui:abstractList itemTemplate=\"${1:ui:abstractList Required - Aura.ComponentDefRef[]}\" itemVar=\"${3:ui:abstractList Required - String}\" dataProvider=\"${4:ui:abstractList Required - Aura.Component[]}\" items=\"${2:ui:abstractList Optional - Object[]}\" emptyListContent=\"${5:ui:abstractList Optional - Aura.Component[]}\" loadingIndicator=\"${6:ui:abstractList Optional - Aura.Component[]}\" header=\"${7:ui:abstractList Optional - Aura.Component[]}\" footer=\"${8:ui:abstractList Optional - Aura.Component[]}\">${9:Implements ui:visible, ui:pagingInterface.\nAn abstract component that provides a basic layout for the ui:list component.}</ui:abstractList>"
      },
      {
         "trigger": "tag-ui-action\t$A.Tag",
         "contents": "ui:action name=\"${1:ui:action Optional - String}\" label=\"${2:ui:action Optional - String}\" labelClass=\"${3:ui:action Optional - String}\" index=\"${4:ui:action Optional - Integer}\" value=\"${5:ui:action Optional - Object}\">${6:An abstract component that provides bubbling of events.}</ui:action>"
      },
      {
         "trigger": "tag-ui-actionButton\t$A.Tag",
         "contents": "ui:actionButton disabled=\"${1:ui:actionButton Optional - Boolean}\">${2:A button used in ui:dataGrid that enables row-level click events to bubble up to the grid.}</ui:actionButton>"
      },
      {
         "trigger": "tag-ui-actionCheckbox\t$A.Tag",
         "contents": "ui:actionCheckbox disabled=\"${1:ui:actionCheckbox Optional - Boolean}\">${2:A checkbox used in ui:dataGrid that enables row-level click events to bubble up to the grid.}</ui:actionCheckbox>"
      },
      {
         "trigger": "tag-ui-actionDelegate\t$A.Tag",
         "contents": "ui:actionDelegate>${2:Fires and handles the onaction event for the ui:dataGrid component.}</ui:actionDelegate>"
      },
      {
         "trigger": "tag-ui-actionMenuItem\t$A.Tag",
         "contents": "ui:actionMenuItem id=\"${1:ui:actionMenuItem Optional - String}\" hideMenuAfterSelected=\"${2:ui:actionMenuItem Optional - Boolean}\">${3:​A menu item that triggers an action. This component is nested in a ui:menu component.}</ui:actionMenuItem>"
      },
      {
         "trigger": "tag-ui-asyncComponentManager\t$A.Tag",
         "contents": "ui:asyncComponentManager maxConcurrency=\"${1:ui:asyncComponentManager Required - Integer}\">${2:Manages the asynchronous initialization of components.}</ui:asyncComponentManager>"
      },
      {
         "trigger": "tag-ui-asyncImage\t$A.Tag",
         "contents": "ui:asyncImage actualImageSrc=\"${1:ui:asyncImage Optional - String}\">${2:Implements ui:asyncComponent.\nEncapsulates asynchronously loading of an image.}</ui:asyncImage>"
      },
      {
         "trigger": "tag-ui-autocomplete\t$A.Tag",
         "contents": "ui:autocomplete dataProvider=\"${1:ui:autocomplete Required - Aura.Component[]}\" listOption=\"${6:ui:autocomplete Required - Aura.ComponentDefRef[]}\" optionVar=\"${7:ui:autocomplete Required - String}\" emptyListContent=\"${2:ui:autocomplete Optional - Aura.Component[]}\" loadingIndicator=\"${3:ui:autocomplete Optional - Aura.Component[]}\" inputClass=\"${4:ui:autocomplete Optional - String}\" inputType=\"${5:ui:autocomplete Optional - String}\" placeholder=\"${8:ui:autocomplete Optional - String}\" propertyToMatch=\"${9:ui:autocomplete Optional - String}\" theme=\"${10:ui:autocomplete Optional - String}\" matchFunc=\"${11:ui:autocomplete Optional - Aura.Action}\" autocompleteButton=\"${12:ui:autocomplete Optional - Aura.Component[]}\" header=\"${13:ui:autocomplete Optional - Aura.Component[]}\" footer=\"${14:ui:autocomplete Optional - Aura.Component[]}\">${15:Represents an input field that suggests a list of values from the data provider as you type.}</ui:autocomplete>"
      },
      {
         "trigger": "tag-ui-autocompleteList\t$A.Tag",
         "contents": "ui:autocompleteList ignoredElements=\"${1:ui:autocompleteList Optional - Object}\" keyword=\"${2:ui:autocompleteList Optional - String}\" propertyToMatch=\"${3:ui:autocompleteList Optional - String}\" theme=\"${4:ui:autocompleteList Optional - String}\" matchFunc=\"${5:ui:autocompleteList Optional - Aura.Action}\">${6:This component is used in ui:autocomplete to provide a list of options to the input component.To customize the list option behavior, use the selectListOption, listHighlight, and updateAriaAttributes events.}</ui:autocompleteList>"
      },
      {
         "trigger": "tag-ui-autocompleteOption\t$A.Tag",
         "contents": "ui:autocompleteOption label=\"${2:ui:autocompleteOption Required - String}\" displayText=\"${1:ui:autocompleteOption Optional - String}\" theme=\"${3:ui:autocompleteOption Optional - String}\" domId=\"${4:ui:autocompleteOption Optional - String}\">${5:Implements ui:autocompleteOptionTemplate.\nThis component represents list options in an ui:autocomplete component. The options are displayed when an input keyword matches an item in the data provider.}</ui:autocompleteOption>"
      },
      {
         "trigger": "tag-ui-block\t$A.Tag",
         "contents": "ui:block overflow=\"${1:ui:block Optional - Boolean}\" left=\"${2:ui:block Optional - Aura.Component[]}\" right=\"${3:ui:block Optional - Aura.Component[]}\" tag=\"${4:ui:block Optional - String}\">${5:Implements ui:visible.\nUse this component to create a two or three column layout.}</ui:block>"
      },
      {
         "trigger": "tag-ui-button\t$A.Tag",
         "contents": "ui:button label=\"${4:ui:button Required - String}\" buttonTitle=\"${1:ui:button Optional - String}\" buttonType=\"${2:ui:button Optional - String}\" class=\"${3:ui:button Optional - String}\" labelClass=\"${5:ui:button Optional - String}\" labelDisplay=\"${6:ui:button Optional - Boolean}\" iconImgSrc=\"${7:ui:button Optional - String}\" iconClass=\"${8:ui:button Optional - String}\" disabled=\"${9:ui:button Optional - Boolean}\" accesskey=\"${10:ui:button Optional - String}\" labelDir=\"${11:ui:button Optional - String}\" stopPropagation=\"${12:ui:button Optional - Boolean}\" tabIndex=\"${13:ui:button Optional - Integer}\">${14:Represents a button element.}</ui:button>"
      },
      {
         "trigger": "tag-ui-calendar\t$A.Tag",
         "contents": "ui:calendar>${2:}</ui:calendar>"
      },
      {
         "trigger": "tag-ui-carousel\t$A.Tag",
         "contents": "ui:carousel height=\"${1:ui:carousel Optional - Integer}\" width=\"${2:ui:carousel Optional - Integer}\" pageModels=\"${3:ui:carousel Optional - Object[]}\" pageComponents=\"${4:ui:carousel Optional - Aura.Component[]}\" prefetchedTab=\"${5:ui:carousel Optional - Aura.Component[]}\" isDotIndicator=\"${6:ui:carousel Optional - Boolean}\" initialPage=\"${7:ui:carousel Optional - String}\" prefetchFirstTab=\"${8:ui:carousel Optional - Boolean}\" lazyLoadTabs=\"${9:ui:carousel Optional - Boolean}\" indicatorStateClass=\"${10:ui:carousel Optional - String}\" pageScrollerPlugins=\"${11:ui:carousel Optional - String}\" justifyContent=\"${12:ui:carousel Optional - String}\" prefetchedTabIndex=\"${13:ui:carousel Optional - Integer}\" suppressIndicators=\"${14:ui:carousel Optional - String}\" isScrollable=\"${15:ui:carousel Optional - Boolean}\" bindEventsToScroller=\"${16:ui:carousel Optional - Boolean}\" pageIndicatorComponent=\"${17:ui:carousel Optional - Aura.Component[]}\" carouselPageComponent=\"${18:ui:carousel Optional - Aura.ComponentDefRef[]}\">${19:Implements ui:scrollerEmbeddable.\n}</ui:carousel>"
      },
      {
         "trigger": "tag-ui-carouselDeprecated\t$A.Tag",
         "contents": "ui:carouselDeprecated title=\"${1:ui:carouselDeprecated Optional - String}\" width=\"${2:ui:carouselDeprecated Optional - Integer}\" height=\"${3:ui:carouselDeprecated Optional - Integer}\" useTransition=\"${4:ui:carouselDeprecated Optional - Boolean}\" pageIndicatorPosition=\"${5:ui:carouselDeprecated Optional - String}\" continuousFlow=\"${6:ui:carouselDeprecated Optional - Boolean}\" defaultPage=\"${7:ui:carouselDeprecated Optional - Integer}\" pageModels=\"${8:ui:carouselDeprecated Optional - Object[]}\" pageComponents=\"${9:ui:carouselDeprecated Optional - Aura.Component[]}\" navigationTabs=\"${10:ui:carouselDeprecated Optional - Boolean}\" onPageChange=\"${11:ui:carouselDeprecated Optional - Aura.Action}\" spinner=\"${12:ui:carouselDeprecated Optional - Aura.Component[]}\" priv_currentPage=\"${13:ui:carouselDeprecated Optional - Integer}\" priv_carouselStyle=\"${14:ui:carouselDeprecated Optional - String}\" priv_scrollerWidth=\"${15:ui:carouselDeprecated Optional - String}\" priv_snap=\"${16:ui:carouselDeprecated Optional - String}\" priv_scrollContentClass=\"${17:ui:carouselDeprecated Optional - String}\">${18:A tabset component that enables swiping through groups of related content types in addition to standard keyboard, touch, and mouse interactions. The carousel provides page indicators by default and supports horizontal overflow of pages.}</ui:carouselDeprecated>"
      },
      {
         "trigger": "tag-ui-carouselIndicator\t$A.Tag",
         "contents": "ui:carouselIndicator pageModels=\"${1:ui:carouselIndicator Optional - Object[]}\" pageComponents=\"${2:ui:carouselIndicator Optional - Object[]}\" justifyContent=\"${3:ui:carouselIndicator Optional - String}\" isDotIndicator=\"${4:ui:carouselIndicator Optional - Boolean}\" _calculatedStyles=\"${5:ui:carouselIndicator Optional - String}\">${6:}</ui:carouselIndicator>"
      },
      {
         "trigger": "tag-ui-carouselPage\t$A.Tag",
         "contents": "ui:carouselPage content=\"${1:ui:carouselPage Optional - Object}\" pageIndex=\"${2:ui:carouselPage Optional - Integer}\" scrollerPlugins=\"${3:ui:carouselPage Optional - String}\" isContentLoaded=\"${4:ui:carouselPage Optional - Boolean}\" isScrollable=\"${5:ui:carouselPage Optional - Boolean}\" placeholder=\"${6:ui:carouselPage Optional - Aura.ComponentDefRef[]}\">${7:}</ui:carouselPage>"
      },
      {
         "trigger": "tag-ui-carouselPageDeprecated\t$A.Tag",
         "contents": "ui:carouselPageDeprecated title=\"${1:ui:carouselPageDeprecated Optional - String}\" isCacheable=\"${2:ui:carouselPageDeprecated Optional - Boolean}\" isDefault=\"${3:ui:carouselPageDeprecated Optional - Boolean}\" pageModel=\"${4:ui:carouselPageDeprecated Optional - Object}\" pageIndex=\"${5:ui:carouselPageDeprecated Optional - Integer}\" isSelected=\"${6:ui:carouselPageDeprecated Optional - Boolean}\" parent=\"${7:ui:carouselPageDeprecated Optional - Aura.Component[]}\" priv_width=\"${8:ui:carouselPageDeprecated Optional - Integer}\" priv_height=\"${9:ui:carouselPageDeprecated Optional - Integer}\" priv_pageStyle=\"${10:ui:carouselPageDeprecated Optional - String}\" priv_pageId=\"${11:ui:carouselPageDeprecated Optional - String}\" priv_visible=\"${12:ui:carouselPageDeprecated Optional - Boolean}\" priv_continuousFlow=\"${13:ui:carouselPageDeprecated Optional - Boolean}\" priv_snap=\"${14:ui:carouselPageDeprecated Optional - String}\" showPage=\"${15:ui:carouselPageDeprecated Optional - Aura.Action}\">${16:A scrollable page in a ui:carousel component.}</ui:carouselPageDeprecated>"
      },
      {
         "trigger": "tag-ui-carouselPageIndicator\t$A.Tag",
         "contents": "ui:carouselPageIndicator pageComponents=\"${1:ui:carouselPageIndicator Optional - Aura.Component[]}\" currentPage=\"${2:ui:carouselPageIndicator Optional - Integer}\" navigationTabs=\"${3:ui:carouselPageIndicator Optional - Boolean}\">${4:A container for ui:carouselPageIndicatorItem components. This component is not displayed if the carousel uses a continuous flow.}</ui:carouselPageIndicator>"
      },
      {
         "trigger": "tag-ui-carouselPageIndicatorItem\t$A.Tag",
         "contents": "ui:carouselPageIndicatorItem pageIndex=\"${1:ui:carouselPageIndicatorItem Optional - Integer}\" title=\"${2:ui:carouselPageIndicatorItem Optional - String}\" label=\"${3:ui:carouselPageIndicatorItem Optional - String}\" navigationTab=\"${4:ui:carouselPageIndicatorItem Optional - Boolean}\" priv_id=\"${5:ui:carouselPageIndicatorItem Optional - String}\" priv_ariaSelected=\"${6:ui:carouselPageIndicatorItem Optional - Boolean}\" priv_ariaControlId=\"${7:ui:carouselPageIndicatorItem Optional - String}\" priv_tabIndex=\"${8:ui:carouselPageIndicatorItem Optional - Integer}\" priv_pageComponent=\"${9:ui:carouselPageIndicatorItem Optional - Object}\" priv_selectedClass=\"${10:ui:carouselPageIndicatorItem Optional - String}\">${11:A carousel page indicator item which enables tabbing through the carousel pages. This component is used in a ui:carouselPageIndicator component.}</ui:carouselPageIndicatorItem>"
      },
      {
         "trigger": "tag-ui-checkboxMenuItem\t$A.Tag",
         "contents": "ui:checkboxMenuItem>${2:​A menu item with a checkbox that supports multiple selection and can be used to invoke an action. This component is nested in a ui:menu component.}</ui:checkboxMenuItem>"
      },
      {
         "trigger": "tag-ui-column\t$A.Tag",
         "contents": "ui:column>${2:A column template used to define layout behavior in ui:listView.}</ui:column>"
      },
      {
         "trigger": "tag-ui-dataGrid\t$A.Tag",
         "contents": "ui:dataGrid summary=\"${1:ui:dataGrid Optional - String}\">${2:Represents a table containing dynamic rows of data with inline edit support}</ui:dataGrid>"
      },
      {
         "trigger": "tag-ui-dataGridActionColumn\t$A.Tag",
         "contents": "ui:dataGridActionColumn name=\"${1:ui:dataGridActionColumn Optional - String}\" label=\"${2:ui:dataGridActionColumn Optional - String}\" class=\"${3:ui:dataGridActionColumn Optional - String}\" scope=\"${4:ui:dataGridActionColumn Optional - String}\" header=\"${5:ui:dataGridActionColumn Optional - Aura.Component[]}\" outputComponent=\"${6:ui:dataGridActionColumn Optional - Aura.ComponentDefRef[]}\" body=\"${7:ui:dataGridActionColumn Optional - Aura.ComponentDefRef[]}\">${8:A column of actionable buttons or links in ui:dataGrid}</ui:dataGridActionColumn>"
      },
      {
         "trigger": "tag-ui-dataGridColumn\t$A.Tag",
         "contents": "ui:dataGridColumn name=\"${1:ui:dataGridColumn Optional - String}\" label=\"${2:ui:dataGridColumn Optional - String}\" type=\"${3:ui:dataGridColumn Optional - String}\" sortable=\"${4:ui:dataGridColumn Optional - Boolean}\" disabled=\"${5:ui:dataGridColumn Optional - Boolean}\" required=\"${6:ui:dataGridColumn Optional - Boolean}\" direction=\"${7:ui:dataGridColumn Optional - String}\" initialDirectionOnSort=\"${8:ui:dataGridColumn Optional - String}\" ascLabel=\"${9:ui:dataGridColumn Optional - String}\" descLabel=\"${10:ui:dataGridColumn Optional - String}\" order=\"${11:ui:dataGridColumn Optional - Integer}\" scope=\"${12:ui:dataGridColumn Optional - String}\" onsortchange=\"${13:ui:dataGridColumn Optional - Aura.Action}\" outputComponent=\"${14:ui:dataGridColumn Optional - Aura.ComponentDefRef[]}\">${15:Implements ui:visible.\nA column of data in ui:dataGrid}</ui:dataGridColumn>"
      },
      {
         "trigger": "tag-ui-dataGridSelectionColumn\t$A.Tag",
         "contents": "ui:dataGridSelectionColumn selectAll=\"${1:ui:dataGridSelectionColumn Optional - Boolean}\" outputComponent=\"${2:ui:dataGridSelectionColumn Optional - Aura.ComponentDefRef[]}\">${3:A column of checkboxes for individual and multiple row selection in ui:dataGrid}</ui:dataGridSelectionColumn>"
      },
      {
         "trigger": "tag-ui-dataGridSummaryCell\t$A.Tag",
         "contents": "ui:dataGridSummaryCell column=\"${1:ui:dataGridSummaryCell Optional - String}\" type=\"${2:ui:dataGridSummaryCell Optional - String}\" items=\"${3:ui:dataGridSummaryCell Optional - List}\" value=\"${4:ui:dataGridSummaryCell Optional - Integer}\" outputComponent=\"${5:ui:dataGridSummaryCell Optional - Aura.ComponentDefRef[]}\" priv_outputComponent=\"${6:ui:dataGridSummaryCell Optional - Aura.Component[]}\">${7:Implements ui:visible.\nA value rendered in the table footer that computes a given column in ui:dataGrid}</ui:dataGridSummaryCell>"
      },
      {
         "trigger": "tag-ui-dataProvider\t$A.Tag",
         "contents": "ui:dataProvider>${2:Implements ui:dataProviderInterface,ui:pagingInterface,ui:sortingInterface,ui:searchInterface.\nA generic list data provider}</ui:dataProvider>"
      },
      {
         "trigger": "tag-ui-dataTable\t$A.Tag",
         "contents": "ui:dataTable class=\"${1:ui:dataTable Optional - String}\" items=\"${2:ui:dataTable Optional - Object[]}\" noDataText=\"${3:ui:dataTable Optional - String}\" headerValues=\"${4:ui:dataTable Optional - String[]}\" striped=\"${5:ui:dataTable Optional - Boolean}\">${6:A table that displays an item of data per row, which is defined by iterating over the set of data. The body of <ui:dataTable> contains one or more <ui:dataTableRow> components.}</ui:dataTable>"
      },
      {
         "trigger": "tag-ui-dataTableColumn\t$A.Tag",
         "contents": "ui:dataTableColumn class=\"${1:ui:dataTableColumn Optional - String}\" scope=\"${2:ui:dataTableColumn Optional - String}\" headerValue=\"${3:ui:dataTableColumn Optional - String}\">${4:A column in a table. A <ui:dataTableColumn> component must be a child of a <ui:dataTableRow> component.}</ui:dataTableColumn>"
      },
      {
         "trigger": "tag-ui-dataTableRow\t$A.Tag",
         "contents": "ui:dataTableRow>${2:A row in a table. Must be used inside a <dataTable> component and can be used to nest <ui:dataTableColumn>.}</ui:dataTableRow>"
      },
      {
         "trigger": "tag-ui-dataWriter\t$A.Tag",
         "contents": "ui:dataWriter items=\"${1:ui:dataWriter Optional - List}\" defaultFields=\"${2:ui:dataWriter Optional - Map}\" sync=\"${3:ui:dataWriter Optional - Boolean}\">${4:}</ui:dataWriter>"
      },
      {
         "trigger": "tag-ui-datePicker\t$A.Tag",
         "contents": "ui:datePicker hasTime=\"${1:ui:datePicker Optional - Boolean}\" hours=\"${2:ui:datePicker Optional - Integer}\" is24HourFormat=\"${3:ui:datePicker Optional - Boolean}\" maxYear=\"${4:ui:datePicker Optional - Integer}\" minYear=\"${5:ui:datePicker Optional - Integer}\" minutes=\"${6:ui:datePicker Optional - Integer}\" value=\"${7:ui:datePicker Optional - String}\" visible=\"${8:ui:datePicker Optional - Boolean}\" _yearListInitialized=\"${9:ui:datePicker Optional - Boolean}\" managed=\"${10:ui:datePicker Optional - Boolean}\" referenceElement=\"${11:ui:datePicker Optional - Object}\" showToday=\"${12:ui:datePicker Optional - Boolean}\" hideOnSelect=\"${13:ui:datePicker Optional - Boolean}\" setFocus=\"${14:ui:datePicker Optional - Boolean}\" titleHeadingLevel=\"${15:ui:datePicker Optional - String}\">${16:Implements ui:visible.\nRepresents a date picker, which can be used in input components such as ui:inputDate and ui:inputDateTime.}</ui:datePicker>"
      },
      {
         "trigger": "tag-ui-datePickerGrid\t$A.Tag",
         "contents": "ui:datePickerGrid class=\"${1:ui:datePickerGrid Optional - String}\" date=\"${2:ui:datePickerGrid Optional - Integer}\" hasTime=\"${3:ui:datePickerGrid Optional - Boolean}\" month=\"${4:ui:datePickerGrid Optional - Integer}\" year=\"${5:ui:datePickerGrid Optional - Integer}\" selectedDate=\"${6:ui:datePickerGrid Optional - Date}\" setFocus=\"${7:ui:datePickerGrid Optional - Boolean}\" rangeStart=\"${8:ui:datePickerGrid Optional - String}\" rangeEnd=\"${9:ui:datePickerGrid Optional - String}\" rangeClass=\"${10:ui:datePickerGrid Optional - String}\" _setFocus=\"${11:ui:datePickerGrid Optional - Boolean}\" _namesOfWeekdays=\"${12:ui:datePickerGrid Optional - List}\">${13:Provides the monthly grid view in a ui:datePicker component.}</ui:datePickerGrid>"
      },
      {
         "trigger": "tag-ui-datePickerManager\t$A.Tag",
         "contents": "ui:datePickerManager>${2:Represents a date picker manager that renders a single date picker for multiple date input components.}</ui:datePickerManager>"
      },
      {
         "trigger": "tag-ui-dayInMonthCell\t$A.Tag",
         "contents": "ui:dayInMonthCell ariaSelected=\"${1:ui:dayInMonthCell Optional - Boolean}\" tabIndex=\"${2:ui:dayInMonthCell Optional - Integer}\" value=\"${3:ui:dayInMonthCell Optional - Date}\">${4:Provides the date in a ui:datePickerGrid component.}</ui:dayInMonthCell>"
      },
      {
         "trigger": "tag-ui-dialog\t$A.Tag",
         "contents": "ui:dialog description=\"${5:ui:dialog Required - String}\" title=\"${7:ui:dialog Required - String}\" ariaRole=\"${1:ui:dialog Optional - String}\" autoFocus=\"${2:ui:dialog Optional - Boolean}\" buttons=\"${3:ui:dialog Optional - Aura.Component[]}\" clickOutToClose=\"${4:ui:dialog Optional - Boolean}\" isModal=\"${6:ui:dialog Optional - Boolean}\" width=\"${8:ui:dialog Optional - String}\" closeClass=\"${9:ui:dialog Optional - String}\" closeLabel=\"${10:ui:dialog Optional - String}\" closeTitle=\"${11:ui:dialog Optional - String}\" dialogClass=\"${12:ui:dialog Optional - String}\" maskClass=\"${13:ui:dialog Optional - String}\" _handlerConfig=\"${14:ui:dialog Optional - Object}\">${15:A dialog window used for overlays or modals.}</ui:dialog>"
      },
      {
         "trigger": "tag-ui-dialogButtons\t$A.Tag",
         "contents": "ui:dialogButtons defaultButtons=\"${1:ui:dialogButtons Optional - String}\" confirmClass=\"${2:ui:dialogButtons Optional - String}\" confirmLabel=\"${3:ui:dialogButtons Optional - String}\" confirmTitle=\"${4:ui:dialogButtons Optional - String}\" cancelClass=\"${5:ui:dialogButtons Optional - String}\" cancelLabel=\"${6:ui:dialogButtons Optional - String}\" cancelTitle=\"${7:ui:dialogButtons Optional - String}\" _parentDialog=\"${8:ui:dialogButtons Optional - Object}\">${9:A facet of ui:dialog to hold any buttons displayed at the bottom of the dialog window. This component comes with two default buttons, 'OK' and 'Cancel'. You can use zero or more of the default buttons, and/or provide your own custom buttons in this component's body.}</ui:dialogButtons>"
      },
      {
         "trigger": "tag-ui-dialogManager\t$A.Tag",
         "contents": "ui:dialogManager _activeDialog=\"${1:ui:dialogManager Optional - Object}\">${2:Manages all instances of ui:dialog in an application, by handling visibility and all DOM events. One (and only one) instance of this component is required if you wish to use the ui:dialog component. We recommend putting the ui:dialogManager component at the end of your .app file.}</ui:dialogManager>"
      },
      {
         "trigger": "tag-ui-dragAndDropAccessibility\t$A.Tag",
         "contents": "ui:dragAndDropAccessibility draggables=\"${1:ui:dragAndDropAccessibility Optional - Aura.Component[]}\">${2:A drag and drop accessibility component.}</ui:dragAndDropAccessibility>"
      },
      {
         "trigger": "tag-ui-dragAndDropAccessibilityMenu\t$A.Tag",
         "contents": "ui:dragAndDropAccessibilityMenu class=\"${1:ui:dragAndDropAccessibilityMenu Optional - String}\" draggables=\"${2:ui:dragAndDropAccessibilityMenu Optional - Aura.Component[]}\" dropzoneMenu=\"${3:ui:dragAndDropAccessibilityMenu Optional - List}\">${4:A drag and drop accessibility component.}</ui:dragAndDropAccessibilityMenu>"
      },
      {
         "trigger": "tag-ui-draggable\t$A.Tag",
         "contents": "ui:draggable type=\"${1:ui:draggable Optional - String}\" dataTransfer=\"${2:ui:draggable Optional - Map}\" class=\"${3:ui:draggable Optional - String}\" dragClass=\"${4:ui:draggable Optional - String}\" dragAccessibilityClass=\"${5:ui:draggable Optional - String}\" dragImageClass=\"${6:ui:draggable Optional - String}\" disable=\"${7:ui:draggable Optional - Boolean}\" ariaGrabbed=\"${8:ui:draggable Optional - boolean}\" accessibilityComponent=\"${9:ui:draggable Optional - String}\">${10:Implements ui:hasContextComponent.\nA draggable component in drag and drop operation.}</ui:draggable>"
      },
      {
         "trigger": "tag-ui-dropzone\t$A.Tag",
         "contents": "ui:dropzone types=\"${1:ui:dropzone Optional - String[]}\" dragOverInterval=\"${2:ui:dropzone Optional - Integer}\" class=\"${3:ui:dropzone Optional - String}\" dragOverClass=\"${4:ui:dropzone Optional - String}\" dragOverAccessibilityClass=\"${5:ui:dropzone Optional - String}\" label=\"${6:ui:dropzone Optional - String}\" ariaDropEffect=\"${7:ui:dropzone Optional - String}\">${8:Implements ui:hasContextComponent.\nComponent that could be a drop target in drag and drop operation.}</ui:dropzone>"
      },
      {
         "trigger": "tag-ui-fieldLabel\t$A.Tag",
         "contents": "ui:fieldLabel>${2:The label displayed on a field component.}</ui:fieldLabel>"
      },
      {
         "trigger": "tag-ui-header\t$A.Tag",
         "contents": "ui:header>${2:}</ui:header>"
      },
      {
         "trigger": "tag-ui-image\t$A.Tag",
         "contents": "ui:image title=\"${1:ui:image Optional - String}\" imageType=\"${2:ui:image Optional - String}\" src=\"${3:ui:image Optional - String}\" class=\"${4:ui:image Optional - String}\" href=\"${5:ui:image Optional - String}\" linkClass=\"${6:ui:image Optional - String}\" alt=\"${7:ui:image Optional - String}\" target=\"${8:ui:image Optional - String}\">${9:An image that is rendered as an HTML <img> element. Use the alt attribute if imageType=\"informational\".}</ui:image>"
      },
      {
         "trigger": "tag-ui-infiniteList\t$A.Tag",
         "contents": "ui:infiniteList enableRowSwipe=\"${1:ui:infiniteList Optional - Boolean}\">${2:Implements ui:scrollerEmbeddable.\nA list component that iterates over and displays the items in the ui:dataProvider component.}</ui:infiniteList>"
      },
      {
         "trigger": "tag-ui-infiniteListRow\t$A.Tag",
         "contents": "ui:infiniteListRow class=\"${1:ui:infiniteListRow Optional - String}\" swipeBody=\"${2:ui:infiniteListRow Optional - Aura.Component[]}\">${3:}</ui:infiniteListRow>"
      },
      {
         "trigger": "tag-ui-input\t$A.Tag",
         "contents": "ui:input disableDoubleClicks=\"${1:ui:input Optional - Boolean}\" showErrors=\"${2:ui:input Optional - Boolean}\" errors=\"${3:ui:input Optional - Object[]}\" errorComponent=\"${4:ui:input Optional - Aura.Component[]}\" type=\"${5:ui:input Optional - String}\" required=\"${6:ui:input Optional - Boolean}\" updateOn=\"${7:ui:input Optional - String}\" value=\"${8:ui:input Optional - String}\" label=\"${9:ui:input Optional - String}\" labelClass=\"${10:ui:input Optional - String}\" labelPosition=\"${11:ui:input Optional - String}\" labelTitle=\"${12:ui:input Optional - String}\" requiredIndicatorClass=\"${13:ui:input Optional - String}\" disabled=\"${14:ui:input Optional - Boolean}\" domId=\"${15:ui:input Optional - String}\" requiredIndicator=\"${16:ui:input Optional - Aura.Component[]}\">${17:Implements ui:visible, ui:uiEvents.\nAn abstract class that is extended by input components such as ui:inputCheckbox and ui:inputText.}</ui:input>"
      },
      {
         "trigger": "tag-ui-inputCheckbox\t$A.Tag",
         "contents": "ui:inputCheckbox updateOn=\"${1:ui:inputCheckbox Optional - String}\">${2:Implements ui:inputBaseOption.\nRepresents a checkbox. Its behavior can be configured using events such as click and change.}</ui:inputCheckbox>"
      },
      {
         "trigger": "tag-ui-inputCurrency\t$A.Tag",
         "contents": "ui:inputCurrency>${2:Implements ui:inputNumberComponent,ui:inputTextComponent.\nAn input field for entering a currency.}</ui:inputCurrency>"
      },
      {
         "trigger": "tag-ui-inputDate\t$A.Tag",
         "contents": "ui:inputDate placeholder=\"${1:ui:inputDate Optional - String}\" loadDatePicker=\"${2:ui:inputDate Optional - Boolean}\">${3:Implements ui:inputDateComponent.\nAn input field for entering a date.}</ui:inputDate>"
      },
      {
         "trigger": "tag-ui-inputDateRange\t$A.Tag",
         "contents": "ui:inputDateRange startInputPlaceholder=\"${1:ui:inputDateRange Optional - String}\" endInputPlaceholder=\"${2:ui:inputDateRange Optional - String}\" startDate=\"${3:ui:inputDateRange Optional - String}\" endDate=\"${4:ui:inputDateRange Optional - String}\">${5:Implements ui:inputDateComponent.\nA component for entering a date range.}</ui:inputDateRange>"
      },
      {
         "trigger": "tag-ui-inputDateTime\t$A.Tag",
         "contents": "ui:inputDateTime value=\"${1:ui:inputDateTime Optional - String}\" placeholder=\"${2:ui:inputDateTime Optional - String}\" timezone=\"${3:ui:inputDateTime Optional - String}\">${4:Implements ui:inputDateComponent.\nAn input field for entering a date and time.}</ui:inputDateTime>"
      },
      {
         "trigger": "tag-ui-inputDateTrigger\t$A.Tag",
         "contents": "ui:inputDateTrigger>${2:Represents a date input component that can be used with the date picker manager, ui:datePickerManager.}</ui:inputDateTrigger>"
      },
      {
         "trigger": "tag-ui-inputDefaultError\t$A.Tag",
         "contents": "ui:inputDefaultError value=\"${1:ui:inputDefaultError Optional - String[]}\" errors=\"${2:ui:inputDefaultError Optional - Object[]}\" domId=\"${3:ui:inputDefaultError Optional - String}\">${4:Implements ui:visible.\nThe default implementation of field-level errors, which iterates over the value and displays the message.}</ui:inputDefaultError>"
      },
      {
         "trigger": "tag-ui-inputEmail\t$A.Tag",
         "contents": "ui:inputEmail>${2:Implements ui:inputTextComponent.\nRepresents an input field for entering an email address.}</ui:inputEmail>"
      },
      {
         "trigger": "tag-ui-inputFile\t$A.Tag",
         "contents": "ui:inputFile>${2:An HTML input element for specifying or uploading a file.}</ui:inputFile>"
      },
      {
         "trigger": "tag-ui-inputNumber\t$A.Tag",
         "contents": "ui:inputNumber>${2:Implements ui:inputNumberComponent,ui:inputTextComponent.\nAn input field for entering a number, taking advantage of client input assistance and validation when available.}</ui:inputNumber>"
      },
      {
         "trigger": "tag-ui-inputOption\t$A.Tag",
         "contents": "ui:inputOption type=\"${1:ui:inputOption Optional - String}\">${2:Implements ui:inputBaseOption.\nAn abstract component for input options with type checkbox, radio, or selectOption.}</ui:inputOption>"
      },
      {
         "trigger": "tag-ui-inputPercent\t$A.Tag",
         "contents": "ui:inputPercent>${2:Implements ui:inputNumberComponent,ui:inputTextComponent.\nAn input field for entering a percentage.}</ui:inputPercent>"
      },
      {
         "trigger": "tag-ui-inputPhone\t$A.Tag",
         "contents": "ui:inputPhone>${2:Implements ui:inputTextComponent.\nRepresents an input field for entering a telephone number.}</ui:inputPhone>"
      },
      {
         "trigger": "tag-ui-inputRadio\t$A.Tag",
         "contents": "ui:inputRadio disabled=\"${1:ui:inputRadio Optional - Boolean}\">${2:Implements ui:inputBaseOption.\nThe radio button used in the input.}</ui:inputRadio>"
      },
      {
         "trigger": "tag-ui-inputRange\t$A.Tag",
         "contents": "ui:inputRange min=\"${1:ui:inputRange Optional - Integer}\" max=\"${2:ui:inputRange Optional - Integer}\" step=\"${3:ui:inputRange Optional - Integer}\" value=\"${4:ui:inputRange Optional - Integer}\">${5:The range used in the input.}</ui:inputRange>"
      },
      {
         "trigger": "tag-ui-inputRichText\t$A.Tag",
         "contents": "ui:inputRichText toolbar=\"${1:ui:inputRichText Optional - String}\" customToolbarConfig=\"${2:ui:inputRichText Optional - Object}\" toolbarLocation=\"${3:ui:inputRichText Optional - String}\" width=\"${4:ui:inputRichText Optional - String}\" height=\"${5:ui:inputRichText Optional - String}\" isRichText=\"${6:ui:inputRichText Optional - Boolean}\">${7:An input field for entering rich text.}</ui:inputRichText>"
      },
      {
         "trigger": "tag-ui-inputSearch\t$A.Tag",
         "contents": "ui:inputSearch updateOn=\"${1:ui:inputSearch Optional - String}\" type=\"${2:ui:inputSearch Optional - String}\" placeholder=\"${3:ui:inputSearch Optional - String}\" showClear=\"${4:ui:inputSearch Optional - Boolean}\">${5:Implements ui:inputTextComponent.\nThis component displays an input field suitable for entering a search string.}</ui:inputSearch>"
      },
      {
         "trigger": "tag-ui-inputSecret\t$A.Tag",
         "contents": "ui:inputSecret>${2:Implements ui:inputTextComponent.\nAn input field for entering secret text with type password.}</ui:inputSecret>"
      },
      {
         "trigger": "tag-ui-inputSelect\t$A.Tag",
         "contents": "ui:inputSelect options=\"${1:ui:inputSelect Optional - List}\" name=\"${2:ui:inputSelect Optional - String}\" multiple=\"${3:ui:inputSelect Optional - Boolean}\" size=\"${4:ui:inputSelect Optional - Integer}\">${5:Represents a drop-down list with options.}</ui:inputSelect>"
      },
      {
         "trigger": "tag-ui-inputSelectOption\t$A.Tag",
         "contents": "ui:inputSelectOption>${2:Implements ui:inputBaseOption.\nAn HTML option element that is nested in a <ui:inputSelect> element. Denotes the available options in the list.}</ui:inputSelectOption>"
      },
      {
         "trigger": "tag-ui-inputSelectOptionGroup\t$A.Tag",
         "contents": "ui:inputSelectOptionGroup class=\"${1:ui:inputSelectOptionGroup Optional - String}\" label=\"${2:ui:inputSelectOptionGroup Optional - String}\">${3:An HTML optgroup element that groups related options in a <ui:inputSelect> element.}</ui:inputSelectOptionGroup>"
      },
      {
         "trigger": "tag-ui-inputText\t$A.Tag",
         "contents": "ui:inputText>${2:Implements ui:inputTextComponent.\nRepresents an input field suitable for entering a single line of free-form text.}</ui:inputText>"
      },
      {
         "trigger": "tag-ui-inputTextArea\t$A.Tag",
         "contents": "ui:inputTextArea rows=\"${1:ui:inputTextArea Optional - Integer}\" cols=\"${2:ui:inputTextArea Optional - Integer}\" readonly=\"${3:ui:inputTextArea Optional - Boolean}\" placeholder=\"${4:ui:inputTextArea Optional - String}\" resizable=\"${5:ui:inputTextArea Optional - Boolean}\" maxlength=\"${6:ui:inputTextArea Optional - Integer}\">${7:An HTML textarea element that can be editable or read-only. Scroll bars may not appear on Chrome browsers in Android devices, but you can select focus in the textarea to activate scrolling.}</ui:inputTextArea>"
      },
      {
         "trigger": "tag-ui-inputTextAreaForAutocomplete\t$A.Tag",
         "contents": "ui:inputTextAreaForAutocomplete autocompleteButton=\"${1:ui:inputTextAreaForAutocomplete Optional - Aura.Component[]}\" ariaExpanded=\"${2:ui:inputTextAreaForAutocomplete Optional - String}\" ariaActiveDescendant=\"${3:ui:inputTextAreaForAutocomplete Optional - String}\">${4:This component is used as input text area in a ui:autocomplete component.}</ui:inputTextAreaForAutocomplete>"
      },
      {
         "trigger": "tag-ui-inputTextForAutocomplete\t$A.Tag",
         "contents": "ui:inputTextForAutocomplete autocompleteButton=\"${1:ui:inputTextForAutocomplete Optional - Aura.Component[]}\" ariaExpanded=\"${2:ui:inputTextForAutocomplete Optional - String}\" ariaActiveDescendant=\"${3:ui:inputTextForAutocomplete Optional - String}\">${4:Implements ui:inputTextComponent.\nThis component is used as input text in a ui:autocomplete component.}</ui:inputTextForAutocomplete>"
      },
      {
         "trigger": "tag-ui-inputURL\t$A.Tag",
         "contents": "ui:inputURL>${2:Implements ui:inputTextComponent.\nAn input field for entering a URL.}</ui:inputURL>"
      },
      {
         "trigger": "tag-ui-interactive\t$A.Tag",
         "contents": "ui:interactive disabled=\"${1:ui:interactive Optional - Boolean}\" disableDoubleClicks=\"${2:ui:interactive Optional - Boolean}\">${3:Implements ui:visible.\nAn abstract component which capsulates common events.}</ui:interactive>"
      },
      {
         "trigger": "tag-ui-label\t$A.Tag",
         "contents": "ui:label label=\"${1:ui:label Optional - String}\" title=\"${2:ui:label Optional - String}\" class=\"${3:ui:label Optional - String}\" labelDisplay=\"${4:ui:label Optional - Boolean}\" for=\"${5:ui:label Optional - Object}\" requiredIndicator=\"${6:ui:label Optional - Aura.Component[]}\">${7:The label displayed on an input component. To bind a label to an input component, use the for attribute.}</ui:label>"
      },
      {
         "trigger": "tag-ui-list\t$A.Tag",
         "contents": "ui:list>${2:A list component that iterates over and displays the items in the ui:dataProvider component.}</ui:list>"
      },
      {
         "trigger": "tag-ui-listSorter\t$A.Tag",
         "contents": "ui:listSorter dataProvider=\"${1:ui:listSorter Optional - Aura.Component[]}\" class=\"${2:ui:listSorter Optional - String}\" title=\"${3:ui:listSorter Optional - String}\" cancelLabel=\"${4:ui:listSorter Optional - String}\" applyLabel=\"${5:ui:listSorter Optional - String}\" visible=\"${6:ui:listSorter Optional - Boolean}\" items=\"${7:ui:listSorter Optional - Object[]}\" defaultSelectedItems=\"${8:ui:listSorter Optional - Object}\" triggerLabel=\"${9:ui:listSorter Optional - String}\" ascendingLabel=\"${10:ui:listSorter Optional - String}\" descendingLabel=\"${11:ui:listSorter Optional - String}\" trigger=\"${12:ui:listSorter Optional - Aura.Component[]}\" modal=\"${13:ui:listSorter Optional - Boolean}\" rowVar=\"${14:ui:listSorter Optional - String}\" rowDef=\"${15:ui:listSorter Optional - Aura.ComponentDefRef[]}\" onApply=\"${16:ui:listSorter Optional - Aura.Action}\" onOpen=\"${17:ui:listSorter Optional - Aura.Action}\" onCancel=\"${18:ui:listSorter Optional - Aura.Action}\">${19:This component provides the user selected items with sort order based on the data from the data provider.}</ui:listSorter>"
      },
      {
         "trigger": "tag-ui-listView\t$A.Tag",
         "contents": "ui:listView id=\"${1:ui:listView Optional - String}\" alternateRowClass=\"${2:ui:listView Optional - String}\" blockSize=\"${3:ui:listView Optional - Integer}\" columns=\"${4:ui:listView Optional - List}\" dataColumns=\"${5:ui:listView Optional - List}\" dataTemplates=\"${6:ui:listView Optional - List}\" emptyMessage=\"${7:ui:listView Optional - String}\" footer=\"${8:ui:listView Optional - Aura.Component[]}\" items=\"${9:ui:listView Optional - List}\" rowClass=\"${10:ui:listView Optional - String}\" rowTooltip=\"${11:ui:listView Optional - String}\">${12:Implements ui:elementInterface.\nDeprecated. A column based listview with comprehensive event support.}</ui:listView>"
      },
      {
         "trigger": "tag-ui-listViewColumn\t$A.Tag",
         "contents": "ui:listViewColumn column=\"${1:ui:listViewColumn Optional - Object}\" index=\"${2:ui:listViewColumn Optional - Integer}\" item=\"${3:ui:listViewColumn Optional - Object}\" scope=\"${4:ui:listViewColumn Optional - String}\" type=\"${5:ui:listViewColumn Optional - String}\">${6:Implements ui:elementInterface,ui:listViewColumnInterface.\nAn abstract column template component, used to specify column display information in ui:listView.}</ui:listViewColumn>"
      },
      {
         "trigger": "tag-ui-listViewColumnCell\t$A.Tag",
         "contents": "ui:listViewColumnCell>${2:A simple column template definition, describes a barebones table data cell.}</ui:listViewColumnCell>"
      },
      {
         "trigger": "tag-ui-listViewColumnCheckbox\t$A.Tag",
         "contents": "ui:listViewColumnCheckbox label=\"${1:ui:listViewColumnCheckbox Optional - String}\" labelClass=\"${2:ui:listViewColumnCheckbox Optional - String}\" checked=\"${3:ui:listViewColumnCheckbox Optional - Boolean}\">${4:A checkbox column template definition, describes a checkbox in a table data cell.}</ui:listViewColumnCheckbox>"
      },
      {
         "trigger": "tag-ui-listViewColumnEmail\t$A.Tag",
         "contents": "ui:listViewColumnEmail text=\"${1:ui:listViewColumnEmail Optional - String}\" url=\"${2:ui:listViewColumnEmail Optional - String}\">${3:An email column template definition, describes an email mailto: link reference in a table data cell.}</ui:listViewColumnEmail>"
      },
      {
         "trigger": "tag-ui-listViewColumnHeader\t$A.Tag",
         "contents": "ui:listViewColumnHeader>${2:A simple column template definition, describes a barebones table header cell.}</ui:listViewColumnHeader>"
      },
      {
         "trigger": "tag-ui-listViewColumnHtml\t$A.Tag",
         "contents": "ui:listViewColumnHtml markup=\"${1:ui:listViewColumnHtml Optional - Object}\">${2:An html column template definition, describes unescaped markup in a table data cell.}</ui:listViewColumnHtml>"
      },
      {
         "trigger": "tag-ui-listViewColumnIndex\t$A.Tag",
         "contents": "ui:listViewColumnIndex>${2:An index column template definition, describes the (one-based) number of the current item being processed in a table data cell.}</ui:listViewColumnIndex>"
      },
      {
         "trigger": "tag-ui-listViewColumnLink\t$A.Tag",
         "contents": "ui:listViewColumnLink target=\"${1:ui:listViewColumnLink Optional - String}\" text=\"${2:ui:listViewColumnLink Optional - String}\" url=\"${3:ui:listViewColumnLink Optional - String}\">${4:A link column template definition, describes a hyperlink reference in a table data cell.}</ui:listViewColumnLink>"
      },
      {
         "trigger": "tag-ui-listViewRow\t$A.Tag",
         "contents": "ui:listViewRow index=\"${1:ui:listViewRow Optional - Integer}\" item=\"${2:ui:listViewRow Optional - Object}\">${3:Implements ui:elementInterface.\nA basic row component used by the listView.}</ui:listViewRow>"
      },
      {
         "trigger": "tag-ui-manifest\t$A.Tag",
         "contents": "ui:manifest lastMod=\"${1:ui:manifest Optional - String}\" resourceURLs=\"${2:ui:manifest Optional - String}\">${3:}</ui:manifest>"
      },
      {
         "trigger": "tag-ui-menu\t$A.Tag",
         "contents": "ui:menu>${2:Implements ui:visible.\nA dropdown menu list with a trigger that controls its visibility. Need to provide a menuTriggerLink and menuList component.}</ui:menu>"
      },
      {
         "trigger": "tag-ui-menuItem\t$A.Tag",
         "contents": "ui:menuItem selected=\"${1:ui:menuItem Optional - Boolean}\" type=\"${2:ui:menuItem Optional - String}\" hideMenuAfterSelected=\"${3:ui:menuItem Optional - Boolean}\" label=\"${4:ui:menuItem Optional - String}\">${5:A UI menu item in a ui:menuList component.}</ui:menuItem>"
      },
      {
         "trigger": "tag-ui-menuItemSeparator\t$A.Tag",
         "contents": "ui:menuItemSeparator>${2:Implements ui:visible.\nA menu separator to divide menu items, such as ui:radioMenuItem, and used in a ui:menuList component.}</ui:menuItemSeparator>"
      },
      {
         "trigger": "tag-ui-menuList\t$A.Tag",
         "contents": "ui:menuList menuItems=\"${1:ui:menuList Optional - List}\" visible=\"${2:ui:menuList Optional - Boolean}\" focusItemIndex=\"${3:ui:menuList Optional - Integer}\" focusTrigger=\"${4:ui:menuList Optional - Aura.Action}\" childMenuItems=\"${5:ui:menuList Optional - Aura.Component[]}\">${6:Implements ui:visible.\nA menu component that can contain menu items: ui:actionMenuItem, ui:checkboxMenuItem, and ui:radioMenuItem, and a separator component ui:menuItemSeparator. This component can be nested in a ui:menu component and can be used together with a ui:menuTriggerLink component, which triggers the menu items.}</ui:menuList>"
      },
      {
         "trigger": "tag-ui-menuTrigger\t$A.Tag",
         "contents": "ui:menuTrigger>${2:A trigger that expands and collapses a menu, used in a ui:menu component.}</ui:menuTrigger>"
      },
      {
         "trigger": "tag-ui-menuTriggerLink\t$A.Tag",
         "contents": "ui:menuTriggerLink label=\"${1:ui:menuTriggerLink Optional - String}\">${2:A link that triggers a dropdown menu.}</ui:menuTriggerLink>"
      },
      {
         "trigger": "tag-ui-message\t$A.Tag",
         "contents": "ui:message title=\"${1:ui:message Optional - String}\" severity=\"${2:ui:message Optional - String}\" closable=\"${3:ui:message Optional - Boolean}\">${4:Implements ui:visible.\nRepresents a message of varying severity levels}</ui:message>"
      },
      {
         "trigger": "tag-ui-modal\t$A.Tag",
         "contents": "ui:modal title=\"${1:ui:modal Optional - String}\" titleDisplay=\"${2:ui:modal Optional - Boolean}\" class=\"${3:ui:modal Optional - String}\" startOfDialogLabel=\"${4:ui:modal Optional - String}\" showCloseButton=\"${5:ui:modal Optional - Boolean}\" closeDialogLabel=\"${6:ui:modal Optional - String}\" useTransition=\"${7:ui:modal Optional - Boolean}\" animation=\"${8:ui:modal Optional - String}\" closeAnimation=\"${9:ui:modal Optional - String}\" autoFocus=\"${10:ui:modal Optional - Boolean}\" closeButton=\"${11:ui:modal Optional - Aura.Component[]}\">${12:Implements ui:panelType.\n}</ui:modal>"
      },
      {
         "trigger": "tag-ui-output\t$A.Tag",
         "contents": "ui:output value=\"${1:ui:output Required - Object}\">${2:The base component of most output components.}</ui:output>"
      },
      {
         "trigger": "tag-ui-outputCheckbox\t$A.Tag",
         "contents": "ui:outputCheckbox value=\"${1:ui:outputCheckbox Required - Boolean}\" altChecked=\"${2:ui:outputCheckbox Optional - String}\" altUnchecked=\"${3:ui:outputCheckbox Optional - String}\">${4:Implements ui:visible.\nDisplays a checkbox in a checked or unchecked state.}</ui:outputCheckbox>"
      },
      {
         "trigger": "tag-ui-outputCurrency\t$A.Tag",
         "contents": "ui:outputCurrency value=\"${1:ui:outputCurrency Required - Decimal}\" format=\"${2:ui:outputCurrency Optional - String}\" currencyCode=\"${3:ui:outputCurrency Optional - String}\" currencySymbol=\"${4:ui:outputCurrency Optional - String}\">${5:Implements ui:visible.\nDisplays the currency in the default or specified format, such as with specific currency code or decimal places.}</ui:outputCurrency>"
      },
      {
         "trigger": "tag-ui-outputDate\t$A.Tag",
         "contents": "ui:outputDate value=\"${1:ui:outputDate Required - String}\">${2:Implements ui:outputDateComponent, ui:visible.\nDisplays a date in the default or specified format based on the user's locale.}</ui:outputDate>"
      },
      {
         "trigger": "tag-ui-outputDateTime\t$A.Tag",
         "contents": "ui:outputDateTime value=\"${2:ui:outputDateTime Required - String}\" timezone=\"${1:ui:outputDateTime Optional - String}\">${2:Implements ui:outputDateComponent, ui:visible.\nDisplays a date, time in a specified or default format based on the user's locale.}</ui:outputDateTime>"
      },
      {
         "trigger": "tag-ui-outputEmail\t$A.Tag",
         "contents": "ui:outputEmail value=\"${1:ui:outputEmail Required - String}\">${2:Implements ui:visible.\nDisplays an email address in an HTML anchor (<a>) element. The leading and trailing space are trimmed.}</ui:outputEmail>"
      },
      {
         "trigger": "tag-ui-outputLabel\t$A.Tag",
         "contents": "ui:outputLabel>${2:Implements ui:visible.\nDisplays an element label as specified by the value attribute.}</ui:outputLabel>"
      },
      {
         "trigger": "tag-ui-outputMultiSelect\t$A.Tag",
         "contents": "ui:outputMultiSelect value=\"${1:ui:outputMultiSelect Required - String[]}\" delimiter=\"${2:ui:outputMultiSelect Optional - String}\">${3:Implements ui:visible.\nDisplays multiple values from a list of options.}</ui:outputMultiSelect>"
      },
      {
         "trigger": "tag-ui-outputNumber\t$A.Tag",
         "contents": "ui:outputNumber value=\"${1:ui:outputNumber Required - Decimal}\" format=\"${2:ui:outputNumber Optional - String}\">${3:Implements ui:visible.\nDisplays the number in the default or specified format. Supports up to 18 digits before the decimal place.}</ui:outputNumber>"
      },
      {
         "trigger": "tag-ui-outputPercent\t$A.Tag",
         "contents": "ui:outputPercent value=\"${1:ui:outputPercent Required - Decimal}\" format=\"${2:ui:outputPercent Optional - String}\" valueScale=\"${3:ui:outputPercent Optional - Integer}\">${4:Implements ui:visible.\nDisplays the percentage in the default or specified format with the user's locale.}</ui:outputPercent>"
      },
      {
         "trigger": "tag-ui-outputPhone\t$A.Tag",
         "contents": "ui:outputPhone value=\"${1:ui:outputPhone Required - String}\">${2:Implements ui:visible.\nDisplays the phone number in a URL link format.}</ui:outputPhone>"
      },
      {
         "trigger": "tag-ui-outputRadio\t$A.Tag",
         "contents": "ui:outputRadio>${2:Implements ui:visible.\nDisplays a radio button based on the value attribute.}</ui:outputRadio>"
      },
      {
         "trigger": "tag-ui-outputRichText\t$A.Tag",
         "contents": "ui:outputRichText value=\"${1:ui:outputRichText Optional - String}\" supportedTags=\"${2:ui:outputRichText Optional - String}\">${3:Implements ui:visible.\nDisplays richly-formatted text including tags such as paragraph, image, and hyperlink, as specified in the value attribute.}</ui:outputRichText>"
      },
      {
         "trigger": "tag-ui-outputSelect\t$A.Tag",
         "contents": "ui:outputSelect>${2:Implements ui:visible.\nDisplays a list of options based on the value attribute.}</ui:outputSelect>"
      },
      {
         "trigger": "tag-ui-outputText\t$A.Tag",
         "contents": "ui:outputText value=\"${1:ui:outputText Required - String}\">${2:Implements ui:visible.\nDisplays text as specified by the value attribute.}</ui:outputText>"
      },
      {
         "trigger": "tag-ui-outputTextArea\t$A.Tag",
         "contents": "ui:outputTextArea value=\"${1:ui:outputTextArea Required - String}\">${2:Implements ui:visible.\nDisplays the text area as specified by the value attribute.}</ui:outputTextArea>"
      },
      {
         "trigger": "tag-ui-outputURL\t$A.Tag",
         "contents": "ui:outputURL value=\"${3:ui:outputURL Required - String}\" iconClass=\"${1:ui:outputURL Optional - String}\" title=\"${2:ui:outputURL Optional - String}\" target=\"${4:ui:outputURL Optional - String}\" alt=\"${5:ui:outputURL Optional - String}\" label=\"${6:ui:outputURL Optional - String}\" disabled=\"${7:ui:outputURL Optional - Boolean}\" stopPropagation=\"${8:ui:outputURL Optional - Boolean}\" fixURL=\"${9:ui:outputURL Optional - Boolean}\" stopNavigation=\"${10:ui:outputURL Optional - Boolean}\">${11:Implements ui:visible.\nDisplays a link to a URL as specified by the value attribute, rendered on a given text (label attribute) and image, if any.}</ui:outputURL>"
      },
      {
         "trigger": "tag-ui-pager\t$A.Tag",
         "contents": "ui:pager>${2:Implements ui:visible, ui:pagingInterface.\nAn abstract pager component, used to specify common behavior across implementations.}</ui:pager>"
      },
      {
         "trigger": "tag-ui-pagerJumpToPage\t$A.Tag",
         "contents": "ui:pagerJumpToPage Labels_Page=\"${1:ui:pagerJumpToPage Optional - String}\" Labels_Of=\"${2:ui:pagerJumpToPage Optional - String}\">${3:A pager implementation that allows the user to navigate to any page between 1 and pageCount.}</ui:pagerJumpToPage>"
      },
      {
         "trigger": "tag-ui-pagerNextPrevious\t$A.Tag",
         "contents": "ui:pagerNextPrevious Labels_First=\"${1:ui:pagerNextPrevious Optional - String}\" Labels_Last=\"${2:ui:pagerNextPrevious Optional - String}\" Labels_Next=\"${3:ui:pagerNextPrevious Optional - String}\" Labels_Previous=\"${4:ui:pagerNextPrevious Optional - String}\">${5:A pager implementation that allows the user to navigate sequentially between pages or jump to the first or last page.}</ui:pagerNextPrevious>"
      },
      {
         "trigger": "tag-ui-pagerPageInfo\t$A.Tag",
         "contents": "ui:pagerPageInfo Labels_Of=\"${1:ui:pagerPageInfo Optional - String}\" Labels_To=\"${2:ui:pagerPageInfo Optional - String}\">${3:A purely presentational pager implementation, used to display the current and total items.}</ui:pagerPageInfo>"
      },
      {
         "trigger": "tag-ui-pagerPageSize\t$A.Tag",
         "contents": "ui:pagerPageSize Labels_All=\"${1:ui:pagerPageSize Optional - String}\" Labels_Records=\"${2:ui:pagerPageSize Optional - String}\">${3:A pager implementation that allows the user to change the size of pages in items.}</ui:pagerPageSize>"
      },
      {
         "trigger": "tag-ui-panel\t$A.Tag",
         "contents": "ui:panel title=\"${1:ui:panel Optional - String}\" class=\"${2:ui:panel Optional - String}\" titleDisplay=\"${3:ui:panel Optional - Boolean}\" startOfDialogLabel=\"${4:ui:panel Optional - String}\" closeOnClickOut=\"${5:ui:panel Optional - Boolean}\" closeAction=\"${6:ui:panel Optional - Object}\" showCloseButton=\"${7:ui:panel Optional - Boolean}\" closeDialogLabel=\"${8:ui:panel Optional - String}\" useTransition=\"${9:ui:panel Optional - Boolean}\" animation=\"${10:ui:panel Optional - String}\" closeAnimation=\"${11:ui:panel Optional - String}\" autoFocus=\"${12:ui:panel Optional - Boolean}\" referenceElementSelector=\"${13:ui:panel Optional - String}\" referenceElement=\"${14:ui:panel Optional - Object}\" direction=\"${15:ui:panel Optional - String}\" showPointer=\"${16:ui:panel Optional - Boolean}\" closeButton=\"${17:ui:panel Optional - Aura.Component[]}\">${18:Implements ui:panelType.\nA panel for dialogs. Use only one instance of ui:panelManager to manage your modal or non-modal dialogs.}</ui:panel>"
      },
      {
         "trigger": "tag-ui-panelDialog\t$A.Tag",
         "contents": "ui:panelDialog closeOnClickOut=\"${1:ui:panelDialog Optional - Boolean}\" showCloseButton=\"${2:ui:panelDialog Optional - Boolean}\" closeAction=\"${3:ui:panelDialog Optional - Aura.Action}\" class=\"${4:ui:panelDialog Optional - String}\" animation=\"${5:ui:panelDialog Optional - String}\" title=\"${6:ui:panelDialog Optional - String}\" startOfDialogLabel=\"${7:ui:panelDialog Optional - String}\" closeDialogLabel=\"${8:ui:panelDialog Optional - String}\" detail=\"${9:ui:panelDialog Optional - String}\" icon=\"${10:ui:panelDialog Optional - Aura.Component[]}\" isVisible=\"${11:ui:panelDialog Optional - Boolean}\" autoFocus=\"${12:ui:panelDialog Optional - Boolean}\" titleDisplay=\"${13:ui:panelDialog Optional - Boolean}\" isTransient=\"${14:ui:panelDialog Optional - Boolean}\" isModal=\"${15:ui:panelDialog Optional - Boolean}\" referenceElement=\"${16:ui:panelDialog Optional - Object}\" callbacks=\"${17:ui:panelDialog Optional - Object}\">${18:A panel for dialogs. Use only one instance of ui:panelManager to manage your modal or non-modal dialogs.}</ui:panelDialog>"
      },
      {
         "trigger": "tag-ui-panelManager\t$A.Tag",
         "contents": "ui:panelManager class=\"${1:ui:panelManager Optional - String}\" cancelButtonLabel=\"${2:ui:panelManager Optional - String}\">${3:A panel manager that instantiates and handles panels.}</ui:panelManager>"
      },
      {
         "trigger": "tag-ui-panelManager2\t$A.Tag",
         "contents": "ui:panelManager2 registeredPanels=\"${1:ui:panelManager2 Optional - Aura.ComponentDefRef[]}\">${2:Panel manager 2}</ui:panelManager2>"
      },
      {
         "trigger": "tag-ui-pill\t$A.Tag",
         "contents": "ui:pill label=\"${1:ui:pill Optional - String}\" id=\"${2:ui:pill Optional - String}\" showDelete=\"${3:ui:pill Optional - Boolean}\" iconUrl=\"${4:ui:pill Optional - String}\" accessibleDeleteLabel=\"${5:ui:pill Optional - String}\" maxCharacters=\"${6:ui:pill Optional - Integer}\">${7:Implements ui:visible, ui:focusable.\nA UI pill in a ui:pillContainer component}</ui:pill>"
      },
      {
         "trigger": "tag-ui-pillContainer\t$A.Tag",
         "contents": "ui:pillContainer items=\"${1:ui:pillContainer Optional - List}\" maxAllowed=\"${2:ui:pillContainer Optional - Integer}\" maxCharactersInPill=\"${3:ui:pillContainer Optional - Integer}\" maxLines=\"${4:ui:pillContainer Optional - Integer}\" focusOnInput=\"${5:ui:pillContainer Optional - Boolean}\" allowRemove=\"${6:ui:pillContainer Optional - Boolean}\" pillInput=\"${7:ui:pillContainer Optional - Aura.Component[]}\" showMoreLabel=\"${8:ui:pillContainer Optional - String}\" pillFlavor=\"${9:ui:pillContainer Optional - String}\">${10:A container for ui:pill}</ui:pillContainer>"
      },
      {
         "trigger": "tag-ui-pillContainerAutoComplete\t$A.Tag",
         "contents": "ui:pillContainerAutoComplete allowNew=\"${1:ui:pillContainerAutoComplete Optional - Boolean}\">${2:Implements ui:pillContainerInput.\nAuto complete component for use in a ui:pillContainer}</ui:pillContainerAutoComplete>"
      },
      {
         "trigger": "tag-ui-pillContainerAutoCompleteOption\t$A.Tag",
         "contents": "ui:pillContainerAutoCompleteOption iconUrl=\"${1:ui:pillContainerAutoCompleteOption Optional - String}\">${2:Auto complete component for use in a ui:pillContainer}</ui:pillContainerAutoCompleteOption>"
      },
      {
         "trigger": "tag-ui-popup\t$A.Tag",
         "contents": "ui:popup>${2:Implements ui:visible.\nA popup with a trigger that controls its visibility. This is a base component for ui:menu and ui:panelDialog.}</ui:popup>"
      },
      {
         "trigger": "tag-ui-popupTarget\t$A.Tag",
         "contents": "ui:popupTarget visible=\"${1:ui:popupTarget Optional - Boolean}\" closeOnTabKey=\"${2:ui:popupTarget Optional - Boolean}\" autoPosition=\"${3:ui:popupTarget Optional - Boolean}\" manualPosition=\"${4:ui:popupTarget Optional - Boolean}\" attachToBody=\"${5:ui:popupTarget Optional - Boolean}\" referenceElement=\"${6:ui:popupTarget Optional - Object}\" curtain=\"${7:ui:popupTarget Optional - Boolean}\" closeOnClickOutside=\"${8:ui:popupTarget Optional - Boolean}\" closeOnClickInside=\"${9:ui:popupTarget Optional - Boolean}\" preTransitionClass=\"${10:ui:popupTarget Optional - String}\">${11:Implements ui:visible.\nA container that is displayed in response to a trigger event. If used in a mobile context, it is recommended that curtain be set to true to prevent nested iframes from consuming the closeOnClickOutside event.}</ui:popupTarget>"
      },
      {
         "trigger": "tag-ui-popupTrigger\t$A.Tag",
         "contents": "ui:popupTrigger title=\"${1:ui:popupTrigger Optional - String}\" trigger=\"${2:ui:popupTrigger Optional - Aura.Component[]}\" stopClickPropagation=\"${3:ui:popupTrigger Optional - Boolean}\">${4:A trigger that expands and collapses a menu, used in a ui:menu component.}</ui:popupTrigger>"
      },
      {
         "trigger": "tag-ui-radioMenuItem\t$A.Tag",
         "contents": "ui:radioMenuItem>${2:​A menu item with a radio button that indicates a mutually exclusive selection and can be used to invoke an action. This component is nested in a ui:menu component.}</ui:radioMenuItem>"
      },
      {
         "trigger": "tag-ui-radioToggleMenuItem\t$A.Tag",
         "contents": "ui:radioToggleMenuItem isAscending=\"${1:ui:radioToggleMenuItem Optional - Boolean}\" ascLabel=\"${2:ui:radioToggleMenuItem Optional - String}\" descLabel=\"${3:ui:radioToggleMenuItem Optional - String}\">${4:​A menu item that indicates a mutually exclusive selection + toggle state. This component is nested in a ui:menu component.}</ui:radioToggleMenuItem>"
      },
      {
         "trigger": "tag-ui-resizeObserver\t$A.Tag",
         "contents": "ui:resizeObserver onresize=\"${1:ui:resizeObserver Optional - Aura.Action}\">${2:Detects a window resize or orientation change event and runs the updateSize controller method. Ensures the order of component composition.}</ui:resizeObserver>"
      },
      {
         "trigger": "tag-ui-scroller\t$A.Tag",
         "contents": "ui:scroller scroll=\"${1:ui:scroller Optional - String}\" enabled=\"${2:ui:scroller Optional - Boolean}\" useCSSTransition=\"${3:ui:scroller Optional - Boolean}\" useNativeScroller=\"${4:ui:scroller Optional - Boolean}\" preventNestedScroll=\"${5:ui:scroller Optional - Boolean}\" preventDefaultOnMove=\"${6:ui:scroller Optional - Boolean}\" debounce=\"${7:ui:scroller Optional - Boolean}\" snap=\"${8:ui:scroller Optional - Boolean}\" endless=\"${9:ui:scroller Optional - Boolean}\" snapType=\"${10:ui:scroller Optional - String}\" plugins=\"${11:ui:scroller Optional - String}\" gpuOptimization=\"${12:ui:scroller Optional - Boolean}\" bindEventsToScroller=\"${13:ui:scroller Optional - Boolean}\" showScrollbars=\"${14:ui:scroller Optional - Boolean}\" canShowMore=\"${15:ui:scroller Optional - Boolean}\" canRefresh=\"${16:ui:scroller Optional - Boolean}\" width=\"${17:ui:scroller Optional - Integer}\" height=\"${18:ui:scroller Optional - Integer}\" itemWidth=\"${19:ui:scroller Optional - Integer}\" itemHeight=\"${20:ui:scroller Optional - Integer}\" class=\"${21:ui:scroller Optional - String}\" scrollContentClass=\"${22:ui:scroller Optional - String}\" minThreshold=\"${23:ui:scroller Optional - Integer}\" minDirectionThreshold=\"${24:ui:scroller Optional - Integer}\" lockOnDirection=\"${25:ui:scroller Optional - String}\" onBeforeScrollStart=\"${26:ui:scroller Optional - Aura.Action}\" onScrollStart=\"${27:ui:scroller Optional - Aura.Action}\" onScrollEnd=\"${28:ui:scroller Optional - Aura.Action}\" onScrollMove=\"${29:ui:scroller Optional - Aura.Action}\" onPullToShowMore=\"${30:ui:scroller Optional - Aura.Action}\" onPullToRefresh=\"${31:ui:scroller Optional - Aura.Action}\" infiniteLoading=\"${32:ui:scroller Optional - Boolean}\" infiniteLoadingThreshold=\"${33:ui:scroller Optional - Integer}\" infiniteLoadingDataProvider=\"${34:ui:scroller Optional - Aura.Action}\" pullToShowMoreClick=\"${35:ui:scroller Optional - String}\" pullToShowMorePull=\"${36:ui:scroller Optional - String}\" pullToShowMoreRelease=\"${37:ui:scroller Optional - String}\" pullToShowMoreUpdating=\"${38:ui:scroller Optional - String}\" pullToShowMoreSubtitle=\"${39:ui:scroller Optional - String}\" pullToShowMoreError=\"${40:ui:scroller Optional - String}\" pullToRefreshClick=\"${41:ui:scroller Optional - String}\" pullToRefreshPull=\"${42:ui:scroller Optional - String}\" pullToRefreshRelease=\"${43:ui:scroller Optional - String}\" pullToRefreshUpdating=\"${44:ui:scroller Optional - String}\" pullToRefreshError=\"${45:ui:scroller Optional - String}\" pullToRefreshSubtitle=\"${46:ui:scroller Optional - String}\" scrollButtonUp=\"${47:ui:scroller Optional - String}\" scrollButtonDown=\"${48:ui:scroller Optional - String}\" scrollButtonLeft=\"${49:ui:scroller Optional - String}\" scrollButtonRight=\"${50:ui:scroller Optional - String}\" supportVoiceOver=\"${51:ui:scroller Optional - Boolean}\">${52:A scrollable view with scroll bars and pull-to-refresh support}</ui:scroller>"
      },
      {
         "trigger": "tag-ui-scrollerDeprecated\t$A.Tag",
         "contents": "ui:scrollerDeprecated hScroll=\"${1:ui:scrollerDeprecated Optional - Boolean}\" vScroll=\"${2:ui:scrollerDeprecated Optional - Boolean}\" showScrollbars=\"${3:ui:scrollerDeprecated Optional - Boolean}\" enabled=\"${4:ui:scrollerDeprecated Optional - Boolean}\" useTransform=\"${5:ui:scrollerDeprecated Optional - Boolean}\" useTransition=\"${6:ui:scrollerDeprecated Optional - Boolean}\" snap=\"${7:ui:scrollerDeprecated Optional - String}\" width=\"${8:ui:scrollerDeprecated Optional - String}\" class=\"${9:ui:scrollerDeprecated Optional - String}\" scrollContentClass=\"${10:ui:scrollerDeprecated Optional - String}\" onBeforeScrollStart=\"${11:ui:scrollerDeprecated Optional - Aura.Action}\" onScrollStart=\"${12:ui:scrollerDeprecated Optional - Aura.Action}\" onScrollEnd=\"${13:ui:scrollerDeprecated Optional - Aura.Action}\" onScrollMove=\"${14:ui:scrollerDeprecated Optional - Aura.Action}\" onScrollToBottom=\"${15:ui:scrollerDeprecated Optional - Aura.Action}\" scrollToBottomThreshold=\"${16:ui:scrollerDeprecated Optional - Integer}\" onPullToShowMore=\"${17:ui:scrollerDeprecated Optional - Aura.Action}\" pullToShowMorePull=\"${18:ui:scrollerDeprecated Optional - String}\" pullToShowMoreRelease=\"${19:ui:scrollerDeprecated Optional - String}\" pullToShowMoreUpdating=\"${20:ui:scrollerDeprecated Optional - String}\" pullToShowMoreSubtitle=\"${21:ui:scrollerDeprecated Optional - String}\" canShowMore=\"${22:ui:scrollerDeprecated Optional - Boolean}\" onPullToRefresh=\"${23:ui:scrollerDeprecated Optional - Aura.Action}\" pullToRefreshPull=\"${24:ui:scrollerDeprecated Optional - String}\" pullToRefreshRelease=\"${25:ui:scrollerDeprecated Optional - String}\" pullToRefreshUpdating=\"${26:ui:scrollerDeprecated Optional - String}\" pullToRefreshSubtitle=\"${27:ui:scrollerDeprecated Optional - String}\" canRefresh=\"${28:ui:scrollerDeprecated Optional - Boolean}\" extendedPullContent=\"${29:ui:scrollerDeprecated Optional - Aura.Component[]}\" stopEventPropagation=\"${30:ui:scrollerDeprecated Optional - Boolean}\" checkDOMChanges=\"${31:ui:scrollerDeprecated Optional - Boolean}\" bindEventsToScroller=\"${32:ui:scrollerDeprecated Optional - Boolean}\">${33:Deprecated and replaced by ui:scroller.}</ui:scrollerDeprecated>"
      },
      {
         "trigger": "tag-ui-spinner\t$A.Tag",
         "contents": "ui:spinner isVisible=\"${1:ui:spinner Optional - Boolean}\">${2:A loading spinner to be used while the real component body is being loaded}</ui:spinner>"
      },
      {
         "trigger": "tag-ui-stamp\t$A.Tag",
         "contents": "ui:stamp severity=\"${1:ui:stamp Optional - String}\" title=\"${2:ui:stamp Optional - String}\" onclick=\"${3:ui:stamp Optional - Aura.Action}\">${4:Implements ui:visible.\nA decorated stamp containing text}</ui:stamp>"
      },
      {
         "trigger": "tag-ui-tab\t$A.Tag",
         "contents": "ui:tab class=\"${1:ui:tab Optional - String}\" title=\"${2:ui:tab Optional - String}\" name=\"${3:ui:tab Optional - String}\" icon=\"${4:ui:tab Optional - Aura.Component[]}\" scroll=\"${5:ui:tab Optional - Boolean}\" active=\"${6:ui:tab Optional - Boolean}\" iconClass=\"${7:ui:tab Optional - String}\" closable=\"${8:ui:tab Optional - Boolean}\" ariaControlId=\"${9:ui:tab Optional - String}\">${10:A single tab that is nested in a ui:tabset component.}</ui:tab>"
      },
      {
         "trigger": "tag-ui-tabBar\t$A.Tag",
         "contents": "ui:tabBar tabs=\"${1:ui:tabBar Optional - List}\" class=\"${2:ui:tabBar Optional - String}\" useOverflowMenu=\"${3:ui:tabBar Optional - Boolean}\" overflowLabel=\"${4:ui:tabBar Optional - String}\" barWidth=\"${5:ui:tabBar Optional - Integer}\" tabItemWidth=\"${6:ui:tabBar Optional - Integer}\" overflowData=\"${7:ui:tabBar Optional - Object}\">${8:A list wrapper for tabs in a ui:tabset component}</ui:tabBar>"
      },
      {
         "trigger": "tag-ui-tabItem\t$A.Tag",
         "contents": "ui:tabItem class=\"${1:ui:tabItem Optional - String}\" title=\"${2:ui:tabItem Optional - String}\" name=\"${3:ui:tabItem Optional - String}\" icon=\"${4:ui:tabItem Optional - Aura.Component[]}\" active=\"${5:ui:tabItem Optional - Boolean}\" hidden=\"${6:ui:tabItem Optional - Boolean}\" iconClass=\"${7:ui:tabItem Optional - String}\" closable=\"${8:ui:tabItem Optional - Boolean}\" ariaControlId=\"${9:ui:tabItem Optional - String}\">${10:A tab that is rendered by the ui:tabBar component}</ui:tabItem>"
      },
      {
         "trigger": "tag-ui-tabOverflowMenuItem\t$A.Tag",
         "contents": "ui:tabOverflowMenuItem class=\"${1:ui:tabOverflowMenuItem Optional - String}\" title=\"${2:ui:tabOverflowMenuItem Optional - String}\" icon=\"${3:ui:tabOverflowMenuItem Optional - Aura.Component[]}\" active=\"${4:ui:tabOverflowMenuItem Optional - Boolean}\" iconClass=\"${5:ui:tabOverflowMenuItem Optional - String}\" ariaControlId=\"${6:ui:tabOverflowMenuItem Optional - String}\" menuItems=\"${7:ui:tabOverflowMenuItem Optional - Object[]}\" menuItemCache=\"${8:ui:tabOverflowMenuItem Optional - Object}\" focusedItemName=\"${9:ui:tabOverflowMenuItem Optional - String}\">${10:A tab that is rendered by the ui:tabBar component for its overflow menu}</ui:tabOverflowMenuItem>"
      },
      {
         "trigger": "tag-ui-tabOverflowMenuList\t$A.Tag",
         "contents": "ui:tabOverflowMenuList>${2:An extension of ui:menuList to add custom keyboard interactions for a tab overflow menu}</ui:tabOverflowMenuList>"
      },
      {
         "trigger": "tag-ui-tabset\t$A.Tag",
         "contents": "ui:tabset tabs=\"${1:ui:tabset Optional - List}\" tabItems=\"${2:ui:tabset Optional - List}\" class=\"${3:ui:tabset Optional - String}\" lazyRenderTabs=\"${4:ui:tabset Optional - Boolean}\" useOverflowMenu=\"${5:ui:tabset Optional - Boolean}\" barWidth=\"${6:ui:tabset Optional - Integer}\" tabItemWidth=\"${7:ui:tabset Optional - Integer}\" overflowLabel=\"${8:ui:tabset Optional - String}\">${9:Implements ui:visible.\nA tab set that displays a list of tabs in an unordered list.}</ui:tabset>"
      },
      {
         "trigger": "tag-ui-timePicker\t$A.Tag",
         "contents": "ui:timePicker hours=\"${1:ui:timePicker Optional - Integer}\" is24HourFormat=\"${2:ui:timePicker Optional - Boolean}\" isValid=\"${3:ui:timePicker Optional - Boolean}\" minutes=\"${4:ui:timePicker Optional - Integer}\" visible=\"${5:ui:timePicker Optional - Boolean}\">${6:Implements ui:visible.\nA time picker which can be used in datePicker to select both date and time}</ui:timePicker>"
      },
      {
         "trigger": "tag-ui-toolbar\t$A.Tag",
         "contents": "ui:toolbar class=\"${1:ui:toolbar Optional - String}\">${2:A horizontal toolbar that is displayed as an HTML menu element.}</ui:toolbar>"
      },
      {
         "trigger": "tag-ui-tooltip\t$A.Tag",
         "contents": "ui:tooltip tooltipBody=\"${1:ui:tooltip Optional - String}\" disabled=\"${2:ui:tooltip Optional - Boolean}\" advanced=\"${3:ui:tooltip Optional - Boolean}\" trigger=\"${4:ui:tooltip Optional - String}\" triggerClass=\"${5:ui:tooltip Optional - String}\" isVisible=\"${6:ui:tooltip Optional - Boolean}\" fadeOut=\"${7:ui:tooltip Optional - Boolean}\" fadeIn=\"${8:ui:tooltip Optional - Boolean}\" fadeOutDuration=\"${9:ui:tooltip Optional - Integer}\" fadeInDuration=\"${10:ui:tooltip Optional - Integer}\" delay=\"${11:ui:tooltip Optional - Integer}\" class=\"${12:ui:tooltip Optional - String}\" tabIndex=\"${13:ui:tooltip Optional - Integer}\" direction=\"${14:ui:tooltip Optional - String}\" domId=\"${15:ui:tooltip Optional - String}\">${16:}</ui:tooltip>"
      },
      {
         "trigger": "tag-ui-tree\t$A.Tag",
         "contents": "ui:tree nodes=\"${1:ui:tree Optional - java://List<aura.components.ui.TreeNode>}\" class=\"${2:ui:tree Optional - String}\" activeNode=\"${3:ui:tree Optional - Aura.Component}\">${4:}</ui:tree>"
      },
      {
         "trigger": "tag-ui-treeNode\t$A.Tag",
         "contents": "ui:treeNode href=\"${1:ui:treeNode Optional - String}\" title=\"${2:ui:treeNode Optional - String}\" leafClass=\"${3:ui:treeNode Optional - String}\" class=\"${4:ui:treeNode Optional - String}\" expanded=\"${5:ui:treeNode Optional - Boolean}\" active=\"${6:ui:treeNode Optional - Boolean}\" hidden=\"${7:ui:treeNode Optional - Boolean}\" item=\"${8:ui:treeNode Optional - java://org.auraframework.components.ui.TreeNode}\">${9:Implements ui:visitable.\n}</ui:treeNode>"
      },
      {
         "trigger": "tag-ui-underConstruction\t$A.Tag",
         "contents": "ui:underConstruction short=\"${1:ui:underConstruction Optional - Boolean}\">${2:Displays “Unsupported” if the short attribute is set to true.}</ui:underConstruction>"
      },
      {
         "trigger": "tag-ui-vbox\t$A.Tag",
         "contents": "ui:vbox north=\"${1:ui:vbox Optional - Aura.Component[]}\" south=\"${2:ui:vbox Optional - Aura.Component[]}\" centerClass=\"${3:ui:vbox Optional - String}\">${4:This container component creates a vertical box area on a page with simple wrapper HTML.}</ui:vbox>"
      },
      {
         "trigger": "tag-ui-virtualDataGrid\t$A.Tag",
         "contents": "ui:virtualDataGrid sortBy=\"${1:ui:virtualDataGrid Optional - String}\" class=\"${2:ui:virtualDataGrid Optional - String}\" items=\"${3:ui:virtualDataGrid Optional - List}\" headerColumns=\"${4:ui:virtualDataGrid Optional - Aura.Component[]}\" columns=\"${5:ui:virtualDataGrid Optional - Aura.ComponentDefRef[]}\" columnsEdit=\"${6:ui:virtualDataGrid Optional - Aura.ComponentDefRef[]}\" dataModel=\"${7:ui:virtualDataGrid Optional - Aura.Component[]}\" _dirty=\"${8:ui:virtualDataGrid Optional - Integer}\" itemVar=\"${9:ui:virtualDataGrid Optional - String}\" _sortBy=\"${10:ui:virtualDataGrid Optional - String}\" fixedHeader=\"${11:ui:virtualDataGrid Optional - Boolean}\">${12:}</ui:virtualDataGrid>"
      },
      {
         "trigger": "tag-ui-virtualList\t$A.Tag",
         "contents": "ui:virtualList itemTemplate=\"${2:ui:virtualList Required - Aura.ComponentDefRef[]}\" itemVar=\"${5:ui:virtualList Required - String}\" _dirty=\"${1:ui:virtualList Optional - Integer}\" items=\"${3:ui:virtualList Optional - Object[]}\" forceRender=\"${4:ui:virtualList Optional - Boolean}\" dataProvider=\"${6:ui:virtualList Optional - Aura.Component[]}\">${7:Implements ui:scrollerEmbeddable.\nAura Virtual List}</ui:virtualList>"
      },
      {
         "trigger": "tag-uiExamples-autocompleteDataProvider\t$A.Tag",
         "contents": "uiExamples:autocompleteDataProvider size=\"${1:uiExamples:autocompleteDataProvider Optional - Integer}\">${2:}</uiExamples:autocompleteDataProvider>"
      },
      {
         "trigger": "tag-uiExamples-autocompleteExample\t$A.Tag",
         "contents": "uiExamples:autocompleteExample autocompleteValue=\"${1:uiExamples:autocompleteExample Optional - String}\" autocompleteExtendedOptsValue=\"${2:uiExamples:autocompleteExample Optional - String}\" classes=\"${3:uiExamples:autocompleteExample Optional - Boolean}\">${4:}</uiExamples:autocompleteExample>"
      },
      {
         "trigger": "tag-uiExamples-autocompleteOptionExample\t$A.Tag",
         "contents": "uiExamples:autocompleteOptionExample>${2:This component provides a custom representation of a list item in an ui:autocomplete component.}</uiExamples:autocompleteOptionExample>"
      },
      {
         "trigger": "tag-uiExamples-autocompleteOptionExampleExtended\t$A.Tag",
         "contents": "uiExamples:autocompleteOptionExampleExtended>${2:This component provides a custom representation of a list item in an ui:autocomplete component.}</uiExamples:autocompleteOptionExampleExtended>"
      },
      {
         "trigger": "tag-uiExamples-buttonExample\t$A.Tag",
         "contents": "uiExamples:buttonExample>${2:}</uiExamples:buttonExample>"
      },
      {
         "trigger": "tag-uiExamples-checkbox\t$A.Tag",
         "contents": "uiExamples:checkbox myBool=\"${1:uiExamples:checkbox Optional - Boolean}\">${2:}</uiExamples:checkbox>"
      },
      {
         "trigger": "tag-uiExamples-currency\t$A.Tag",
         "contents": "uiExamples:currency>${2:}</uiExamples:currency>"
      },
      {
         "trigger": "tag-uiExamples-dataGridDynamicColumns\t$A.Tag",
         "contents": "uiExamples:dataGridDynamicColumns sortBy=\"${1:uiExamples:dataGridDynamicColumns Optional - String}\" pageSize=\"${2:uiExamples:dataGridDynamicColumns Optional - Integer}\" currentPage=\"${3:uiExamples:dataGridDynamicColumns Optional - Integer}\" totalItems=\"${4:uiExamples:dataGridDynamicColumns Optional - Integer}\" index=\"${5:uiExamples:dataGridDynamicColumns Optional - Integer}\" count=\"${6:uiExamples:dataGridDynamicColumns Optional - Integer}\">${7:}</uiExamples:dataGridDynamicColumns>"
      },
      {
         "trigger": "tag-uiExamples-dataGridKitchenSink\t$A.Tag",
         "contents": "uiExamples:dataGridKitchenSink mode=\"${1:uiExamples:dataGridKitchenSink Optional - String}\" sortBy=\"${2:uiExamples:dataGridKitchenSink Optional - String}\" pageSize=\"${3:uiExamples:dataGridKitchenSink Optional - Integer}\" currentPage=\"${4:uiExamples:dataGridKitchenSink Optional - Integer}\" totalItems=\"${5:uiExamples:dataGridKitchenSink Optional - Integer}\" index=\"${6:uiExamples:dataGridKitchenSink Optional - Integer}\" count=\"${7:uiExamples:dataGridKitchenSink Optional - Integer}\" className=\"${8:uiExamples:dataGridKitchenSink Optional - String}\" rowIndex=\"${9:uiExamples:dataGridKitchenSink Optional - Integer}\" gridItems=\"${10:uiExamples:dataGridKitchenSink Optional - List}\" gridSelectedItems=\"${11:uiExamples:dataGridKitchenSink Optional - List}\">${12:}</uiExamples:dataGridKitchenSink>"
      },
      {
         "trigger": "tag-uiExamples-dataGridKitchenSinkDataProvider\t$A.Tag",
         "contents": "uiExamples:dataGridKitchenSinkDataProvider sortBy=\"${1:uiExamples:dataGridKitchenSinkDataProvider Optional - String}\" empty=\"${2:uiExamples:dataGridKitchenSinkDataProvider Optional - Boolean}\" throwError=\"${3:uiExamples:dataGridKitchenSinkDataProvider Optional - Boolean}\">${4:}</uiExamples:dataGridKitchenSinkDataProvider>"
      },
      {
         "trigger": "tag-uiExamples-dataProviderExample\t$A.Tag",
         "contents": "uiExamples:dataProviderExample>${2:Implements ui:pagingInterface, ui:scrollerEmbeddable.\n}</uiExamples:dataProviderExample>"
      },
      {
         "trigger": "tag-uiExamples-date\t$A.Tag",
         "contents": "uiExamples:date today=\"${1:uiExamples:date Optional - Date}\">${2:}</uiExamples:date>"
      },
      {
         "trigger": "tag-uiExamples-datePicker\t$A.Tag",
         "contents": "uiExamples:datePicker selectedDate=\"${1:uiExamples:datePicker Optional - Date}\">${2:}</uiExamples:datePicker>"
      },
      {
         "trigger": "tag-uiExamples-datetime\t$A.Tag",
         "contents": "uiExamples:datetime today=\"${1:uiExamples:datetime Optional - Date}\">${2:}</uiExamples:datetime>"
      },
      {
         "trigger": "tag-uiExamples-detailPopover\t$A.Tag",
         "contents": "uiExamples:detailPopover>${2:}</uiExamples:detailPopover>"
      },
      {
         "trigger": "tag-uiExamples-dragAndDropExample\t$A.Tag",
         "contents": "uiExamples:dragAndDropExample _context1=\"${1:uiExamples:dragAndDropExample Optional - Object}\" _context2=\"${2:uiExamples:dragAndDropExample Optional - Object}\" _context3=\"${3:uiExamples:dragAndDropExample Optional - Object}\" _accessibilityComponent=\"${4:uiExamples:dragAndDropExample Optional - String}\">${5:}</uiExamples:dragAndDropExample>"
      },
      {
         "trigger": "tag-uiExamples-dragAndDropProvider\t$A.Tag",
         "contents": "uiExamples:dragAndDropProvider prefix=\"${1:uiExamples:dragAndDropProvider Optional - String}\" count=\"${2:uiExamples:dragAndDropProvider Optional - Integer}\">${3:}</uiExamples:dragAndDropProvider>"
      },
      {
         "trigger": "tag-uiExamples-email\t$A.Tag",
         "contents": "uiExamples:email>${2:}</uiExamples:email>"
      },
      {
         "trigger": "tag-uiExamples-infiniteDataProvider\t$A.Tag",
         "contents": "uiExamples:infiniteDataProvider listType=\"${1:uiExamples:infiniteDataProvider Optional - String}\">${2:}</uiExamples:infiniteDataProvider>"
      },
      {
         "trigger": "tag-uiExamples-infiniteList\t$A.Tag",
         "contents": "uiExamples:infiniteList>${2:}</uiExamples:infiniteList>"
      },
      {
         "trigger": "tag-uiExamples-infiniteListDataProvider\t$A.Tag",
         "contents": "uiExamples:infiniteListDataProvider>${2:}</uiExamples:infiniteListDataProvider>"
      },
      {
         "trigger": "tag-uiExamples-infiniteListRow\t$A.Tag",
         "contents": "uiExamples:infiniteListRow item=\"${1:uiExamples:infiniteListRow Optional - Object}\">${2:}</uiExamples:infiniteListRow>"
      },
      {
         "trigger": "tag-uiExamples-inputExample\t$A.Tag",
         "contents": "uiExamples:inputExample today=\"${1:uiExamples:inputExample Optional - Date}\" deadline=\"${2:uiExamples:inputExample Optional - Date}\" display=\"${3:uiExamples:inputExample Optional - Boolean}\">${4:}</uiExamples:inputExample>"
      },
      {
         "trigger": "tag-uiExamples-inputNumberExample\t$A.Tag",
         "contents": "uiExamples:inputNumberExample>${2:}</uiExamples:inputNumberExample>"
      },
      {
         "trigger": "tag-uiExamples-inputTextExample\t$A.Tag",
         "contents": "uiExamples:inputTextExample>${2:}</uiExamples:inputTextExample>"
      },
      {
         "trigger": "tag-uiExamples-iterationExample\t$A.Tag",
         "contents": "uiExamples:iterationExample>${2:}</uiExamples:iterationExample>"
      },
      {
         "trigger": "tag-uiExamples-libraryExample\t$A.Tag",
         "contents": "uiExamples:libraryExample message=\"${1:uiExamples:libraryExample Optional - String}\">${2:}</uiExamples:libraryExample>"
      },
      {
         "trigger": "tag-uiExamples-mobileViewport\t$A.Tag",
         "contents": "uiExamples:mobileViewport>${2:A component to remove the boilerplate neccessary for a mobile demo.}</uiExamples:mobileViewport>"
      },
      {
         "trigger": "tag-uiExamples-modalContent\t$A.Tag",
         "contents": "uiExamples:modalContent>${2:}</uiExamples:modalContent>"
      },
      {
         "trigger": "tag-uiExamples-outputExample\t$A.Tag",
         "contents": "uiExamples:outputExample myText=\"${1:uiExamples:outputExample Optional - String}\" myNum=\"${2:uiExamples:outputExample Optional - Decimal}\" myCurr=\"${3:uiExamples:outputExample Optional - Decimal}\" myBool=\"${4:uiExamples:outputExample Optional - Boolean}\" myDate=\"${5:uiExamples:outputExample Optional - Date}\" myDateTime=\"${6:uiExamples:outputExample Optional - Date}\" myTextArea=\"${7:uiExamples:outputExample Optional - String}\" myURL=\"${8:uiExamples:outputExample Optional - String}\">${9:}</uiExamples:outputExample>"
      },
      {
         "trigger": "tag-uiExamples-panelContent\t$A.Tag",
         "contents": "uiExamples:panelContent class=\"${1:uiExamples:panelContent Optional - String}\">${2:}</uiExamples:panelContent>"
      },
      {
         "trigger": "tag-uiExamples-panelDialogExample\t$A.Tag",
         "contents": "uiExamples:panelDialogExample>${2:}</uiExamples:panelDialogExample>"
      },
      {
         "trigger": "tag-uiExamples-panelFooter\t$A.Tag",
         "contents": "uiExamples:panelFooter>${2:}</uiExamples:panelFooter>"
      },
      {
         "trigger": "tag-uiExamples-panelHeader\t$A.Tag",
         "contents": "uiExamples:panelHeader>${2:}</uiExamples:panelHeader>"
      },
      {
         "trigger": "tag-uiExamples-panelPositioningExample\t$A.Tag",
         "contents": "uiExamples:panelPositioningExample>${2:}</uiExamples:panelPositioningExample>"
      },
      {
         "trigger": "tag-uiExamples-phone\t$A.Tag",
         "contents": "uiExamples:phone>${2:}</uiExamples:phone>"
      },
      {
         "trigger": "tag-uiExamples-popupExample\t$A.Tag",
         "contents": "uiExamples:popupExample>${2:}</uiExamples:popupExample>"
      },
      {
         "trigger": "tag-uiExamples-radio\t$A.Tag",
         "contents": "uiExamples:radio stages=\"${1:uiExamples:radio Optional - String[]}\">${2:}</uiExamples:radio>"
      },
      {
         "trigger": "tag-uiExamples-renderIfExample\t$A.Tag",
         "contents": "uiExamples:renderIfExample display=\"${1:uiExamples:renderIfExample Optional - Boolean}\">${2:}</uiExamples:renderIfExample>"
      },
      {
         "trigger": "tag-uiExamples-secret\t$A.Tag",
         "contents": "uiExamples:secret>${2:}</uiExamples:secret>"
      },
      {
         "trigger": "tag-uiExamples-tabsetExample\t$A.Tag",
         "contents": "uiExamples:tabsetExample>${2:}</uiExamples:tabsetExample>"
      },
      {
         "trigger": "tag-uiExamples-text\t$A.Tag",
         "contents": "uiExamples:text>${2:}</uiExamples:text>"
      },
      {
         "trigger": "tag-uiExamples-textarea\t$A.Tag",
         "contents": "uiExamples:textarea>${2:}</uiExamples:textarea>"
      },
      {
         "trigger": "tag-uiExamples-tooltipExample\t$A.Tag",
         "contents": "uiExamples:tooltipExample>${2:}</uiExamples:tooltipExample>"
      },
      {
         "trigger": "tag-uiExamples-url\t$A.Tag",
         "contents": "uiExamples:url>${2:}</uiExamples:url>"
      },
      {
         "trigger": "tag-uiExamples-virtualDataGridKitchenSink\t$A.Tag",
         "contents": "uiExamples:virtualDataGridKitchenSink sortBy=\"${1:uiExamples:virtualDataGridKitchenSink Optional - String}\" pageSize=\"${2:uiExamples:virtualDataGridKitchenSink Optional - Integer}\" currentPage=\"${3:uiExamples:virtualDataGridKitchenSink Optional - Integer}\" totalItems=\"${4:uiExamples:virtualDataGridKitchenSink Optional - Integer}\" index=\"${5:uiExamples:virtualDataGridKitchenSink Optional - Integer}\" count=\"${6:uiExamples:virtualDataGridKitchenSink Optional - Integer}\" className=\"${7:uiExamples:virtualDataGridKitchenSink Optional - String}\" rowIndex=\"${8:uiExamples:virtualDataGridKitchenSink Optional - Integer}\" gridItems=\"${9:uiExamples:virtualDataGridKitchenSink Optional - List}\" gridSelectedItems=\"${10:uiExamples:virtualDataGridKitchenSink Optional - List}\" provideNoData=\"${11:uiExamples:virtualDataGridKitchenSink Optional - Boolean}\">${12:}</uiExamples:virtualDataGridKitchenSink>"
      }
   ]
}