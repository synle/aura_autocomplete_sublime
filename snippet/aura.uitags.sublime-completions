{
   "scope": "meta.tag.xml",
   "completions": [
      {
         "trigger": "tag-aura-component\tSimple",
         "contents": "aura:component$1>${2:Implements aura:rootComponent.\tThe root of the component hierarchy. Provides a default rendering implementation.}</aura:component>"
      },
      {
         "trigger": "tag-aura-component\tFull",
         "contents": "aura:component body=\"${1:aura:component - Optional - Aura.Component[]}\">${2:Implements aura:rootComponent.\tThe root of the component hierarchy. Provides a default rendering implementation.}</aura:component>"
      },
      {
         "trigger": "tag-aura-debug\tSimple",
         "contents": "aura:debug$1>${2:The Aura debug tool opens a separate browser window and outputs debug information about an Aura component. The debug tool has the following tabs: Errors, Warnings, Components, Events, Storage, Accessibility, and Console. To launch the Aura Debug tool, add the query string aura.debugtool=true after the URL of the Aura component file that you are viewing in your browser. For example: http://localhost:8080/auranote/noteList.cmp?aura.debugtool=true. To display additional statistics in the Components tab, append the query string aura.mode=STATS to the URL. For example: http://localhost:8080/auranote/noteList.cmp?aura.debugtool=true&aura.mode=STATS. You must disable the popup blocking feature of your web browser to use the debug tool.}</aura:debug>"
      },
      {
         "trigger": "tag-aura-debug\tFull",
         "contents": "aura:debug errorsData=\"${1:aura:debug - Optional - String}\" warningsData=\"${2:aura:debug - Optional - String}\" cmpData=\"${3:aura:debug - Optional - String}\" eventData=\"${4:aura:debug - Optional - String}\" storageData=\"${5:aura:debug - Optional - String}\" consoleData=\"${6:aura:debug - Optional - String}\" storageName=\"${7:aura:debug - Optional - String}\" accessibilityData=\"${8:aura:debug - Optional - String}\">${9:The Aura debug tool opens a separate browser window and outputs debug information about an Aura component. The debug tool has the following tabs: Errors, Warnings, Components, Events, Storage, Accessibility, and Console. To launch the Aura Debug tool, add the query string aura.debugtool=true after the URL of the Aura component file that you are viewing in your browser. For example: http://localhost:8080/auranote/noteList.cmp?aura.debugtool=true. To display additional statistics in the Components tab, append the query string aura.mode=STATS to the URL. For example: http://localhost:8080/auranote/noteList.cmp?aura.debugtool=true&aura.mode=STATS. You must disable the popup blocking feature of your web browser to use the debug tool.}</aura:debug>"
      },
      {
         "trigger": "tag-aura-embeddedTemplate\tSimple",
         "contents": "aura:embeddedTemplate$1>${2:A server-rendered template used to bootstrap the loading of the Aura framework and an application or component embedded in other containers, such as Visualforce, Siteforce, and legacy Salesforce UI.}</aura:embeddedTemplate>"
      },
      {
         "trigger": "tag-aura-embeddedTemplate\tFull",
         "contents": "aura:embeddedTemplate auraStyleTags=\"${1:aura:embeddedTemplate - Optional - String}\" auraScriptTags=\"${2:aura:embeddedTemplate - Optional - String}\" auraInit=\"${3:aura:embeddedTemplate - Optional - String}\" auraInitBlock=\"${4:aura:embeddedTemplate - Optional - String}\" extraStyleTags=\"${5:aura:embeddedTemplate - Optional - Aura.Component[]}\" extraScriptTags=\"${6:aura:embeddedTemplate - Optional - Aura.Component[]}\" extraMetaTags=\"${7:aura:embeddedTemplate - Optional - Aura.Component[]}\">${8:A server-rendered template used to bootstrap the loading of the Aura framework and an application or component embedded in other containers, such as Visualforce, Siteforce, and legacy Salesforce UI.}</aura:embeddedTemplate>"
      },
      {
         "trigger": "tag-aura-expression\tSimple",
         "contents": "aura:expression$1>${2:Implements aura:rootComponent.\tRenders the value to which an expression evaluates. Creates an instance of this component which renders the\n                        referenced \"property reference value\" set to the value attribute when expressions are found in free text or markup.}</aura:expression>"
      },
      {
         "trigger": "tag-aura-expression\tFull",
         "contents": "aura:expression value=\"${1:aura:expression - Optional - String}\">${2:Implements aura:rootComponent.\tRenders the value to which an expression evaluates. Creates an instance of this component which renders the\n                        referenced \"property reference value\" set to the value attribute when expressions are found in free text or markup.}</aura:expression>"
      },
      {
         "trigger": "tag-aura-html\tSimple",
         "contents": "aura:html$1>${2:Implements aura:rootComponent.\tA meta component that represents all html elements.  Any html found in your markup causes the creation of one of these.}</aura:html>"
      },
      {
         "trigger": "tag-aura-html\tFull",
         "contents": "aura:html body=\"${1:aura:html - Optional - Aura.Component[]}\" tag=\"${2:aura:html - Optional - String}\" HTMLAttributes=\"${3:aura:html - Optional - Map}\">${4:Implements aura:rootComponent.\tA meta component that represents all html elements.  Any html found in your markup causes the creation of one of these.}</aura:html>"
      },
      {
         "trigger": "tag-aura-if\tSimple",
         "contents": "aura:if$1>${2:Implements aura:rootComponent.\tConditionally instantiates and renders either the body or the components in the else attribute.}</aura:if>"
      },
      {
         "trigger": "tag-aura-if\tFull",
         "contents": "aura:if isTrue=\"${1:aura:if - Required - Boolean}\" body=\"${2:aura:if - Required - Aura.ComponentDefRef[]}\" else=\"${3:aura:if - Optional - Aura.ComponentDefRef[]}\" template=\"${4:aura:if - Optional - Aura.ComponentDefRef[]}\">${5:Implements aura:rootComponent.\tConditionally instantiates and renders either the body or the components in the else attribute.}</aura:if>"
      },
      {
         "trigger": "tag-aura-include\tSimple",
         "contents": "aura:include$1>${2:Only usable in the body of aura:library (.lib) files. This attribute is used to specifiy the Javascript files that are loaded by the library and which file depend on which.}</aura:include>"
      },
      {
         "trigger": "tag-aura-include\tFull",
         "contents": "aura:include name=\"${1:aura:include - Required - String}\" imports=\"${2:aura:include - Required - String}\">${3:Only usable in the body of aura:library (.lib) files. This attribute is used to specifiy the Javascript files that are loaded by the library and which file depend on which.}</aura:include>"
      },
      {
         "trigger": "tag-aura-integrationServiceTemplate\tSimple",
         "contents": "aura:integrationServiceTemplate$1>${2:A server-rendered template used to bootstrap the loading of the Aura framework and an application or component embedded in other containers, such as Visualforce, Siteforce, and legacy Salesforce UI.}</aura:integrationServiceTemplate>"
      },
      {
         "trigger": "tag-aura-integrationServiceTemplate\tFull",
         "contents": "aura:integrationServiceTemplate auraStyleTags=\"${1:aura:integrationServiceTemplate - Optional - String}\" auraScriptTags=\"${2:aura:integrationServiceTemplate - Optional - String}\" auraInit=\"${3:aura:integrationServiceTemplate - Optional - String}\" auraInitBlock=\"${4:aura:integrationServiceTemplate - Optional - String}\" extraStyleTags=\"${5:aura:integrationServiceTemplate - Optional - Aura.Component[]}\" extraScriptTags=\"${6:aura:integrationServiceTemplate - Optional - Aura.Component[]}\" extraMetaTags=\"${7:aura:integrationServiceTemplate - Optional - Aura.Component[]}\">${8:A server-rendered template used to bootstrap the loading of the Aura framework and an application or component embedded in other containers, such as Visualforce, Siteforce, and legacy Salesforce UI.}</aura:integrationServiceTemplate>"
      },
      {
         "trigger": "tag-aura-iteration\tSimple",
         "contents": "aura:iteration$1>${2:Implements aura:rootComponent.\tRenders a view of a collection of items. Supports iterations containing components that can be created exclusively on the client-side.}</aura:iteration>"
      },
      {
         "trigger": "tag-aura-iteration\tFull",
         "contents": "aura:iteration items=\"${1:aura:iteration - Required - List}\" var=\"${2:aura:iteration - Required - String}\" body=\"${3:aura:iteration - Required - Aura.ComponentDefRef[]}\" indexVar=\"${4:aura:iteration - Optional - String}\" start=\"${5:aura:iteration - Optional - Integer}\" end=\"${6:aura:iteration - Optional - Integer}\" loaded=\"${7:aura:iteration - Optional - Boolean}\" template=\"${8:aura:iteration - Optional - Aura.ComponentDefRef[]}\" forceServer=\"${9:aura:iteration - Optional - Boolean}\">${10:Implements aura:rootComponent.\tRenders a view of a collection of items. Supports iterations containing components that can be created exclusively on the client-side.}</aura:iteration>"
      },
      {
         "trigger": "tag-aura-label\tSimple",
         "contents": "aura:label$1>${2:Represents a label that accepts a dynamic value.}</aura:label>"
      },
      {
         "trigger": "tag-aura-label\tFull",
         "contents": "aura:label value=\"${1:aura:label - Optional - String}\">${2:Represents a label that accepts a dynamic value.}</aura:label>"
      },
      {
         "trigger": "tag-aura-placeholder\tSimple",
         "contents": "aura:placeholder$1>${2:}</aura:placeholder>"
      },
      {
         "trigger": "tag-aura-placeholder\tFull",
         "contents": "aura:placeholder body=\"${1:aura:placeholder - Optional - Aura.Component[]}\" refDescriptor=\"${2:aura:placeholder - Optional - java://org.auraframework.def.DefDescriptor}\" attributes=\"${3:aura:placeholder - Optional - Object}\" loaded=\"${4:aura:placeholder - Optional - Boolean}\" exclusive=\"${5:aura:placeholder - Optional - Boolean}\">${6:}</aura:placeholder>"
      },
      {
         "trigger": "tag-aura-renderIf\tSimple",
         "contents": "aura:renderIf$1>${2:This component allows you to conditionally render its contents. It renders its body only if isTrue evaluates to true. The else attribute allows you to render an alternative when isTrue evaluates to false.}</aura:renderIf>"
      },
      {
         "trigger": "tag-aura-renderIf\tFull",
         "contents": "aura:renderIf isTrue=\"${1:aura:renderIf - Required - Boolean}\" else=\"${2:aura:renderIf - Optional - Aura.Component[]}\">${3:This component allows you to conditionally render its contents. It renders its body only if isTrue evaluates to true. The else attribute allows you to render an alternative when isTrue evaluates to false.}</aura:renderIf>"
      },
      {
         "trigger": "tag-aura-template\tSimple",
         "contents": "aura:template$1>${2:Default template used to bootstrap Aura framework. To use another template, extend aura:template and set attributes using aura:set.}</aura:template>"
      },
      {
         "trigger": "tag-aura-template\tFull",
         "contents": "aura:template title=\"${1:aura:template - Optional - String}\" auraStyleTags=\"${2:aura:template - Optional - String}\" auraScriptTags=\"${3:aura:template - Optional - String}\" auraBaseScriptTags=\"${4:aura:template - Optional - String}\" auraNamespacesScriptTags=\"${5:aura:template - Optional - String}\" auraResetCss=\"${6:aura:template - Optional - String}\" auraInlineStyle=\"${7:aura:template - Optional - String}\" auraInit=\"${8:aura:template - Optional - String}\" auraInitSync=\"${9:aura:template - Optional - String}\" auraPreInitBlock=\"${10:aura:template - Optional - Aura.Component[]}\" auraInitBlock=\"${11:aura:template - Optional - Aura.Component[]}\" autoInitialize=\"${12:aura:template - Optional - String}\" autoInitializeSync=\"${13:aura:template - Optional - String}\" doctype=\"${14:aura:template - Optional - String}\" loadingText=\"${15:aura:template - Optional - String}\" errorTitle=\"${16:aura:template - Optional - String}\" errorMessage=\"${17:aura:template - Optional - String}\" defaultBodyClass=\"${18:aura:template - Optional - String}\" bodyClass=\"${19:aura:template - Optional - String}\" extraStyleTags=\"${20:aura:template - Optional - Aura.Component[]}\" extraScriptTags=\"${21:aura:template - Optional - Aura.Component[]}\" extraMetaTags=\"${22:aura:template - Optional - Aura.Component[]}\" normalizeCss=\"${23:aura:template - Optional - Boolean}\" forceError=\"${24:aura:template - Optional - Boolean}\" manifest=\"${25:aura:template - Optional - String}\" lastMod=\"${26:aura:template - Optional - String}\" afterAuraInit=\"${27:aura:template - Optional - String}\" inlineStyle=\"${28:aura:template - Optional - Aura.Component[]}\" appcacheProgressBarStyle=\"${29:aura:template - Optional - Aura.Component[]}\">${30:Default template used to bootstrap Aura framework. To use another template, extend aura:template and set attributes using aura:set.}</aura:template>"
      },
      {
         "trigger": "tag-aura-text\tSimple",
         "contents": "aura:text$1>${2:Implements aura:rootComponent.\tRenders plain text.  When any free text (not a tag or attribute value) is found in markup, an instance of this component is created with the value attribute set to the text found in the markup.}</aura:text>"
      },
      {
         "trigger": "tag-aura-text\tFull",
         "contents": "aura:text value=\"${1:aura:text - Optional - String}\" truncate=\"${2:aura:text - Optional - Integer}\" truncateByWord=\"${3:aura:text - Optional - Boolean}\" ellipsis=\"${4:aura:text - Optional - Boolean}\">${5:Implements aura:rootComponent.\tRenders plain text.  When any free text (not a tag or attribute value) is found in markup, an instance of this component is created with the value attribute set to the text found in the markup.}</aura:text>"
      },
      {
         "trigger": "tag-aura-unescapedHtml\tSimple",
         "contents": "aura:unescapedHtml$1>${2:The value assigned to this component will be rendered as-is, without altering its contents. It's intended for outputting pre-formatted HTML, for example, where the formatting is arbitrary, or expensive to calculate. The body of this component is ignored, and won't be rendered. Warning: this component outputs value as unescaped HTML, which introduces the possibility of security vulnerabilities in your code. You must sanitize user input before rendering it unescaped, or you will create a cross-site scripting (XSS) vulnerability. Only use <aura:unescapedHtml> with trusted or sanitized sources of data.}</aura:unescapedHtml>"
      },
      {
         "trigger": "tag-aura-unescapedHtml\tFull",
         "contents": "aura:unescapedHtml body=\"${1:aura:unescapedHtml - Optional - Aura.Component[]}\" value=\"${2:aura:unescapedHtml - Optional - String}\">${3:The value assigned to this component will be rendered as-is, without altering its contents. It's intended for outputting pre-formatted HTML, for example, where the formatting is arbitrary, or expensive to calculate. The body of this component is ignored, and won't be rendered. Warning: this component outputs value as unescaped HTML, which introduces the possibility of security vulnerabilities in your code. You must sanitize user input before rendering it unescaped, or you will create a cross-site scripting (XSS) vulnerability. Only use <aura:unescapedHtml> with trusted or sanitized sources of data.}</aura:unescapedHtml>"
      },
      {
         "trigger": "tag-auraStorage-fuelGauge\tSimple",
         "contents": "auraStorage:fuelGauge$1>${2:}</auraStorage:fuelGauge>"
      },
      {
         "trigger": "tag-auraStorage-fuelGauge\tFull",
         "contents": "auraStorage:fuelGauge storageName=\"${1:auraStorage:fuelGauge - Required - String}\" value=\"${2:auraStorage:fuelGauge - Optional - Decimal}\" enabled=\"${3:auraStorage:fuelGauge - Optional - Boolean}\" implementation=\"${4:auraStorage:fuelGauge - Optional - String}\">${5:}</auraStorage:fuelGauge>"
      },
      {
         "trigger": "tag-auraStorage-init\tSimple",
         "contents": "auraStorage:init$1>${2:}</auraStorage:init>"
      },
      {
         "trigger": "tag-auraStorage-init\tFull",
         "contents": "auraStorage:init name=\"${1:auraStorage:init - Required - String}\" persistent=\"${2:auraStorage:init - Optional - Boolean}\" secure=\"${3:auraStorage:init - Optional - Boolean}\" clearStorageOnInit=\"${4:auraStorage:init - Optional - Boolean}\" defaultExpiration=\"${5:auraStorage:init - Optional - Integer}\" defaultAutoRefreshInterval=\"${6:auraStorage:init - Optional - Integer}\" maxSize=\"${7:auraStorage:init - Optional - Integer}\" debugLoggingEnabled=\"${8:auraStorage:init - Optional - Boolean}\" requireUseStorageQueryParam=\"${9:auraStorage:init - Optional - Boolean}\" version=\"${10:auraStorage:init - Optional - String}\">${11:}</auraStorage:init>"
      },
      {
         "trigger": "tag-auraadmin-cacheView\tSimple",
         "contents": "auraadmin:cacheView$1>${2:}</auraadmin:cacheView>"
      },
      {
         "trigger": "tag-auraadmin-cacheView\tFull",
         "contents": "auraadmin:cacheView name=\"${1:auraadmin:cacheView - Required - String}\" data=\"${2:auraadmin:cacheView - Required - Map}\" expanded=\"${3:auraadmin:cacheView - Optional - boolean}\" showDefs=\"${4:auraadmin:cacheView - Optional - boolean}\">${5:}</auraadmin:cacheView>"
      },
      {
         "trigger": "tag-auraadmin-cachingRegistryView\tSimple",
         "contents": "auraadmin:cachingRegistryView$1>${2:}</auraadmin:cachingRegistryView>"
      },
      {
         "trigger": "tag-auraadmin-cachingRegistryView\tFull",
         "contents": "auraadmin:cachingRegistryView expanded=\"${1:auraadmin:cachingRegistryView - Optional - boolean}\">${2:}</auraadmin:cachingRegistryView>"
      },
      {
         "trigger": "tag-auraadmin-counterBeans\tSimple",
         "contents": "auraadmin:counterBeans$1>${2:}</auraadmin:counterBeans>"
      },
      {
         "trigger": "tag-auraadmin-counterBeans\tFull",
         "contents": "auraadmin:counterBeans beans=\"${1:auraadmin:counterBeans - Optional - List}\">${2:}</auraadmin:counterBeans>"
      },
      {
         "trigger": "tag-auraadmin-registryView\tSimple",
         "contents": "auraadmin:registryView$1>${2:}</auraadmin:registryView>"
      },
      {
         "trigger": "tag-auraadmin-registryView\tFull",
         "contents": "auraadmin:registryView registry=\"${1:auraadmin:registryView - Required - Map}\" buttons=\"${2:auraadmin:registryView - Optional - Aura.Component[]}\">${3:}</auraadmin:registryView>"
      },
      {
         "trigger": "tag-auradev-blankTemplate\tSimple",
         "contents": "auradev:blankTemplate$1>${2:}</auradev:blankTemplate>"
      },
      {
         "trigger": "tag-auradev-blankTemplate\tFull",
         "contents": "auradev:blankTemplate>${1:}</auradev:blankTemplate>"
      },
      {
         "trigger": "tag-auradev-componentClass\tSimple",
         "contents": "auradev:componentClass$1>${2:Renders the concrete javascript class for a component.}</auradev:componentClass>"
      },
      {
         "trigger": "tag-auradev-componentClass\tFull",
         "contents": "auradev:componentClass fullyQualifiedName=\"${1:auradev:componentClass - Required - String}\" superFullyQualifiedName=\"${2:auradev:componentClass - Required - String}\" className=\"${3:auradev:componentClass - Required - String}\" superClassName=\"${4:auradev:componentClass - Required - String}\" helperProperties=\"${5:auradev:componentClass - Required - java://List<org.auraframework.impl.ServerServiceImpl.HelperInfo>}\" renderMethods=\"${6:auradev:componentClass - Required - java://List<org.auraframework.util.json.JsFunction>}\" renderMethodStubs=\"${7:auradev:componentClass - Required - String[]}\" superRenderMethodNames=\"${8:auradev:componentClass - Required - java://List<org.auraframework.impl.ServerServiceImpl.RerenderInfo>}\" rootComponent=\"${9:auradev:componentClass - Required - Boolean}\">${10:Renders the concrete javascript class for a component.}</auradev:componentClass>"
      },
      {
         "trigger": "tag-auradev-createApplicationDefQuickFix\tSimple",
         "contents": "auradev:createApplicationDefQuickFix$1>${2:}</auradev:createApplicationDefQuickFix>"
      },
      {
         "trigger": "tag-auradev-createApplicationDefQuickFix\tFull",
         "contents": "auradev:createApplicationDefQuickFix>${1:}</auradev:createApplicationDefQuickFix>"
      },
      {
         "trigger": "tag-auradev-createAttributeDefQuickFix\tSimple",
         "contents": "auradev:createAttributeDefQuickFix$1>${2:}</auradev:createAttributeDefQuickFix>"
      },
      {
         "trigger": "tag-auradev-createAttributeDefQuickFix\tFull",
         "contents": "auradev:createAttributeDefQuickFix>${1:}</auradev:createAttributeDefQuickFix>"
      },
      {
         "trigger": "tag-auradev-createBaseComponentDefQuickFix\tSimple",
         "contents": "auradev:createBaseComponentDefQuickFix$1>${2:}</auradev:createBaseComponentDefQuickFix>"
      },
      {
         "trigger": "tag-auradev-createBaseComponentDefQuickFix\tFull",
         "contents": "auradev:createBaseComponentDefQuickFix defType=\"${1:auradev:createBaseComponentDefQuickFix - Optional - String}\">${2:}</auradev:createBaseComponentDefQuickFix>"
      },
      {
         "trigger": "tag-auradev-createComponentDefQuickFix\tSimple",
         "contents": "auradev:createComponentDefQuickFix$1>${2:}</auradev:createComponentDefQuickFix>"
      },
      {
         "trigger": "tag-auradev-createComponentDefQuickFix\tFull",
         "contents": "auradev:createComponentDefQuickFix>${1:}</auradev:createComponentDefQuickFix>"
      },
      {
         "trigger": "tag-auradev-createThemeDefQuickFix\tSimple",
         "contents": "auradev:createThemeDefQuickFix$1>${2:}</auradev:createThemeDefQuickFix>"
      },
      {
         "trigger": "tag-auradev-createThemeDefQuickFix\tFull",
         "contents": "auradev:createThemeDefQuickFix>${1:}</auradev:createThemeDefQuickFix>"
      },
      {
         "trigger": "tag-auradev-createThemeVarDefQuickFix\tSimple",
         "contents": "auradev:createThemeVarDefQuickFix$1>${2:}</auradev:createThemeVarDefQuickFix>"
      },
      {
         "trigger": "tag-auradev-createThemeVarDefQuickFix\tFull",
         "contents": "auradev:createThemeVarDefQuickFix>${1:}</auradev:createThemeVarDefQuickFix>"
      },
      {
         "trigger": "tag-auradev-dependencyItem\tSimple",
         "contents": "auradev:dependencyItem$1>${2:}</auradev:dependencyItem>"
      },
      {
         "trigger": "tag-auradev-dependencyItem\tFull",
         "contents": "auradev:dependencyItem descriptor=\"${1:auradev:dependencyItem - Optional - String}\" type=\"${2:auradev:dependencyItem - Optional - String}\" uid=\"${3:auradev:dependencyItem - Optional - String}\" error=\"${4:auradev:dependencyItem - Optional - Boolean}\">${5:}</auradev:dependencyItem>"
      },
      {
         "trigger": "tag-auradev-lintc\tSimple",
         "contents": "auradev:lintc$1>${2:}</auradev:lintc>"
      },
      {
         "trigger": "tag-auradev-lintc\tFull",
         "contents": "auradev:lintc name=\"${1:auradev:lintc - Optional - String}\">${2:}</auradev:lintc>"
      },
      {
         "trigger": "tag-auradev-quickFix\tSimple",
         "contents": "auradev:quickFix$1>${2:}</auradev:quickFix>"
      },
      {
         "trigger": "tag-auradev-quickFix\tFull",
         "contents": "auradev:quickFix quickFix=\"${1:auradev:quickFix - Optional - java://org.auraframework.throwable.quickfix.AuraQuickFix}\">${2:}</auradev:quickFix>"
      },
      {
         "trigger": "tag-auradev-quickFixButton\tSimple",
         "contents": "auradev:quickFixButton$1>${2:}</auradev:quickFixButton>"
      },
      {
         "trigger": "tag-auradev-quickFixButton\tFull",
         "contents": "auradev:quickFixButton quickFix=\"${1:auradev:quickFixButton - Optional - java://org.auraframework.throwable.quickfix.AuraQuickFix}\">${2:}</auradev:quickFixButton>"
      },
      {
         "trigger": "tag-auradev-quickFixException\tSimple",
         "contents": "auradev:quickFixException$1>${2:}</auradev:quickFixException>"
      },
      {
         "trigger": "tag-auradev-quickFixException\tFull",
         "contents": "auradev:quickFixException exception=\"${1:auradev:quickFixException - Optional - java://org.auraframework.throwable.quickfix.QuickFixException}\" cause=\"${2:auradev:quickFixException - Optional - String}\">${3:}</auradev:quickFixException>"
      },
      {
         "trigger": "tag-auradev-quickFixTemplate\tSimple",
         "contents": "auradev:quickFixTemplate$1>${2:}</auradev:quickFixTemplate>"
      },
      {
         "trigger": "tag-auradev-quickFixTemplate\tFull",
         "contents": "auradev:quickFixTemplate>${1:}</auradev:quickFixTemplate>"
      },
      {
         "trigger": "tag-auradev-removeAttributeDefQuickFix\tSimple",
         "contents": "auradev:removeAttributeDefQuickFix$1>${2:}</auradev:removeAttributeDefQuickFix>"
      },
      {
         "trigger": "tag-auradev-removeAttributeDefQuickFix\tFull",
         "contents": "auradev:removeAttributeDefQuickFix>${1:}</auradev:removeAttributeDefQuickFix>"
      },
      {
         "trigger": "tag-auradev-removeBodyDefQuickFix\tSimple",
         "contents": "auradev:removeBodyDefQuickFix$1>${2:}</auradev:removeBodyDefQuickFix>"
      },
      {
         "trigger": "tag-auradev-removeBodyDefQuickFix\tFull",
         "contents": "auradev:removeBodyDefQuickFix>${1:}</auradev:removeBodyDefQuickFix>"
      },
      {
         "trigger": "tag-auradev-saveApplication\tSimple",
         "contents": "auradev:saveApplication$1>${2:}</auradev:saveApplication>"
      },
      {
         "trigger": "tag-auradev-saveApplication\tFull",
         "contents": "auradev:saveApplication def=\"${1:auradev:saveApplication - Optional - java://org.auraframework.def.ApplicationDef}\">${2:}</auradev:saveApplication>"
      },
      {
         "trigger": "tag-auradev-saveComponent\tSimple",
         "contents": "auradev:saveComponent$1>${2:}</auradev:saveComponent>"
      },
      {
         "trigger": "tag-auradev-saveComponent\tFull",
         "contents": "auradev:saveComponent def=\"${1:auradev:saveComponent - Optional - java://org.auraframework.def.ComponentDef}\">${2:}</auradev:saveComponent>"
      },
      {
         "trigger": "tag-auradev-saveComponentJava\tSimple",
         "contents": "auradev:saveComponentJava$1>${2:}</auradev:saveComponentJava>"
      },
      {
         "trigger": "tag-auradev-saveComponentJava\tFull",
         "contents": "auradev:saveComponentJava def=\"${1:auradev:saveComponentJava - Optional - java://org.auraframework.def.ComponentDef}\">${2:}</auradev:saveComponentJava>"
      },
      {
         "trigger": "tag-auradev-saveStyle\tSimple",
         "contents": "auradev:saveStyle$1>${2:}</auradev:saveStyle>"
      },
      {
         "trigger": "tag-auradev-saveStyle\tFull",
         "contents": "auradev:saveStyle def=\"${1:auradev:saveStyle - Optional - java://org.auraframework.def.StyleDef}\">${2:}</auradev:saveStyle>"
      },
      {
         "trigger": "tag-auradev-saveTheme\tSimple",
         "contents": "auradev:saveTheme$1>${2:}</auradev:saveTheme>"
      },
      {
         "trigger": "tag-auradev-saveTheme\tFull",
         "contents": "auradev:saveTheme def=\"${1:auradev:saveTheme - Optional - java://org.auraframework.def.ComponentDef}\">${2:}</auradev:saveTheme>"
      },
      {
         "trigger": "tag-auradev-showDependencies\tSimple",
         "contents": "auradev:showDependencies$1>${2:}</auradev:showDependencies>"
      },
      {
         "trigger": "tag-auradev-showDependencies\tFull",
         "contents": "auradev:showDependencies component=\"${1:auradev:showDependencies - Optional - String}\">${2:}</auradev:showDependencies>"
      },
      {
         "trigger": "tag-auradev-testDataProvider\tSimple",
         "contents": "auradev:testDataProvider$1>${2:A test data provider.}</auradev:testDataProvider>"
      },
      {
         "trigger": "tag-auradev-testDataProvider\tFull",
         "contents": "auradev:testDataProvider>${1:A test data provider.}</auradev:testDataProvider>"
      },
      {
         "trigger": "tag-auradev-testDataProvider2\tSimple",
         "contents": "auradev:testDataProvider2$1>${2:A test data provider.}</auradev:testDataProvider2>"
      },
      {
         "trigger": "tag-auradev-testDataProvider2\tFull",
         "contents": "auradev:testDataProvider2>${1:A test data provider.}</auradev:testDataProvider2>"
      },
      {
         "trigger": "tag-auradocs-about\tSimple",
         "contents": "auradocs:about$1>${2:}</auradocs:about>"
      },
      {
         "trigger": "tag-auradocs-about\tFull",
         "contents": "auradocs:about>${1:}</auradocs:about>"
      },
      {
         "trigger": "tag-auradocs-api\tSimple",
         "contents": "auradocs:api$1>${2:}</auradocs:api>"
      },
      {
         "trigger": "tag-auradocs-api\tFull",
         "contents": "auradocs:api>${1:}</auradocs:api>"
      },
      {
         "trigger": "tag-auradocs-apiParam\tSimple",
         "contents": "auradocs:apiParam$1>${2:}</auradocs:apiParam>"
      },
      {
         "trigger": "tag-auradocs-apiParam\tFull",
         "contents": "auradocs:apiParam symbol=\"${1:auradocs:apiParam - Optional - Object}\">${2:}</auradocs:apiParam>"
      },
      {
         "trigger": "tag-auradocs-apiParams\tSimple",
         "contents": "auradocs:apiParams$1>${2:}</auradocs:apiParams>"
      },
      {
         "trigger": "tag-auradocs-apiParams\tFull",
         "contents": "auradocs:apiParams params=\"${1:auradocs:apiParams - Optional - Object[]}\">${2:}</auradocs:apiParams>"
      },
      {
         "trigger": "tag-auradocs-apiSymbol\tSimple",
         "contents": "auradocs:apiSymbol$1>${2:}</auradocs:apiSymbol>"
      },
      {
         "trigger": "tag-auradocs-apiSymbol\tFull",
         "contents": "auradocs:apiSymbol symbol=\"${1:auradocs:apiSymbol - Optional - Object}\">${2:}</auradocs:apiSymbol>"
      },
      {
         "trigger": "tag-auradocs-apiSymbols\tSimple",
         "contents": "auradocs:apiSymbols$1>${2:}</auradocs:apiSymbols>"
      },
      {
         "trigger": "tag-auradocs-apiSymbols\tFull",
         "contents": "auradocs:apiSymbols title=\"${1:auradocs:apiSymbols - Optional - String}\" symbols=\"${2:auradocs:apiSymbols - Optional - Object[]}\">${3:}</auradocs:apiSymbols>"
      },
      {
         "trigger": "tag-auradocs-apiTopic\tSimple",
         "contents": "auradocs:apiTopic$1>${2:}</auradocs:apiTopic>"
      },
      {
         "trigger": "tag-auradocs-apiTopic\tFull",
         "contents": "auradocs:apiTopic>${1:}</auradocs:apiTopic>"
      },
      {
         "trigger": "tag-auradocs-codeblock\tSimple",
         "contents": "auradocs:codeblock$1>${2:}</auradocs:codeblock>"
      },
      {
         "trigger": "tag-auradocs-codeblock\tFull",
         "contents": "auradocs:codeblock>${1:}</auradocs:codeblock>"
      },
      {
         "trigger": "tag-auradocs-contentsNode\tSimple",
         "contents": "auradocs:contentsNode$1>${2:}</auradocs:contentsNode>"
      },
      {
         "trigger": "tag-auradocs-contentsNode\tFull",
         "contents": "auradocs:contentsNode text=\"${1:auradocs:contentsNode - Optional - String}\" id=\"${2:auradocs:contentsNode - Optional - String}\" class=\"${3:auradocs:contentsNode - Optional - String}\">${4:}</auradocs:contentsNode>"
      },
      {
         "trigger": "tag-auradocs-def\tSimple",
         "contents": "auradocs:def$1>${2:}</auradocs:def>"
      },
      {
         "trigger": "tag-auradocs-def\tFull",
         "contents": "auradocs:def descriptor=\"${1:auradocs:def - Required - String}\" defType=\"${2:auradocs:def - Optional - String}\">${3:}</auradocs:def>"
      },
      {
         "trigger": "tag-auradocs-defDependencies\tSimple",
         "contents": "auradocs:defDependencies$1>${2:}</auradocs:defDependencies>"
      },
      {
         "trigger": "tag-auradocs-defDependencies\tFull",
         "contents": "auradocs:defDependencies descriptor=\"${1:auradocs:defDependencies - Required - String}\" defType=\"${2:auradocs:defDependencies - Optional - String}\">${3:}</auradocs:defDependencies>"
      },
      {
         "trigger": "tag-auradocs-defDescription\tSimple",
         "contents": "auradocs:defDescription$1>${2:}</auradocs:defDescription>"
      },
      {
         "trigger": "tag-auradocs-defDescription\tFull",
         "contents": "auradocs:defDescription descriptions=\"${1:auradocs:defDescription - Optional - Object}\">${2:}</auradocs:defDescription>"
      },
      {
         "trigger": "tag-auradocs-defLayout\tSimple",
         "contents": "auradocs:defLayout$1>${2:}</auradocs:defLayout>"
      },
      {
         "trigger": "tag-auradocs-defLayout\tFull",
         "contents": "auradocs:defLayout title=\"${1:auradocs:defLayout - Optional - String}\" subtitle=\"${2:auradocs:defLayout - Optional - Aura.Component[]}\" description=\"${3:auradocs:defLayout - Optional - Aura.Component[]}\" labels=\"${4:auradocs:defLayout - Optional - Aura.Component[]}\" status=\"${5:auradocs:defLayout - Optional - Aura.Component[]}\">${6:}</auradocs:defLayout>"
      },
      {
         "trigger": "tag-auradocs-defLink\tSimple",
         "contents": "auradocs:defLink$1>${2:}</auradocs:defLink>"
      },
      {
         "trigger": "tag-auradocs-defLink\tFull",
         "contents": "auradocs:defLink descriptor=\"${1:auradocs:defLink - Required - String}\" defType=\"${2:auradocs:defLink - Optional - String}\">${3:}</auradocs:defLink>"
      },
      {
         "trigger": "tag-auradocs-defMemberList\tSimple",
         "contents": "auradocs:defMemberList$1>${2:}</auradocs:defMemberList>"
      },
      {
         "trigger": "tag-auradocs-defMemberList\tFull",
         "contents": "auradocs:defMemberList title=\"${1:auradocs:defMemberList - Optional - String}\" list=\"${2:auradocs:defMemberList - Optional - Object}\">${3:}</auradocs:defMemberList>"
      },
      {
         "trigger": "tag-auradocs-defOverview\tSimple",
         "contents": "auradocs:defOverview$1>${2:}</auradocs:defOverview>"
      },
      {
         "trigger": "tag-auradocs-defOverview\tFull",
         "contents": "auradocs:defOverview descriptor=\"${1:auradocs:defOverview - Required - String}\" defType=\"${2:auradocs:defOverview - Optional - String}\">${3:}</auradocs:defOverview>"
      },
      {
         "trigger": "tag-auradocs-demoAuraError\tSimple",
         "contents": "auradocs:demoAuraError$1>${2:}</auradocs:demoAuraError>"
      },
      {
         "trigger": "tag-auradocs-demoAuraError\tFull",
         "contents": "auradocs:demoAuraError>${1:}</auradocs:demoAuraError>"
      },
      {
         "trigger": "tag-auradocs-demoAutocomplete\tSimple",
         "contents": "auradocs:demoAutocomplete$1>${2:}</auradocs:demoAutocomplete>"
      },
      {
         "trigger": "tag-auradocs-demoAutocomplete\tFull",
         "contents": "auradocs:demoAutocomplete>${1:}</auradocs:demoAutocomplete>"
      },
      {
         "trigger": "tag-auradocs-demoAutocompleteProvider\tSimple",
         "contents": "auradocs:demoAutocompleteProvider$1>${2:A test data provider to test autocomplete component.}</auradocs:demoAutocompleteProvider>"
      },
      {
         "trigger": "tag-auradocs-demoAutocompleteProvider\tFull",
         "contents": "auradocs:demoAutocompleteProvider dataType=\"${1:auradocs:demoAutocompleteProvider - Optional - String}\">${2:A test data provider to test autocomplete component.}</auradocs:demoAutocompleteProvider>"
      },
      {
         "trigger": "tag-auradocs-demoCarousel\tSimple",
         "contents": "auradocs:demoCarousel$1>${2:}</auradocs:demoCarousel>"
      },
      {
         "trigger": "tag-auradocs-demoCarousel\tFull",
         "contents": "auradocs:demoCarousel>${1:}</auradocs:demoCarousel>"
      },
      {
         "trigger": "tag-auradocs-demoCss\tSimple",
         "contents": "auradocs:demoCss$1>${2:}</auradocs:demoCss>"
      },
      {
         "trigger": "tag-auradocs-demoCss\tFull",
         "contents": "auradocs:demoCss>${1:}</auradocs:demoCss>"
      },
      {
         "trigger": "tag-auradocs-demoDataProvider\tSimple",
         "contents": "auradocs:demoDataProvider$1>${2:A test data provider.}</auradocs:demoDataProvider>"
      },
      {
         "trigger": "tag-auradocs-demoDataProvider\tFull",
         "contents": "auradocs:demoDataProvider>${1:A test data provider.}</auradocs:demoDataProvider>"
      },
      {
         "trigger": "tag-auradocs-demoDialog\tSimple",
         "contents": "auradocs:demoDialog$1>${2:}</auradocs:demoDialog>"
      },
      {
         "trigger": "tag-auradocs-demoDialog\tFull",
         "contents": "auradocs:demoDialog>${1:}</auradocs:demoDialog>"
      },
      {
         "trigger": "tag-auradocs-demoEvents\tSimple",
         "contents": "auradocs:demoEvents$1>${2:}</auradocs:demoEvents>"
      },
      {
         "trigger": "tag-auradocs-demoEvents\tFull",
         "contents": "auradocs:demoEvents>${1:}</auradocs:demoEvents>"
      },
      {
         "trigger": "tag-auradocs-demoForm\tSimple",
         "contents": "auradocs:demoForm$1>${2:}</auradocs:demoForm>"
      },
      {
         "trigger": "tag-auradocs-demoForm\tFull",
         "contents": "auradocs:demoForm myDate=\"${1:auradocs:demoForm - Optional - Date}\">${2:}</auradocs:demoForm>"
      },
      {
         "trigger": "tag-auradocs-demoFriendlyError\tSimple",
         "contents": "auradocs:demoFriendlyError$1>${2:}</auradocs:demoFriendlyError>"
      },
      {
         "trigger": "tag-auradocs-demoFriendlyError\tFull",
         "contents": "auradocs:demoFriendlyError>${1:}</auradocs:demoFriendlyError>"
      },
      {
         "trigger": "tag-auradocs-demoInputRT\tSimple",
         "contents": "auradocs:demoInputRT$1>${2:}</auradocs:demoInputRT>"
      },
      {
         "trigger": "tag-auradocs-demoInputRT\tFull",
         "contents": "auradocs:demoInputRT>${1:}</auradocs:demoInputRT>"
      },
      {
         "trigger": "tag-auradocs-demoLabel\tSimple",
         "contents": "auradocs:demoLabel$1>${2:}</auradocs:demoLabel>"
      },
      {
         "trigger": "tag-auradocs-demoLabel\tFull",
         "contents": "auradocs:demoLabel>${1:}</auradocs:demoLabel>"
      },
      {
         "trigger": "tag-auradocs-demoLabelDyn\tSimple",
         "contents": "auradocs:demoLabelDyn$1>${2:}</auradocs:demoLabelDyn>"
      },
      {
         "trigger": "tag-auradocs-demoLabelDyn\tFull",
         "contents": "auradocs:demoLabelDyn simplevalue1=\"${1:auradocs:demoLabelDyn - Optional - Object}\">${2:}</auradocs:demoLabelDyn>"
      },
      {
         "trigger": "tag-auradocs-demoLangLocale\tSimple",
         "contents": "auradocs:demoLangLocale$1>${2:}</auradocs:demoLangLocale>"
      },
      {
         "trigger": "tag-auradocs-demoLangLocale\tFull",
         "contents": "auradocs:demoLangLocale>${1:}</auradocs:demoLangLocale>"
      },
      {
         "trigger": "tag-auradocs-demoList\tSimple",
         "contents": "auradocs:demoList$1>${2:}</auradocs:demoList>"
      },
      {
         "trigger": "tag-auradocs-demoList\tFull",
         "contents": "auradocs:demoList>${1:}</auradocs:demoList>"
      },
      {
         "trigger": "tag-auradocs-demoListTemplate\tSimple",
         "contents": "auradocs:demoListTemplate$1>${2:}</auradocs:demoListTemplate>"
      },
      {
         "trigger": "tag-auradocs-demoListTemplate\tFull",
         "contents": "auradocs:demoListTemplate label=\"${1:auradocs:demoListTemplate - Optional - String}\">${2:}</auradocs:demoListTemplate>"
      },
      {
         "trigger": "tag-auradocs-demoLocale\tSimple",
         "contents": "auradocs:demoLocale$1>${2:}</auradocs:demoLocale>"
      },
      {
         "trigger": "tag-auradocs-demoLocale\tFull",
         "contents": "auradocs:demoLocale>${1:}</auradocs:demoLocale>"
      },
      {
         "trigger": "tag-auradocs-demoMenu\tSimple",
         "contents": "auradocs:demoMenu$1>${2:}</auradocs:demoMenu>"
      },
      {
         "trigger": "tag-auradocs-demoMenu\tFull",
         "contents": "auradocs:demoMenu status=\"${1:auradocs:demoMenu - Optional - String[]}\">${2:}</auradocs:demoMenu>"
      },
      {
         "trigger": "tag-auradocs-demoMenuMeta\tSimple",
         "contents": "auradocs:demoMenuMeta$1>${2:}</auradocs:demoMenuMeta>"
      },
      {
         "trigger": "tag-auradocs-demoMenuMeta\tFull",
         "contents": "auradocs:demoMenuMeta>${1:}</auradocs:demoMenuMeta>"
      },
      {
         "trigger": "tag-auradocs-demoMessage\tSimple",
         "contents": "auradocs:demoMessage$1>${2:}</auradocs:demoMessage>"
      },
      {
         "trigger": "tag-auradocs-demoMessage\tFull",
         "contents": "auradocs:demoMessage>${1:}</auradocs:demoMessage>"
      },
      {
         "trigger": "tag-auradocs-demoModal\tSimple",
         "contents": "auradocs:demoModal$1>${2:}</auradocs:demoModal>"
      },
      {
         "trigger": "tag-auradocs-demoModal\tFull",
         "contents": "auradocs:demoModal>${1:}</auradocs:demoModal>"
      },
      {
         "trigger": "tag-auradocs-demoPanel\tSimple",
         "contents": "auradocs:demoPanel$1>${2:}</auradocs:demoPanel>"
      },
      {
         "trigger": "tag-auradocs-demoPanel\tFull",
         "contents": "auradocs:demoPanel demo=\"${1:auradocs:demoPanel - Optional - String}\" example=\"${2:auradocs:demoPanel - Optional - Aura.Component[]}\">${3:}</auradocs:demoPanel>"
      },
      {
         "trigger": "tag-auradocs-demoScroller\tSimple",
         "contents": "auradocs:demoScroller$1>${2:}</auradocs:demoScroller>"
      },
      {
         "trigger": "tag-auradocs-demoScroller\tFull",
         "contents": "auradocs:demoScroller>${1:}</auradocs:demoScroller>"
      },
      {
         "trigger": "tag-auradocs-demoSelect\tSimple",
         "contents": "auradocs:demoSelect$1>${2:}</auradocs:demoSelect>"
      },
      {
         "trigger": "tag-auradocs-demoSelect\tFull",
         "contents": "auradocs:demoSelect>${1:}</auradocs:demoSelect>"
      },
      {
         "trigger": "tag-auradocs-demoSpinner\tSimple",
         "contents": "auradocs:demoSpinner$1>${2:}</auradocs:demoSpinner>"
      },
      {
         "trigger": "tag-auradocs-demoSpinner\tFull",
         "contents": "auradocs:demoSpinner>${1:}</auradocs:demoSpinner>"
      },
      {
         "trigger": "tag-auradocs-demoStamp\tSimple",
         "contents": "auradocs:demoStamp$1>${2:}</auradocs:demoStamp>"
      },
      {
         "trigger": "tag-auradocs-demoStamp\tFull",
         "contents": "auradocs:demoStamp>${1:}</auradocs:demoStamp>"
      },
      {
         "trigger": "tag-auradocs-demoSubmitForm\tSimple",
         "contents": "auradocs:demoSubmitForm$1>${2:}</auradocs:demoSubmitForm>"
      },
      {
         "trigger": "tag-auradocs-demoSubmitForm\tFull",
         "contents": "auradocs:demoSubmitForm myDate=\"${1:auradocs:demoSubmitForm - Optional - Date}\" sizes=\"${2:auradocs:demoSubmitForm - Optional - List}\" invalidEmail=\"${3:auradocs:demoSubmitForm - Optional - Boolean}\" invalidPW=\"${4:auradocs:demoSubmitForm - Optional - Boolean}\" invalidURL=\"${5:auradocs:demoSubmitForm - Optional - Boolean}\" filled=\"${6:auradocs:demoSubmitForm - Optional - Boolean}\">${7:}</auradocs:demoSubmitForm>"
      },
      {
         "trigger": "tag-auradocs-demoTab\tSimple",
         "contents": "auradocs:demoTab$1>${2:}</auradocs:demoTab>"
      },
      {
         "trigger": "tag-auradocs-demoTab\tFull",
         "contents": "auradocs:demoTab>${1:}</auradocs:demoTab>"
      },
      {
         "trigger": "tag-auradocs-demoTable\tSimple",
         "contents": "auradocs:demoTable$1>${2:}</auradocs:demoTable>"
      },
      {
         "trigger": "tag-auradocs-demoTable\tFull",
         "contents": "auradocs:demoTable>${1:}</auradocs:demoTable>"
      },
      {
         "trigger": "tag-auradocs-demoTodo\tSimple",
         "contents": "auradocs:demoTodo$1>${2:}</auradocs:demoTodo>"
      },
      {
         "trigger": "tag-auradocs-demoTodo\tFull",
         "contents": "auradocs:demoTodo>${1:}</auradocs:demoTodo>"
      },
      {
         "trigger": "tag-auradocs-demoToolbar\tSimple",
         "contents": "auradocs:demoToolbar$1>${2:}</auradocs:demoToolbar>"
      },
      {
         "trigger": "tag-auradocs-demoToolbar\tFull",
         "contents": "auradocs:demoToolbar>${1:}</auradocs:demoToolbar>"
      },
      {
         "trigger": "tag-auradocs-demoTooltip\tSimple",
         "contents": "auradocs:demoTooltip$1>${2:}</auradocs:demoTooltip>"
      },
      {
         "trigger": "tag-auradocs-demoTooltip\tFull",
         "contents": "auradocs:demoTooltip>${1:}</auradocs:demoTooltip>"
      },
      {
         "trigger": "tag-auradocs-demoVbox\tSimple",
         "contents": "auradocs:demoVbox$1>${2:}</auradocs:demoVbox>"
      },
      {
         "trigger": "tag-auradocs-demoVbox\tFull",
         "contents": "auradocs:demoVbox>${1:}</auradocs:demoVbox>"
      },
      {
         "trigger": "tag-auradocs-demoVdatagrid\tSimple",
         "contents": "auradocs:demoVdatagrid$1>${2:}</auradocs:demoVdatagrid>"
      },
      {
         "trigger": "tag-auradocs-demoVdatagrid\tFull",
         "contents": "auradocs:demoVdatagrid data=\"${1:auradocs:demoVdatagrid - Optional - List}\">${2:}</auradocs:demoVdatagrid>"
      },
      {
         "trigger": "tag-auradocs-demos\tSimple",
         "contents": "auradocs:demos$1>${2:}</auradocs:demos>"
      },
      {
         "trigger": "tag-auradocs-demos\tFull",
         "contents": "auradocs:demos>${1:}</auradocs:demos>"
      },
      {
         "trigger": "tag-auradocs-demosNode\tSimple",
         "contents": "auradocs:demosNode$1>${2:}</auradocs:demosNode>"
      },
      {
         "trigger": "tag-auradocs-demosNode\tFull",
         "contents": "auradocs:demosNode text=\"${1:auradocs:demosNode - Optional - String}\" id=\"${2:auradocs:demosNode - Optional - String}\" class=\"${3:auradocs:demosNode - Optional - String}\">${4:}</auradocs:demosNode>"
      },
      {
         "trigger": "tag-auradocs-descriptorLink\tSimple",
         "contents": "auradocs:descriptorLink$1>${2:}</auradocs:descriptorLink>"
      },
      {
         "trigger": "tag-auradocs-descriptorLink\tFull",
         "contents": "auradocs:descriptorLink defModel=\"${1:auradocs:descriptorLink - Required - java://org.auraframework.docs.DefModel}\">${2:}</auradocs:descriptorLink>"
      },
      {
         "trigger": "tag-auradocs-docTestRef\tSimple",
         "contents": "auradocs:docTestRef$1>${2:}</auradocs:docTestRef>"
      },
      {
         "trigger": "tag-auradocs-docTestRef\tFull",
         "contents": "auradocs:docTestRef>${1:}</auradocs:docTestRef>"
      },
      {
         "trigger": "tag-auradocs-doctabs\tSimple",
         "contents": "auradocs:doctabs$1>${2:}</auradocs:doctabs>"
      },
      {
         "trigger": "tag-auradocs-doctabs\tFull",
         "contents": "auradocs:doctabs>${1:}</auradocs:doctabs>"
      },
      {
         "trigger": "tag-auradocs-download\tSimple",
         "contents": "auradocs:download$1>${2:}</auradocs:download>"
      },
      {
         "trigger": "tag-auradocs-download\tFull",
         "contents": "auradocs:download>${1:}</auradocs:download>"
      },
      {
         "trigger": "tag-auradocs-editorPanel\tSimple",
         "contents": "auradocs:editorPanel$1>${2:}</auradocs:editorPanel>"
      },
      {
         "trigger": "tag-auradocs-editorPanel\tFull",
         "contents": "auradocs:editorPanel title=\"${1:auradocs:editorPanel - Required - String}\" descriptor=\"${2:auradocs:editorPanel - Required - String}\" defType=\"${3:auradocs:editorPanel - Optional - String}\" includeDefName=\"${4:auradocs:editorPanel - Optional - String}\" region=\"${5:auradocs:editorPanel - Optional - String}\">${6:}</auradocs:editorPanel>"
      },
      {
         "trigger": "tag-auradocs-empty\tSimple",
         "contents": "auradocs:empty$1>${2:}</auradocs:empty>"
      },
      {
         "trigger": "tag-auradocs-empty\tFull",
         "contents": "auradocs:empty>${1:}</auradocs:empty>"
      },
      {
         "trigger": "tag-auradocs-error\tSimple",
         "contents": "auradocs:error$1>${2:}</auradocs:error>"
      },
      {
         "trigger": "tag-auradocs-error\tFull",
         "contents": "auradocs:error>${1:}</auradocs:error>"
      },
      {
         "trigger": "tag-auradocs-example\tSimple",
         "contents": "auradocs:example$1>${2:}</auradocs:example>"
      },
      {
         "trigger": "tag-auradocs-example\tFull",
         "contents": "auradocs:example label=\"${1:auradocs:example - Required - String}\" description=\"${2:auradocs:example - Required - String}\" descriptor=\"${3:auradocs:example - Required - String}\">${4:}</auradocs:example>"
      },
      {
         "trigger": "tag-auradocs-examplesTemplate\tSimple",
         "contents": "auradocs:examplesTemplate$1>${2:}</auradocs:examplesTemplate>"
      },
      {
         "trigger": "tag-auradocs-examplesTemplate\tFull",
         "contents": "auradocs:examplesTemplate>${1:}</auradocs:examplesTemplate>"
      },
      {
         "trigger": "tag-auradocs-examplesc\tSimple",
         "contents": "auradocs:examplesc$1>${2:}</auradocs:examplesc>"
      },
      {
         "trigger": "tag-auradocs-examplesc\tFull",
         "contents": "auradocs:examplesc name=\"${1:auradocs:examplesc - Optional - String}\">${2:}</auradocs:examplesc>"
      },
      {
         "trigger": "tag-auradocs-helloAttributes\tSimple",
         "contents": "auradocs:helloAttributes$1>${2:}</auradocs:helloAttributes>"
      },
      {
         "trigger": "tag-auradocs-helloAttributes\tFull",
         "contents": "auradocs:helloAttributes whom=\"${1:auradocs:helloAttributes - Optional - String}\">${2:}</auradocs:helloAttributes>"
      },
      {
         "trigger": "tag-auradocs-helpPanel\tSimple",
         "contents": "auradocs:helpPanel$1>${2:}</auradocs:helpPanel>"
      },
      {
         "trigger": "tag-auradocs-helpPanel\tFull",
         "contents": "auradocs:helpPanel topic=\"${1:auradocs:helpPanel - Optional - String}\" topicPanel=\"${2:auradocs:helpPanel - Optional - Aura.Component[]}\">${3:}</auradocs:helpPanel>"
      },
      {
         "trigger": "tag-auradocs-home\tSimple",
         "contents": "auradocs:home$1>${2:}</auradocs:home>"
      },
      {
         "trigger": "tag-auradocs-home\tFull",
         "contents": "auradocs:home>${1:}</auradocs:home>"
      },
      {
         "trigger": "tag-auradocs-htmlTags\tSimple",
         "contents": "auradocs:htmlTags$1>${2:}</auradocs:htmlTags>"
      },
      {
         "trigger": "tag-auradocs-htmlTags\tFull",
         "contents": "auradocs:htmlTags>${1:}</auradocs:htmlTags>"
      },
      {
         "trigger": "tag-auradocs-htmlTagsTopic\tSimple",
         "contents": "auradocs:htmlTagsTopic$1>${2:}</auradocs:htmlTagsTopic>"
      },
      {
         "trigger": "tag-auradocs-htmlTagsTopic\tFull",
         "contents": "auradocs:htmlTagsTopic>${1:}</auradocs:htmlTagsTopic>"
      },
      {
         "trigger": "tag-auradocs-info\tSimple",
         "contents": "auradocs:info$1>${2:}</auradocs:info>"
      },
      {
         "trigger": "tag-auradocs-info\tFull",
         "contents": "auradocs:info>${1:}</auradocs:info>"
      },
      {
         "trigger": "tag-auradocs-nav\tSimple",
         "contents": "auradocs:nav$1>${2:}</auradocs:nav>"
      },
      {
         "trigger": "tag-auradocs-nav\tFull",
         "contents": "auradocs:nav referenceOnly=\"${1:auradocs:nav - Optional - boolean}\">${2:}</auradocs:nav>"
      },
      {
         "trigger": "tag-auradocs-navLink\tSimple",
         "contents": "auradocs:navLink$1>${2:}</auradocs:navLink>"
      },
      {
         "trigger": "tag-auradocs-navLink\tFull",
         "contents": "auradocs:navLink location=\"${1:auradocs:navLink - Required - String}\">${2:}</auradocs:navLink>"
      },
      {
         "trigger": "tag-auradocs-openTopicTree\tSimple",
         "contents": "auradocs:openTopicTree$1>${2:A decorator for a ui:tree that adds the attribute 'active=true' to the currently selected topic based on a mapping from the current URL location to the node with a matching href.}</auradocs:openTopicTree>"
      },
      {
         "trigger": "tag-auradocs-openTopicTree\tFull",
         "contents": "auradocs:openTopicTree layoutToken=\"${1:auradocs:openTopicTree - Optional - String}\" catchAllHref=\"${2:auradocs:openTopicTree - Optional - String}\" tree=\"${3:auradocs:openTopicTree - Optional - Aura.Component}\">${4:A decorator for a ui:tree that adds the attribute 'active=true' to the currently selected topic based on a mapping from the current URL location to the node with a matching href.}</auradocs:openTopicTree>"
      },
      {
         "trigger": "tag-auradocs-outputViewerc\tSimple",
         "contents": "auradocs:outputViewerc$1>${2:}</auradocs:outputViewerc>"
      },
      {
         "trigger": "tag-auradocs-outputViewerc\tFull",
         "contents": "auradocs:outputViewerc def=\"${1:auradocs:outputViewerc - Optional - String}\">${2:}</auradocs:outputViewerc>"
      },
      {
         "trigger": "tag-auradocs-prefixerTopic\tSimple",
         "contents": "auradocs:prefixerTopic$1>${2:}</auradocs:prefixerTopic>"
      },
      {
         "trigger": "tag-auradocs-prefixerTopic\tFull",
         "contents": "auradocs:prefixerTopic>${1:}</auradocs:prefixerTopic>"
      },
      {
         "trigger": "tag-auradocs-referenceTabTopic\tSimple",
         "contents": "auradocs:referenceTabTopic$1>${2:}</auradocs:referenceTabTopic>"
      },
      {
         "trigger": "tag-auradocs-referenceTabTopic\tFull",
         "contents": "auradocs:referenceTabTopic>${1:}</auradocs:referenceTabTopic>"
      },
      {
         "trigger": "tag-auradocs-referenceTopicLink\tSimple",
         "contents": "auradocs:referenceTopicLink$1>${2:}</auradocs:referenceTopicLink>"
      },
      {
         "trigger": "tag-auradocs-referenceTopicLink\tFull",
         "contents": "auradocs:referenceTopicLink topic=\"${1:auradocs:referenceTopicLink - Required - String}\">${2:}</auradocs:referenceTopicLink>"
      },
      {
         "trigger": "tag-auradocs-referenceTree\tSimple",
         "contents": "auradocs:referenceTree$1>${2:}</auradocs:referenceTree>"
      },
      {
         "trigger": "tag-auradocs-referenceTree\tFull",
         "contents": "auradocs:referenceTree>${1:}</auradocs:referenceTree>"
      },
      {
         "trigger": "tag-auradocs-referenceTreeSection\tSimple",
         "contents": "auradocs:referenceTreeSection$1>${2:}</auradocs:referenceTreeSection>"
      },
      {
         "trigger": "tag-auradocs-referenceTreeSection\tFull",
         "contents": "auradocs:referenceTreeSection title=\"${1:auradocs:referenceTreeSection - Required - String}\" namespaces=\"${2:auradocs:referenceTreeSection - Required - List}\">${3:}</auradocs:referenceTreeSection>"
      },
      {
         "trigger": "tag-auradocs-sampleUnescape\tSimple",
         "contents": "auradocs:sampleUnescape$1>${2:}</auradocs:sampleUnescape>"
      },
      {
         "trigger": "tag-auradocs-sampleUnescape\tFull",
         "contents": "auradocs:sampleUnescape>${1:}</auradocs:sampleUnescape>"
      },
      {
         "trigger": "tag-auradocs-searchFilterTree\tSimple",
         "contents": "auradocs:searchFilterTree$1>${2:}</auradocs:searchFilterTree>"
      },
      {
         "trigger": "tag-auradocs-searchFilterTree\tFull",
         "contents": "auradocs:searchFilterTree tree=\"${1:auradocs:searchFilterTree - Optional - Aura.Component}\">${2:}</auradocs:searchFilterTree>"
      },
      {
         "trigger": "tag-auradocs-sidebar\tSimple",
         "contents": "auradocs:sidebar$1>${2:}</auradocs:sidebar>"
      },
      {
         "trigger": "tag-auradocs-sidebar\tFull",
         "contents": "auradocs:sidebar toolbar=\"${1:auradocs:sidebar - Optional - Aura.Component[]}\">${2:}</auradocs:sidebar>"
      },
      {
         "trigger": "tag-auradocs-simpledragdrop\tSimple",
         "contents": "auradocs:simpledragdrop$1>${2:}</auradocs:simpledragdrop>"
      },
      {
         "trigger": "tag-auradocs-simpledragdrop\tFull",
         "contents": "auradocs:simpledragdrop list1=\"${1:auradocs:simpledragdrop - Optional - String[]}\" list2=\"${2:auradocs:simpledragdrop - Optional - String[]}\">${3:}</auradocs:simpledragdrop>"
      },
      {
         "trigger": "tag-auradocs-spinnerTopic\tSimple",
         "contents": "auradocs:spinnerTopic$1>${2:}</auradocs:spinnerTopic>"
      },
      {
         "trigger": "tag-auradocs-spinnerTopic\tFull",
         "contents": "auradocs:spinnerTopic>${1:}</auradocs:spinnerTopic>"
      },
      {
         "trigger": "tag-auradocs-stretchEditorPanel\tSimple",
         "contents": "auradocs:stretchEditorPanel$1>${2:}</auradocs:stretchEditorPanel>"
      },
      {
         "trigger": "tag-auradocs-stretchEditorPanel\tFull",
         "contents": "auradocs:stretchEditorPanel>${1:}</auradocs:stretchEditorPanel>"
      },
      {
         "trigger": "tag-auradocs-stretchTab\tSimple",
         "contents": "auradocs:stretchTab$1>${2:}</auradocs:stretchTab>"
      },
      {
         "trigger": "tag-auradocs-stretchTab\tFull",
         "contents": "auradocs:stretchTab>${1:}</auradocs:stretchTab>"
      },
      {
         "trigger": "tag-auradocs-tableDemo\tSimple",
         "contents": "auradocs:tableDemo$1>${2:}</auradocs:tableDemo>"
      },
      {
         "trigger": "tag-auradocs-tableDemo\tFull",
         "contents": "auradocs:tableDemo>${1:}</auradocs:tableDemo>"
      },
      {
         "trigger": "tag-auradocs-template\tSimple",
         "contents": "auradocs:template$1>${2:}</auradocs:template>"
      },
      {
         "trigger": "tag-auradocs-template\tFull",
         "contents": "auradocs:template>${1:}</auradocs:template>"
      },
      {
         "trigger": "tag-auradocs-topic\tSimple",
         "contents": "auradocs:topic$1>${2:}</auradocs:topic>"
      },
      {
         "trigger": "tag-auradocs-topic\tFull",
         "contents": "auradocs:topic>${1:}</auradocs:topic>"
      },
      {
         "trigger": "tag-auradocs-topicExample\tSimple",
         "contents": "auradocs:topicExample$1>${2:}</auradocs:topicExample>"
      },
      {
         "trigger": "tag-auradocs-topicExample\tFull",
         "contents": "auradocs:topicExample descriptor=\"${1:auradocs:topicExample - Required - String}\" defType=\"${2:auradocs:topicExample - Optional - String}\">${3:}</auradocs:topicExample>"
      },
      {
         "trigger": "tag-auradocs-topicLink\tSimple",
         "contents": "auradocs:topicLink$1>${2:}</auradocs:topicLink>"
      },
      {
         "trigger": "tag-auradocs-topicLink\tFull",
         "contents": "auradocs:topicLink topic=\"${1:auradocs:topicLink - Required - String}\">${2:}</auradocs:topicLink>"
      },
      {
         "trigger": "tag-auradocs-topicList\tSimple",
         "contents": "auradocs:topicList$1>${2:}</auradocs:topicList>"
      },
      {
         "trigger": "tag-auradocs-topicList\tFull",
         "contents": "auradocs:topicList>${1:}</auradocs:topicList>"
      },
      {
         "trigger": "tag-auradocs-topicPanel\tSimple",
         "contents": "auradocs:topicPanel$1>${2:}</auradocs:topicPanel>"
      },
      {
         "trigger": "tag-auradocs-topicPanel\tFull",
         "contents": "auradocs:topicPanel topic=\"${1:auradocs:topicPanel - Optional - String}\" example=\"${2:auradocs:topicPanel - Optional - Aura.Component[]}\">${3:}</auradocs:topicPanel>"
      },
      {
         "trigger": "tag-auradocs-topics\tSimple",
         "contents": "auradocs:topics$1>${2:}</auradocs:topics>"
      },
      {
         "trigger": "tag-auradocs-topics\tFull",
         "contents": "auradocs:topics>${1:}</auradocs:topics>"
      },
      {
         "trigger": "tag-auradocs-viewer\tSimple",
         "contents": "auradocs:viewer$1>${2:}</auradocs:viewer>"
      },
      {
         "trigger": "tag-auradocs-viewer\tFull",
         "contents": "auradocs:viewer descriptor=\"${1:auradocs:viewer - Required - String}\">${2:}</auradocs:viewer>"
      },
      {
         "trigger": "tag-auradocs-warning\tSimple",
         "contents": "auradocs:warning$1>${2:}</auradocs:warning>"
      },
      {
         "trigger": "tag-auradocs-warning\tFull",
         "contents": "auradocs:warning>${1:}</auradocs:warning>"
      },
      {
         "trigger": "tag-auradocs-welcomeTopic\tSimple",
         "contents": "auradocs:welcomeTopic$1>${2:}</auradocs:welcomeTopic>"
      },
      {
         "trigger": "tag-auradocs-welcomeTopic\tFull",
         "contents": "auradocs:welcomeTopic>${1:}</auradocs:welcomeTopic>"
      },
      {
         "trigger": "tag-aurajstest-emptyTemplate\tSimple",
         "contents": "aurajstest:emptyTemplate$1>${2:Used by aurajstest:inject so that TestInjectionRenderer is entirely responsible for output}</aurajstest:emptyTemplate>"
      },
      {
         "trigger": "tag-aurajstest-emptyTemplate\tFull",
         "contents": "aurajstest:emptyTemplate>${1:Used by aurajstest:inject so that TestInjectionRenderer is entirely responsible for output}</aurajstest:emptyTemplate>"
      },
      {
         "trigger": "tag-aurajstest-jstestCase\tSimple",
         "contents": "aurajstest:jstestCase$1>${2:}</aurajstest:jstestCase>"
      },
      {
         "trigger": "tag-aurajstest-jstestCase\tFull",
         "contents": "aurajstest:jstestCase case=\"${1:aurajstest:jstestCase - Optional - java://org.auraframework.def.TestCaseDef}\" suite=\"${2:aurajstest:jstestCase - Optional - java://org.auraframework.def.TestSuiteDef}\" url=\"${3:aurajstest:jstestCase - Optional - String}\" status=\"${4:aurajstest:jstestCase - Optional - String}\">${5:}</aurajstest:jstestCase>"
      },
      {
         "trigger": "tag-ui-abstractDataGrid\tSimple",
         "contents": "ui:abstractDataGrid$1>${2:Implements ui:visible.\tAn abstract component that provides a basic layout for the ui:dataGrid component.}</ui:abstractDataGrid>"
      },
      {
         "trigger": "tag-ui-abstractDataGrid\tFull",
         "contents": "ui:abstractDataGrid items=\"${1:ui:abstractDataGrid - Optional - List}\" itemShape=\"${2:ui:abstractDataGrid - Optional - Object}\" mode=\"${3:ui:abstractDataGrid - Optional - String}\" state=\"${4:ui:abstractDataGrid - Optional - String}\" sortable=\"${5:ui:abstractDataGrid - Optional - Boolean}\" createable=\"${6:ui:abstractDataGrid - Optional - Boolean}\" selectAll=\"${7:ui:abstractDataGrid - Optional - Boolean}\" selectedItems=\"${8:ui:abstractDataGrid - Optional - List}\" sortBy=\"${9:ui:abstractDataGrid - Optional - String}\" dataProvider=\"${10:ui:abstractDataGrid - Optional - Aura.Component[]}\" dataWriter=\"${11:ui:abstractDataGrid - Optional - Aura.Component[]}\" columns=\"${12:ui:abstractDataGrid - Optional - Aura.Component[]}\" summaryRow=\"${13:ui:abstractDataGrid - Optional - Aura.ComponentDefRef[]}\" actionDelegate=\"${14:ui:abstractDataGrid - Optional - Aura.Component[]}\">${15:Implements ui:visible.\tAn abstract component that provides a basic layout for the ui:dataGrid component.}</ui:abstractDataGrid>"
      },
      {
         "trigger": "tag-ui-abstractList\tSimple",
         "contents": "ui:abstractList$1>${2:Implements ui:visible, ui:pagingInterface.\tAn abstract component that provides a basic layout for the ui:list component.}</ui:abstractList>"
      },
      {
         "trigger": "tag-ui-abstractList\tFull",
         "contents": "ui:abstractList itemTemplate=\"${1:ui:abstractList - Required - Aura.ComponentDefRef[]}\" itemVar=\"${2:ui:abstractList - Required - String}\" dataProvider=\"${3:ui:abstractList - Required - Aura.Component[]}\" items=\"${4:ui:abstractList - Optional - Object[]}\" emptyListContent=\"${5:ui:abstractList - Optional - Aura.Component[]}\" loadingIndicator=\"${6:ui:abstractList - Optional - Aura.Component[]}\" header=\"${7:ui:abstractList - Optional - Aura.Component[]}\" footer=\"${8:ui:abstractList - Optional - Aura.Component[]}\">${9:Implements ui:visible, ui:pagingInterface.\tAn abstract component that provides a basic layout for the ui:list component.}</ui:abstractList>"
      },
      {
         "trigger": "tag-ui-action\tSimple",
         "contents": "ui:action$1>${2:An abstract component that provides bubbling of events.}</ui:action>"
      },
      {
         "trigger": "tag-ui-action\tFull",
         "contents": "ui:action name=\"${1:ui:action - Optional - String}\" label=\"${2:ui:action - Optional - String}\" labelClass=\"${3:ui:action - Optional - String}\" index=\"${4:ui:action - Optional - Integer}\" value=\"${5:ui:action - Optional - Object}\">${6:An abstract component that provides bubbling of events.}</ui:action>"
      },
      {
         "trigger": "tag-ui-actionButton\tSimple",
         "contents": "ui:actionButton$1>${2:A button used in ui:dataGrid that enables row-level click events to bubble up to the grid.}</ui:actionButton>"
      },
      {
         "trigger": "tag-ui-actionButton\tFull",
         "contents": "ui:actionButton disabled=\"${1:ui:actionButton - Optional - Boolean}\">${2:A button used in ui:dataGrid that enables row-level click events to bubble up to the grid.}</ui:actionButton>"
      },
      {
         "trigger": "tag-ui-actionCheckbox\tSimple",
         "contents": "ui:actionCheckbox$1>${2:A checkbox used in ui:dataGrid that enables row-level click events to bubble up to the grid.}</ui:actionCheckbox>"
      },
      {
         "trigger": "tag-ui-actionCheckbox\tFull",
         "contents": "ui:actionCheckbox disabled=\"${1:ui:actionCheckbox - Optional - Boolean}\">${2:A checkbox used in ui:dataGrid that enables row-level click events to bubble up to the grid.}</ui:actionCheckbox>"
      },
      {
         "trigger": "tag-ui-actionDelegate\tSimple",
         "contents": "ui:actionDelegate$1>${2:Fires and handles the onaction event for the ui:dataGrid component.}</ui:actionDelegate>"
      },
      {
         "trigger": "tag-ui-actionDelegate\tFull",
         "contents": "ui:actionDelegate>${1:Fires and handles the onaction event for the ui:dataGrid component.}</ui:actionDelegate>"
      },
      {
         "trigger": "tag-ui-actionMenuItem\tSimple",
         "contents": "ui:actionMenuItem$1>${2:​A menu item that triggers an action. This component is nested in a ui:menu component.}</ui:actionMenuItem>"
      },
      {
         "trigger": "tag-ui-actionMenuItem\tFull",
         "contents": "ui:actionMenuItem id=\"${1:ui:actionMenuItem - Optional - String}\" hideMenuAfterSelected=\"${2:ui:actionMenuItem - Optional - Boolean}\">${3:​A menu item that triggers an action. This component is nested in a ui:menu component.}</ui:actionMenuItem>"
      },
      {
         "trigger": "tag-ui-asyncComponentManager\tSimple",
         "contents": "ui:asyncComponentManager$1>${2:Manages the asynchronous initialization of components.}</ui:asyncComponentManager>"
      },
      {
         "trigger": "tag-ui-asyncComponentManager\tFull",
         "contents": "ui:asyncComponentManager maxConcurrency=\"${1:ui:asyncComponentManager - Required - Integer}\">${2:Manages the asynchronous initialization of components.}</ui:asyncComponentManager>"
      },
      {
         "trigger": "tag-ui-asyncImage\tSimple",
         "contents": "ui:asyncImage$1>${2:Implements ui:asyncComponent.\tEncapsulates asynchronously loading of an image.}</ui:asyncImage>"
      },
      {
         "trigger": "tag-ui-asyncImage\tFull",
         "contents": "ui:asyncImage actualImageSrc=\"${1:ui:asyncImage - Optional - String}\">${2:Implements ui:asyncComponent.\tEncapsulates asynchronously loading of an image.}</ui:asyncImage>"
      },
      {
         "trigger": "tag-ui-autocomplete\tSimple",
         "contents": "ui:autocomplete$1>${2:Represents an input field that suggests a list of values from the data provider as you type.}</ui:autocomplete>"
      },
      {
         "trigger": "tag-ui-autocomplete\tFull",
         "contents": "ui:autocomplete dataProvider=\"${1:ui:autocomplete - Required - Aura.Component[]}\" listOption=\"${2:ui:autocomplete - Required - Aura.ComponentDefRef[]}\" optionVar=\"${3:ui:autocomplete - Required - String}\" emptyListContent=\"${4:ui:autocomplete - Optional - Aura.Component[]}\" loadingIndicator=\"${5:ui:autocomplete - Optional - Aura.Component[]}\" inputClass=\"${6:ui:autocomplete - Optional - String}\" inputType=\"${7:ui:autocomplete - Optional - String}\" placeholder=\"${8:ui:autocomplete - Optional - String}\" propertyToMatch=\"${9:ui:autocomplete - Optional - String}\" theme=\"${10:ui:autocomplete - Optional - String}\" matchFunc=\"${11:ui:autocomplete - Optional - Aura.Action}\" autocompleteButton=\"${12:ui:autocomplete - Optional - Aura.Component[]}\" header=\"${13:ui:autocomplete - Optional - Aura.Component[]}\" footer=\"${14:ui:autocomplete - Optional - Aura.Component[]}\">${15:Represents an input field that suggests a list of values from the data provider as you type.}</ui:autocomplete>"
      },
      {
         "trigger": "tag-ui-autocompleteList\tSimple",
         "contents": "ui:autocompleteList$1>${2:This component is used in ui:autocomplete to provide a list of options to the input component.To customize the list option behavior, use the selectListOption, listHighlight, and updateAriaAttributes events.}</ui:autocompleteList>"
      },
      {
         "trigger": "tag-ui-autocompleteList\tFull",
         "contents": "ui:autocompleteList ignoredElements=\"${1:ui:autocompleteList - Optional - Object}\" keyword=\"${2:ui:autocompleteList - Optional - String}\" propertyToMatch=\"${3:ui:autocompleteList - Optional - String}\" theme=\"${4:ui:autocompleteList - Optional - String}\" matchFunc=\"${5:ui:autocompleteList - Optional - Aura.Action}\">${6:This component is used in ui:autocomplete to provide a list of options to the input component.To customize the list option behavior, use the selectListOption, listHighlight, and updateAriaAttributes events.}</ui:autocompleteList>"
      },
      {
         "trigger": "tag-ui-autocompleteOption\tSimple",
         "contents": "ui:autocompleteOption$1>${2:Implements ui:autocompleteOptionTemplate.\tThis component represents list options in an ui:autocomplete component. The options are displayed when an input keyword matches an item in the data provider.}</ui:autocompleteOption>"
      },
      {
         "trigger": "tag-ui-autocompleteOption\tFull",
         "contents": "ui:autocompleteOption label=\"${1:ui:autocompleteOption - Required - String}\" displayText=\"${2:ui:autocompleteOption - Optional - String}\" theme=\"${3:ui:autocompleteOption - Optional - String}\" domId=\"${4:ui:autocompleteOption - Optional - String}\">${5:Implements ui:autocompleteOptionTemplate.\tThis component represents list options in an ui:autocomplete component. The options are displayed when an input keyword matches an item in the data provider.}</ui:autocompleteOption>"
      },
      {
         "trigger": "tag-ui-block\tSimple",
         "contents": "ui:block$1>${2:Implements ui:visible.\tUse this component to create a two or three column layout.}</ui:block>"
      },
      {
         "trigger": "tag-ui-block\tFull",
         "contents": "ui:block overflow=\"${1:ui:block - Optional - Boolean}\" left=\"${2:ui:block - Optional - Aura.Component[]}\" right=\"${3:ui:block - Optional - Aura.Component[]}\" tag=\"${4:ui:block - Optional - String}\">${5:Implements ui:visible.\tUse this component to create a two or three column layout.}</ui:block>"
      },
      {
         "trigger": "tag-ui-button\tSimple",
         "contents": "ui:button$1>${2:Represents a button element.}</ui:button>"
      },
      {
         "trigger": "tag-ui-button\tFull",
         "contents": "ui:button label=\"${1:ui:button - Required - String}\" buttonTitle=\"${2:ui:button - Optional - String}\" buttonType=\"${3:ui:button - Optional - String}\" class=\"${4:ui:button - Optional - String}\" labelClass=\"${5:ui:button - Optional - String}\" labelDisplay=\"${6:ui:button - Optional - Boolean}\" iconImgSrc=\"${7:ui:button - Optional - String}\" iconClass=\"${8:ui:button - Optional - String}\" disabled=\"${9:ui:button - Optional - Boolean}\" accesskey=\"${10:ui:button - Optional - String}\" labelDir=\"${11:ui:button - Optional - String}\" stopPropagation=\"${12:ui:button - Optional - Boolean}\" tabIndex=\"${13:ui:button - Optional - Integer}\">${14:Represents a button element.}</ui:button>"
      },
      {
         "trigger": "tag-ui-calendar\tSimple",
         "contents": "ui:calendar$1>${2:}</ui:calendar>"
      },
      {
         "trigger": "tag-ui-calendar\tFull",
         "contents": "ui:calendar>${1:}</ui:calendar>"
      },
      {
         "trigger": "tag-ui-carousel\tSimple",
         "contents": "ui:carousel$1>${2:Implements ui:scrollerEmbeddable.\t}</ui:carousel>"
      },
      {
         "trigger": "tag-ui-carousel\tFull",
         "contents": "ui:carousel height=\"${1:ui:carousel - Optional - Integer}\" width=\"${2:ui:carousel - Optional - Integer}\" pageModels=\"${3:ui:carousel - Optional - Object[]}\" pageComponents=\"${4:ui:carousel - Optional - Aura.Component[]}\" prefetchedTab=\"${5:ui:carousel - Optional - Aura.Component[]}\" isDotIndicator=\"${6:ui:carousel - Optional - Boolean}\" initialPage=\"${7:ui:carousel - Optional - String}\" prefetchFirstTab=\"${8:ui:carousel - Optional - Boolean}\" lazyLoadTabs=\"${9:ui:carousel - Optional - Boolean}\" indicatorStateClass=\"${10:ui:carousel - Optional - String}\" pageScrollerPlugins=\"${11:ui:carousel - Optional - String}\" justifyContent=\"${12:ui:carousel - Optional - String}\" prefetchedTabIndex=\"${13:ui:carousel - Optional - Integer}\" suppressIndicators=\"${14:ui:carousel - Optional - String}\" isScrollable=\"${15:ui:carousel - Optional - Boolean}\" bindEventsToScroller=\"${16:ui:carousel - Optional - Boolean}\" pageIndicatorComponent=\"${17:ui:carousel - Optional - Aura.Component[]}\" carouselPageComponent=\"${18:ui:carousel - Optional - Aura.ComponentDefRef[]}\">${19:Implements ui:scrollerEmbeddable.\t}</ui:carousel>"
      },
      {
         "trigger": "tag-ui-carouselDeprecated\tSimple",
         "contents": "ui:carouselDeprecated$1>${2:A tabset component that enables swiping through groups of related content types in addition to standard keyboard, touch, and mouse interactions. The carousel provides page indicators by default and supports horizontal overflow of pages.}</ui:carouselDeprecated>"
      },
      {
         "trigger": "tag-ui-carouselDeprecated\tFull",
         "contents": "ui:carouselDeprecated title=\"${1:ui:carouselDeprecated - Optional - String}\" width=\"${2:ui:carouselDeprecated - Optional - Integer}\" height=\"${3:ui:carouselDeprecated - Optional - Integer}\" useTransition=\"${4:ui:carouselDeprecated - Optional - Boolean}\" pageIndicatorPosition=\"${5:ui:carouselDeprecated - Optional - String}\" continuousFlow=\"${6:ui:carouselDeprecated - Optional - Boolean}\" defaultPage=\"${7:ui:carouselDeprecated - Optional - Integer}\" pageModels=\"${8:ui:carouselDeprecated - Optional - Object[]}\" pageComponents=\"${9:ui:carouselDeprecated - Optional - Aura.Component[]}\" navigationTabs=\"${10:ui:carouselDeprecated - Optional - Boolean}\" onPageChange=\"${11:ui:carouselDeprecated - Optional - Aura.Action}\" spinner=\"${12:ui:carouselDeprecated - Optional - Aura.Component[]}\" priv_currentPage=\"${13:ui:carouselDeprecated - Optional - Integer}\" priv_carouselStyle=\"${14:ui:carouselDeprecated - Optional - String}\" priv_scrollerWidth=\"${15:ui:carouselDeprecated - Optional - String}\" priv_snap=\"${16:ui:carouselDeprecated - Optional - String}\" priv_scrollContentClass=\"${17:ui:carouselDeprecated - Optional - String}\">${18:A tabset component that enables swiping through groups of related content types in addition to standard keyboard, touch, and mouse interactions. The carousel provides page indicators by default and supports horizontal overflow of pages.}</ui:carouselDeprecated>"
      },
      {
         "trigger": "tag-ui-carouselIndicator\tSimple",
         "contents": "ui:carouselIndicator$1>${2:}</ui:carouselIndicator>"
      },
      {
         "trigger": "tag-ui-carouselIndicator\tFull",
         "contents": "ui:carouselIndicator pageModels=\"${1:ui:carouselIndicator - Optional - Object[]}\" pageComponents=\"${2:ui:carouselIndicator - Optional - Object[]}\" justifyContent=\"${3:ui:carouselIndicator - Optional - String}\" isDotIndicator=\"${4:ui:carouselIndicator - Optional - Boolean}\">${5:}</ui:carouselIndicator>"
      },
      {
         "trigger": "tag-ui-carouselPage\tSimple",
         "contents": "ui:carouselPage$1>${2:}</ui:carouselPage>"
      },
      {
         "trigger": "tag-ui-carouselPage\tFull",
         "contents": "ui:carouselPage content=\"${1:ui:carouselPage - Optional - Object}\" pageIndex=\"${2:ui:carouselPage - Optional - Integer}\" scrollerPlugins=\"${3:ui:carouselPage - Optional - String}\" isContentLoaded=\"${4:ui:carouselPage - Optional - Boolean}\" isScrollable=\"${5:ui:carouselPage - Optional - Boolean}\" placeholder=\"${6:ui:carouselPage - Optional - Aura.ComponentDefRef[]}\">${7:}</ui:carouselPage>"
      },
      {
         "trigger": "tag-ui-carouselPageDeprecated\tSimple",
         "contents": "ui:carouselPageDeprecated$1>${2:A scrollable page in a ui:carousel component.}</ui:carouselPageDeprecated>"
      },
      {
         "trigger": "tag-ui-carouselPageDeprecated\tFull",
         "contents": "ui:carouselPageDeprecated title=\"${1:ui:carouselPageDeprecated - Optional - String}\" isCacheable=\"${2:ui:carouselPageDeprecated - Optional - Boolean}\" isDefault=\"${3:ui:carouselPageDeprecated - Optional - Boolean}\" pageModel=\"${4:ui:carouselPageDeprecated - Optional - Object}\" pageIndex=\"${5:ui:carouselPageDeprecated - Optional - Integer}\" isSelected=\"${6:ui:carouselPageDeprecated - Optional - Boolean}\" parent=\"${7:ui:carouselPageDeprecated - Optional - Aura.Component[]}\" priv_width=\"${8:ui:carouselPageDeprecated - Optional - Integer}\" priv_height=\"${9:ui:carouselPageDeprecated - Optional - Integer}\" priv_pageStyle=\"${10:ui:carouselPageDeprecated - Optional - String}\" priv_pageId=\"${11:ui:carouselPageDeprecated - Optional - String}\" priv_visible=\"${12:ui:carouselPageDeprecated - Optional - Boolean}\" priv_continuousFlow=\"${13:ui:carouselPageDeprecated - Optional - Boolean}\" priv_snap=\"${14:ui:carouselPageDeprecated - Optional - String}\" showPage=\"${15:ui:carouselPageDeprecated - Optional - Aura.Action}\">${16:A scrollable page in a ui:carousel component.}</ui:carouselPageDeprecated>"
      },
      {
         "trigger": "tag-ui-carouselPageIndicator\tSimple",
         "contents": "ui:carouselPageIndicator$1>${2:A container for ui:carouselPageIndicatorItem components. This component is not displayed if the carousel uses a continuous flow.}</ui:carouselPageIndicator>"
      },
      {
         "trigger": "tag-ui-carouselPageIndicator\tFull",
         "contents": "ui:carouselPageIndicator pageComponents=\"${1:ui:carouselPageIndicator - Optional - Aura.Component[]}\" currentPage=\"${2:ui:carouselPageIndicator - Optional - Integer}\" navigationTabs=\"${3:ui:carouselPageIndicator - Optional - Boolean}\">${4:A container for ui:carouselPageIndicatorItem components. This component is not displayed if the carousel uses a continuous flow.}</ui:carouselPageIndicator>"
      },
      {
         "trigger": "tag-ui-carouselPageIndicatorItem\tSimple",
         "contents": "ui:carouselPageIndicatorItem$1>${2:A carousel page indicator item which enables tabbing through the carousel pages. This component is used in a ui:carouselPageIndicator component.}</ui:carouselPageIndicatorItem>"
      },
      {
         "trigger": "tag-ui-carouselPageIndicatorItem\tFull",
         "contents": "ui:carouselPageIndicatorItem pageIndex=\"${1:ui:carouselPageIndicatorItem - Optional - Integer}\" title=\"${2:ui:carouselPageIndicatorItem - Optional - String}\" label=\"${3:ui:carouselPageIndicatorItem - Optional - String}\" navigationTab=\"${4:ui:carouselPageIndicatorItem - Optional - Boolean}\" priv_id=\"${5:ui:carouselPageIndicatorItem - Optional - String}\" priv_ariaSelected=\"${6:ui:carouselPageIndicatorItem - Optional - Boolean}\" priv_ariaControlId=\"${7:ui:carouselPageIndicatorItem - Optional - String}\" priv_tabIndex=\"${8:ui:carouselPageIndicatorItem - Optional - Integer}\" priv_pageComponent=\"${9:ui:carouselPageIndicatorItem - Optional - Object}\" priv_selectedClass=\"${10:ui:carouselPageIndicatorItem - Optional - String}\">${11:A carousel page indicator item which enables tabbing through the carousel pages. This component is used in a ui:carouselPageIndicator component.}</ui:carouselPageIndicatorItem>"
      },
      {
         "trigger": "tag-ui-checkboxMenuItem\tSimple",
         "contents": "ui:checkboxMenuItem$1>${2:​A menu item with a checkbox that supports multiple selection and can be used to invoke an action. This component is nested in a ui:menu component.}</ui:checkboxMenuItem>"
      },
      {
         "trigger": "tag-ui-checkboxMenuItem\tFull",
         "contents": "ui:checkboxMenuItem>${1:​A menu item with a checkbox that supports multiple selection and can be used to invoke an action. This component is nested in a ui:menu component.}</ui:checkboxMenuItem>"
      },
      {
         "trigger": "tag-ui-column\tSimple",
         "contents": "ui:column$1>${2:A column template used to define layout behavior in ui:listView.}</ui:column>"
      },
      {
         "trigger": "tag-ui-column\tFull",
         "contents": "ui:column>${1:A column template used to define layout behavior in ui:listView.}</ui:column>"
      },
      {
         "trigger": "tag-ui-dataGrid\tSimple",
         "contents": "ui:dataGrid$1>${2:Represents a table containing dynamic rows of data with inline edit support}</ui:dataGrid>"
      },
      {
         "trigger": "tag-ui-dataGrid\tFull",
         "contents": "ui:dataGrid summary=\"${1:ui:dataGrid - Optional - String}\">${2:Represents a table containing dynamic rows of data with inline edit support}</ui:dataGrid>"
      },
      {
         "trigger": "tag-ui-dataGridActionColumn\tSimple",
         "contents": "ui:dataGridActionColumn$1>${2:A column of actionable buttons or links in ui:dataGrid}</ui:dataGridActionColumn>"
      },
      {
         "trigger": "tag-ui-dataGridActionColumn\tFull",
         "contents": "ui:dataGridActionColumn name=\"${1:ui:dataGridActionColumn - Optional - String}\" label=\"${2:ui:dataGridActionColumn - Optional - String}\" class=\"${3:ui:dataGridActionColumn - Optional - String}\" scope=\"${4:ui:dataGridActionColumn - Optional - String}\" header=\"${5:ui:dataGridActionColumn - Optional - Aura.Component[]}\" outputComponent=\"${6:ui:dataGridActionColumn - Optional - Aura.ComponentDefRef[]}\" body=\"${7:ui:dataGridActionColumn - Optional - Aura.ComponentDefRef[]}\">${8:A column of actionable buttons or links in ui:dataGrid}</ui:dataGridActionColumn>"
      },
      {
         "trigger": "tag-ui-dataGridColumn\tSimple",
         "contents": "ui:dataGridColumn$1>${2:Implements ui:visible.\tA column of data in ui:dataGrid}</ui:dataGridColumn>"
      },
      {
         "trigger": "tag-ui-dataGridColumn\tFull",
         "contents": "ui:dataGridColumn name=\"${1:ui:dataGridColumn - Optional - String}\" label=\"${2:ui:dataGridColumn - Optional - String}\" type=\"${3:ui:dataGridColumn - Optional - String}\" sortable=\"${4:ui:dataGridColumn - Optional - Boolean}\" disabled=\"${5:ui:dataGridColumn - Optional - Boolean}\" required=\"${6:ui:dataGridColumn - Optional - Boolean}\" direction=\"${7:ui:dataGridColumn - Optional - String}\" initialDirectionOnSort=\"${8:ui:dataGridColumn - Optional - String}\" ascLabel=\"${9:ui:dataGridColumn - Optional - String}\" descLabel=\"${10:ui:dataGridColumn - Optional - String}\" order=\"${11:ui:dataGridColumn - Optional - Integer}\" scope=\"${12:ui:dataGridColumn - Optional - String}\" onsortchange=\"${13:ui:dataGridColumn - Optional - Aura.Action}\" outputComponent=\"${14:ui:dataGridColumn - Optional - Aura.ComponentDefRef[]}\">${15:Implements ui:visible.\tA column of data in ui:dataGrid}</ui:dataGridColumn>"
      },
      {
         "trigger": "tag-ui-dataGridSelectionColumn\tSimple",
         "contents": "ui:dataGridSelectionColumn$1>${2:A column of checkboxes for individual and multiple row selection in ui:dataGrid}</ui:dataGridSelectionColumn>"
      },
      {
         "trigger": "tag-ui-dataGridSelectionColumn\tFull",
         "contents": "ui:dataGridSelectionColumn selectAll=\"${1:ui:dataGridSelectionColumn - Optional - Boolean}\" outputComponent=\"${2:ui:dataGridSelectionColumn - Optional - Aura.ComponentDefRef[]}\">${3:A column of checkboxes for individual and multiple row selection in ui:dataGrid}</ui:dataGridSelectionColumn>"
      },
      {
         "trigger": "tag-ui-dataGridSummaryCell\tSimple",
         "contents": "ui:dataGridSummaryCell$1>${2:Implements ui:visible.\tA value rendered in the table footer that computes a given column in ui:dataGrid}</ui:dataGridSummaryCell>"
      },
      {
         "trigger": "tag-ui-dataGridSummaryCell\tFull",
         "contents": "ui:dataGridSummaryCell column=\"${1:ui:dataGridSummaryCell - Optional - String}\" type=\"${2:ui:dataGridSummaryCell - Optional - String}\" items=\"${3:ui:dataGridSummaryCell - Optional - List}\" value=\"${4:ui:dataGridSummaryCell - Optional - Integer}\" outputComponent=\"${5:ui:dataGridSummaryCell - Optional - Aura.ComponentDefRef[]}\" priv_outputComponent=\"${6:ui:dataGridSummaryCell - Optional - Aura.Component[]}\">${7:Implements ui:visible.\tA value rendered in the table footer that computes a given column in ui:dataGrid}</ui:dataGridSummaryCell>"
      },
      {
         "trigger": "tag-ui-dataProvider\tSimple",
         "contents": "ui:dataProvider$1>${2:Implements ui:dataProviderInterface,ui:pagingInterface,ui:sortingInterface,ui:searchInterface.\tA generic list data provider}</ui:dataProvider>"
      },
      {
         "trigger": "tag-ui-dataProvider\tFull",
         "contents": "ui:dataProvider>${1:Implements ui:dataProviderInterface,ui:pagingInterface,ui:sortingInterface,ui:searchInterface.\tA generic list data provider}</ui:dataProvider>"
      },
      {
         "trigger": "tag-ui-dataTable\tSimple",
         "contents": "ui:dataTable$1>${2:A table that displays an item of data per row, which is defined by iterating over the set of data. The body of <ui:dataTable> contains one or more <ui:dataTableRow> components.}</ui:dataTable>"
      },
      {
         "trigger": "tag-ui-dataTable\tFull",
         "contents": "ui:dataTable class=\"${1:ui:dataTable - Optional - String}\" items=\"${2:ui:dataTable - Optional - Object[]}\" noDataText=\"${3:ui:dataTable - Optional - String}\" headerValues=\"${4:ui:dataTable - Optional - String[]}\" striped=\"${5:ui:dataTable - Optional - Boolean}\">${6:A table that displays an item of data per row, which is defined by iterating over the set of data. The body of <ui:dataTable> contains one or more <ui:dataTableRow> components.}</ui:dataTable>"
      },
      {
         "trigger": "tag-ui-dataTableColumn\tSimple",
         "contents": "ui:dataTableColumn$1>${2:A column in a table. A <ui:dataTableColumn> component must be a child of a <ui:dataTableRow> component.}</ui:dataTableColumn>"
      },
      {
         "trigger": "tag-ui-dataTableColumn\tFull",
         "contents": "ui:dataTableColumn class=\"${1:ui:dataTableColumn - Optional - String}\" scope=\"${2:ui:dataTableColumn - Optional - String}\" headerValue=\"${3:ui:dataTableColumn - Optional - String}\">${4:A column in a table. A <ui:dataTableColumn> component must be a child of a <ui:dataTableRow> component.}</ui:dataTableColumn>"
      },
      {
         "trigger": "tag-ui-dataTableRow\tSimple",
         "contents": "ui:dataTableRow$1>${2:A row in a table. Must be used inside a <dataTable> component and can be used to nest <ui:dataTableColumn>.}</ui:dataTableRow>"
      },
      {
         "trigger": "tag-ui-dataTableRow\tFull",
         "contents": "ui:dataTableRow>${1:A row in a table. Must be used inside a <dataTable> component and can be used to nest <ui:dataTableColumn>.}</ui:dataTableRow>"
      },
      {
         "trigger": "tag-ui-dataWriter\tSimple",
         "contents": "ui:dataWriter$1>${2:}</ui:dataWriter>"
      },
      {
         "trigger": "tag-ui-dataWriter\tFull",
         "contents": "ui:dataWriter items=\"${1:ui:dataWriter - Optional - List}\" defaultFields=\"${2:ui:dataWriter - Optional - Map}\" sync=\"${3:ui:dataWriter - Optional - Boolean}\">${4:}</ui:dataWriter>"
      },
      {
         "trigger": "tag-ui-datePicker\tSimple",
         "contents": "ui:datePicker$1>${2:Implements ui:visible.\tRepresents a date picker, which can be used in input components such as ui:inputDate and ui:inputDateTime.}</ui:datePicker>"
      },
      {
         "trigger": "tag-ui-datePicker\tFull",
         "contents": "ui:datePicker hasTime=\"${1:ui:datePicker - Optional - Boolean}\" hours=\"${2:ui:datePicker - Optional - Integer}\" is24HourFormat=\"${3:ui:datePicker - Optional - Boolean}\" maxYear=\"${4:ui:datePicker - Optional - Integer}\" minYear=\"${5:ui:datePicker - Optional - Integer}\" minutes=\"${6:ui:datePicker - Optional - Integer}\" value=\"${7:ui:datePicker - Optional - String}\" visible=\"${8:ui:datePicker - Optional - Boolean}\" managed=\"${9:ui:datePicker - Optional - Boolean}\" referenceElement=\"${10:ui:datePicker - Optional - Object}\" showToday=\"${11:ui:datePicker - Optional - Boolean}\" hideOnSelect=\"${12:ui:datePicker - Optional - Boolean}\" setFocus=\"${13:ui:datePicker - Optional - Boolean}\" titleHeadingLevel=\"${14:ui:datePicker - Optional - String}\">${15:Implements ui:visible.\tRepresents a date picker, which can be used in input components such as ui:inputDate and ui:inputDateTime.}</ui:datePicker>"
      },
      {
         "trigger": "tag-ui-datePickerGrid\tSimple",
         "contents": "ui:datePickerGrid$1>${2:Provides the monthly grid view in a ui:datePicker component.}</ui:datePickerGrid>"
      },
      {
         "trigger": "tag-ui-datePickerGrid\tFull",
         "contents": "ui:datePickerGrid class=\"${1:ui:datePickerGrid - Optional - String}\" date=\"${2:ui:datePickerGrid - Optional - Integer}\" hasTime=\"${3:ui:datePickerGrid - Optional - Boolean}\" month=\"${4:ui:datePickerGrid - Optional - Integer}\" year=\"${5:ui:datePickerGrid - Optional - Integer}\" selectedDate=\"${6:ui:datePickerGrid - Optional - Date}\" setFocus=\"${7:ui:datePickerGrid - Optional - Boolean}\" rangeStart=\"${8:ui:datePickerGrid - Optional - String}\" rangeEnd=\"${9:ui:datePickerGrid - Optional - String}\" rangeClass=\"${10:ui:datePickerGrid - Optional - String}\">${11:Provides the monthly grid view in a ui:datePicker component.}</ui:datePickerGrid>"
      },
      {
         "trigger": "tag-ui-datePickerManager\tSimple",
         "contents": "ui:datePickerManager$1>${2:Represents a date picker manager that renders a single date picker for multiple date input components.}</ui:datePickerManager>"
      },
      {
         "trigger": "tag-ui-datePickerManager\tFull",
         "contents": "ui:datePickerManager>${1:Represents a date picker manager that renders a single date picker for multiple date input components.}</ui:datePickerManager>"
      },
      {
         "trigger": "tag-ui-dayInMonthCell\tSimple",
         "contents": "ui:dayInMonthCell$1>${2:Provides the date in a ui:datePickerGrid component.}</ui:dayInMonthCell>"
      },
      {
         "trigger": "tag-ui-dayInMonthCell\tFull",
         "contents": "ui:dayInMonthCell ariaSelected=\"${1:ui:dayInMonthCell - Optional - Boolean}\" tabIndex=\"${2:ui:dayInMonthCell - Optional - Integer}\" value=\"${3:ui:dayInMonthCell - Optional - Date}\">${4:Provides the date in a ui:datePickerGrid component.}</ui:dayInMonthCell>"
      },
      {
         "trigger": "tag-ui-dialog\tSimple",
         "contents": "ui:dialog$1>${2:A dialog window used for overlays or modals.}</ui:dialog>"
      },
      {
         "trigger": "tag-ui-dialog\tFull",
         "contents": "ui:dialog description=\"${1:ui:dialog - Required - String}\" title=\"${2:ui:dialog - Required - String}\" ariaRole=\"${3:ui:dialog - Optional - String}\" autoFocus=\"${4:ui:dialog - Optional - Boolean}\" buttons=\"${5:ui:dialog - Optional - Aura.Component[]}\" clickOutToClose=\"${6:ui:dialog - Optional - Boolean}\" isModal=\"${7:ui:dialog - Optional - Boolean}\" width=\"${8:ui:dialog - Optional - String}\" closeClass=\"${9:ui:dialog - Optional - String}\" closeLabel=\"${10:ui:dialog - Optional - String}\" closeTitle=\"${11:ui:dialog - Optional - String}\" dialogClass=\"${12:ui:dialog - Optional - String}\" maskClass=\"${13:ui:dialog - Optional - String}\">${14:A dialog window used for overlays or modals.}</ui:dialog>"
      },
      {
         "trigger": "tag-ui-dialogButtons\tSimple",
         "contents": "ui:dialogButtons$1>${2:A facet of ui:dialog to hold any buttons displayed at the bottom of the dialog window. This component comes with two default buttons, 'OK' and 'Cancel'. You can use zero or more of the default buttons, and/or provide your own custom buttons in this component's body.}</ui:dialogButtons>"
      },
      {
         "trigger": "tag-ui-dialogButtons\tFull",
         "contents": "ui:dialogButtons defaultButtons=\"${1:ui:dialogButtons - Optional - String}\" confirmClass=\"${2:ui:dialogButtons - Optional - String}\" confirmLabel=\"${3:ui:dialogButtons - Optional - String}\" confirmTitle=\"${4:ui:dialogButtons - Optional - String}\" cancelClass=\"${5:ui:dialogButtons - Optional - String}\" cancelLabel=\"${6:ui:dialogButtons - Optional - String}\" cancelTitle=\"${7:ui:dialogButtons - Optional - String}\">${8:A facet of ui:dialog to hold any buttons displayed at the bottom of the dialog window. This component comes with two default buttons, 'OK' and 'Cancel'. You can use zero or more of the default buttons, and/or provide your own custom buttons in this component's body.}</ui:dialogButtons>"
      },
      {
         "trigger": "tag-ui-dialogManager\tSimple",
         "contents": "ui:dialogManager$1>${2:Manages all instances of ui:dialog in an application, by handling visibility and all DOM events. One (and only one) instance of this component is required if you wish to use the ui:dialog component. We recommend putting the ui:dialogManager component at the end of your .app file.}</ui:dialogManager>"
      },
      {
         "trigger": "tag-ui-dialogManager\tFull",
         "contents": "ui:dialogManager>${1:Manages all instances of ui:dialog in an application, by handling visibility and all DOM events. One (and only one) instance of this component is required if you wish to use the ui:dialog component. We recommend putting the ui:dialogManager component at the end of your .app file.}</ui:dialogManager>"
      },
      {
         "trigger": "tag-ui-dragAndDropAccessibility\tSimple",
         "contents": "ui:dragAndDropAccessibility$1>${2:A drag and drop accessibility component.}</ui:dragAndDropAccessibility>"
      },
      {
         "trigger": "tag-ui-dragAndDropAccessibility\tFull",
         "contents": "ui:dragAndDropAccessibility>${1:A drag and drop accessibility component.}</ui:dragAndDropAccessibility>"
      },
      {
         "trigger": "tag-ui-dragAndDropAccessibilityMenu\tSimple",
         "contents": "ui:dragAndDropAccessibilityMenu$1>${2:A drag and drop accessibility component.}</ui:dragAndDropAccessibilityMenu>"
      },
      {
         "trigger": "tag-ui-dragAndDropAccessibilityMenu\tFull",
         "contents": "ui:dragAndDropAccessibilityMenu class=\"${1:ui:dragAndDropAccessibilityMenu - Optional - String}\">${2:A drag and drop accessibility component.}</ui:dragAndDropAccessibilityMenu>"
      },
      {
         "trigger": "tag-ui-draggable\tSimple",
         "contents": "ui:draggable$1>${2:Implements ui:hasContextComponent.\tA draggable component in drag and drop operation.}</ui:draggable>"
      },
      {
         "trigger": "tag-ui-draggable\tFull",
         "contents": "ui:draggable type=\"${1:ui:draggable - Optional - String}\" dataTransfer=\"${2:ui:draggable - Optional - Map}\" class=\"${3:ui:draggable - Optional - String}\" dragClass=\"${4:ui:draggable - Optional - String}\" dragAccessibilityClass=\"${5:ui:draggable - Optional - String}\" dragImageClass=\"${6:ui:draggable - Optional - String}\" disable=\"${7:ui:draggable - Optional - Boolean}\" accessibilityComponent=\"${8:ui:draggable - Optional - String}\">${9:Implements ui:hasContextComponent.\tA draggable component in drag and drop operation.}</ui:draggable>"
      },
      {
         "trigger": "tag-ui-dropzone\tSimple",
         "contents": "ui:dropzone$1>${2:Implements ui:hasContextComponent.\tComponent that could be a drop target in drag and drop operation.}</ui:dropzone>"
      },
      {
         "trigger": "tag-ui-dropzone\tFull",
         "contents": "ui:dropzone types=\"${1:ui:dropzone - Optional - String[]}\" dragOverInterval=\"${2:ui:dropzone - Optional - Integer}\" class=\"${3:ui:dropzone - Optional - String}\" dragOverClass=\"${4:ui:dropzone - Optional - String}\" dragOverAccessibilityClass=\"${5:ui:dropzone - Optional - String}\" label=\"${6:ui:dropzone - Optional - String}\">${7:Implements ui:hasContextComponent.\tComponent that could be a drop target in drag and drop operation.}</ui:dropzone>"
      },
      {
         "trigger": "tag-ui-fieldLabel\tSimple",
         "contents": "ui:fieldLabel$1>${2:The label displayed on a field component.}</ui:fieldLabel>"
      },
      {
         "trigger": "tag-ui-fieldLabel\tFull",
         "contents": "ui:fieldLabel>${1:The label displayed on a field component.}</ui:fieldLabel>"
      },
      {
         "trigger": "tag-ui-header\tSimple",
         "contents": "ui:header$1>${2:}</ui:header>"
      },
      {
         "trigger": "tag-ui-header\tFull",
         "contents": "ui:header>${1:}</ui:header>"
      },
      {
         "trigger": "tag-ui-image\tSimple",
         "contents": "ui:image$1>${2:An image that is rendered as an HTML <img> element. Use the alt attribute if imageType=\"informational\".}</ui:image>"
      },
      {
         "trigger": "tag-ui-image\tFull",
         "contents": "ui:image title=\"${1:ui:image - Optional - String}\" imageType=\"${2:ui:image - Optional - String}\" src=\"${3:ui:image - Optional - String}\" class=\"${4:ui:image - Optional - String}\" href=\"${5:ui:image - Optional - String}\" linkClass=\"${6:ui:image - Optional - String}\" alt=\"${7:ui:image - Optional - String}\" target=\"${8:ui:image - Optional - String}\">${9:An image that is rendered as an HTML <img> element. Use the alt attribute if imageType=\"informational\".}</ui:image>"
      },
      {
         "trigger": "tag-ui-infiniteList\tSimple",
         "contents": "ui:infiniteList$1>${2:Implements ui:scrollerEmbeddable.\tA list component that iterates over and displays the items in the ui:dataProvider component.}</ui:infiniteList>"
      },
      {
         "trigger": "tag-ui-infiniteList\tFull",
         "contents": "ui:infiniteList enableRowSwipe=\"${1:ui:infiniteList - Optional - Boolean}\">${2:Implements ui:scrollerEmbeddable.\tA list component that iterates over and displays the items in the ui:dataProvider component.}</ui:infiniteList>"
      },
      {
         "trigger": "tag-ui-infiniteListRow\tSimple",
         "contents": "ui:infiniteListRow$1>${2:}</ui:infiniteListRow>"
      },
      {
         "trigger": "tag-ui-infiniteListRow\tFull",
         "contents": "ui:infiniteListRow class=\"${1:ui:infiniteListRow - Optional - String}\" swipeBody=\"${2:ui:infiniteListRow - Optional - Aura.Component[]}\">${3:}</ui:infiniteListRow>"
      },
      {
         "trigger": "tag-ui-input\tSimple",
         "contents": "ui:input$1>${2:Implements ui:visible, ui:uiEvents.\tAn abstract class that is extended by input components such as ui:inputCheckbox and ui:inputText.}</ui:input>"
      },
      {
         "trigger": "tag-ui-input\tFull",
         "contents": "ui:input disableDoubleClicks=\"${1:ui:input - Optional - Boolean}\" showErrors=\"${2:ui:input - Optional - Boolean}\" errors=\"${3:ui:input - Optional - Object[]}\" errorComponent=\"${4:ui:input - Optional - Aura.Component[]}\" type=\"${5:ui:input - Optional - String}\" required=\"${6:ui:input - Optional - Boolean}\" updateOn=\"${7:ui:input - Optional - String}\" value=\"${8:ui:input - Optional - String}\" label=\"${9:ui:input - Optional - String}\" labelClass=\"${10:ui:input - Optional - String}\" labelPosition=\"${11:ui:input - Optional - String}\" labelTitle=\"${12:ui:input - Optional - String}\" requiredIndicatorClass=\"${13:ui:input - Optional - String}\" disabled=\"${14:ui:input - Optional - Boolean}\" domId=\"${15:ui:input - Optional - String}\" requiredIndicator=\"${16:ui:input - Optional - Aura.Component[]}\">${17:Implements ui:visible, ui:uiEvents.\tAn abstract class that is extended by input components such as ui:inputCheckbox and ui:inputText.}</ui:input>"
      },
      {
         "trigger": "tag-ui-inputCheckbox\tSimple",
         "contents": "ui:inputCheckbox$1>${2:Implements ui:inputBaseOption.\tRepresents a checkbox. Its behavior can be configured using events such as click and change.}</ui:inputCheckbox>"
      },
      {
         "trigger": "tag-ui-inputCheckbox\tFull",
         "contents": "ui:inputCheckbox updateOn=\"${1:ui:inputCheckbox - Optional - String}\">${2:Implements ui:inputBaseOption.\tRepresents a checkbox. Its behavior can be configured using events such as click and change.}</ui:inputCheckbox>"
      },
      {
         "trigger": "tag-ui-inputCurrency\tSimple",
         "contents": "ui:inputCurrency$1>${2:Implements ui:inputNumberComponent,ui:inputTextComponent.\tAn input field for entering a currency.}</ui:inputCurrency>"
      },
      {
         "trigger": "tag-ui-inputCurrency\tFull",
         "contents": "ui:inputCurrency>${1:Implements ui:inputNumberComponent,ui:inputTextComponent.\tAn input field for entering a currency.}</ui:inputCurrency>"
      },
      {
         "trigger": "tag-ui-inputDate\tSimple",
         "contents": "ui:inputDate$1>${2:Implements ui:inputDateComponent.\tAn input field for entering a date.}</ui:inputDate>"
      },
      {
         "trigger": "tag-ui-inputDate\tFull",
         "contents": "ui:inputDate placeholder=\"${1:ui:inputDate - Optional - String}\" loadDatePicker=\"${2:ui:inputDate - Optional - Boolean}\">${3:Implements ui:inputDateComponent.\tAn input field for entering a date.}</ui:inputDate>"
      },
      {
         "trigger": "tag-ui-inputDateRange\tSimple",
         "contents": "ui:inputDateRange$1>${2:Implements ui:inputDateComponent.\tA component for entering a date range.}</ui:inputDateRange>"
      },
      {
         "trigger": "tag-ui-inputDateRange\tFull",
         "contents": "ui:inputDateRange startInputPlaceholder=\"${1:ui:inputDateRange - Optional - String}\" endInputPlaceholder=\"${2:ui:inputDateRange - Optional - String}\" startDate=\"${3:ui:inputDateRange - Optional - String}\" endDate=\"${4:ui:inputDateRange - Optional - String}\">${5:Implements ui:inputDateComponent.\tA component for entering a date range.}</ui:inputDateRange>"
      },
      {
         "trigger": "tag-ui-inputDateTime\tSimple",
         "contents": "ui:inputDateTime$1>${2:Implements ui:inputDateComponent.\tAn input field for entering a date and time.}</ui:inputDateTime>"
      },
      {
         "trigger": "tag-ui-inputDateTime\tFull",
         "contents": "ui:inputDateTime value=\"${1:ui:inputDateTime - Optional - String}\" placeholder=\"${2:ui:inputDateTime - Optional - String}\" timezone=\"${3:ui:inputDateTime - Optional - String}\">${4:Implements ui:inputDateComponent.\tAn input field for entering a date and time.}</ui:inputDateTime>"
      },
      {
         "trigger": "tag-ui-inputDateTrigger\tSimple",
         "contents": "ui:inputDateTrigger$1>${2:Represents a date input component that can be used with the date picker manager, ui:datePickerManager.}</ui:inputDateTrigger>"
      },
      {
         "trigger": "tag-ui-inputDateTrigger\tFull",
         "contents": "ui:inputDateTrigger>${1:Represents a date input component that can be used with the date picker manager, ui:datePickerManager.}</ui:inputDateTrigger>"
      },
      {
         "trigger": "tag-ui-inputDefaultError\tSimple",
         "contents": "ui:inputDefaultError$1>${2:Implements ui:visible.\tThe default implementation of field-level errors, which iterates over the value and displays the message.}</ui:inputDefaultError>"
      },
      {
         "trigger": "tag-ui-inputDefaultError\tFull",
         "contents": "ui:inputDefaultError value=\"${1:ui:inputDefaultError - Optional - String[]}\" errors=\"${2:ui:inputDefaultError - Optional - Object[]}\" domId=\"${3:ui:inputDefaultError - Optional - String}\">${4:Implements ui:visible.\tThe default implementation of field-level errors, which iterates over the value and displays the message.}</ui:inputDefaultError>"
      },
      {
         "trigger": "tag-ui-inputEmail\tSimple",
         "contents": "ui:inputEmail$1>${2:Implements ui:inputTextComponent.\tRepresents an input field for entering an email address.}</ui:inputEmail>"
      },
      {
         "trigger": "tag-ui-inputEmail\tFull",
         "contents": "ui:inputEmail>${1:Implements ui:inputTextComponent.\tRepresents an input field for entering an email address.}</ui:inputEmail>"
      },
      {
         "trigger": "tag-ui-inputFile\tSimple",
         "contents": "ui:inputFile$1>${2:An HTML input element for specifying or uploading a file.}</ui:inputFile>"
      },
      {
         "trigger": "tag-ui-inputFile\tFull",
         "contents": "ui:inputFile>${1:An HTML input element for specifying or uploading a file.}</ui:inputFile>"
      },
      {
         "trigger": "tag-ui-inputNumber\tSimple",
         "contents": "ui:inputNumber$1>${2:Implements ui:inputNumberComponent,ui:inputTextComponent.\tAn input field for entering a number, taking advantage of client input assistance and validation when available.}</ui:inputNumber>"
      },
      {
         "trigger": "tag-ui-inputNumber\tFull",
         "contents": "ui:inputNumber>${1:Implements ui:inputNumberComponent,ui:inputTextComponent.\tAn input field for entering a number, taking advantage of client input assistance and validation when available.}</ui:inputNumber>"
      },
      {
         "trigger": "tag-ui-inputOption\tSimple",
         "contents": "ui:inputOption$1>${2:Implements ui:inputBaseOption.\tAn abstract component for input options with type checkbox, radio, or selectOption.}</ui:inputOption>"
      },
      {
         "trigger": "tag-ui-inputOption\tFull",
         "contents": "ui:inputOption type=\"${1:ui:inputOption - Optional - String}\">${2:Implements ui:inputBaseOption.\tAn abstract component for input options with type checkbox, radio, or selectOption.}</ui:inputOption>"
      },
      {
         "trigger": "tag-ui-inputPercent\tSimple",
         "contents": "ui:inputPercent$1>${2:Implements ui:inputNumberComponent,ui:inputTextComponent.\tAn input field for entering a percentage.}</ui:inputPercent>"
      },
      {
         "trigger": "tag-ui-inputPercent\tFull",
         "contents": "ui:inputPercent>${1:Implements ui:inputNumberComponent,ui:inputTextComponent.\tAn input field for entering a percentage.}</ui:inputPercent>"
      },
      {
         "trigger": "tag-ui-inputPhone\tSimple",
         "contents": "ui:inputPhone$1>${2:Implements ui:inputTextComponent.\tRepresents an input field for entering a telephone number.}</ui:inputPhone>"
      },
      {
         "trigger": "tag-ui-inputPhone\tFull",
         "contents": "ui:inputPhone>${1:Implements ui:inputTextComponent.\tRepresents an input field for entering a telephone number.}</ui:inputPhone>"
      },
      {
         "trigger": "tag-ui-inputRadio\tSimple",
         "contents": "ui:inputRadio$1>${2:Implements ui:inputBaseOption.\tThe radio button used in the input.}</ui:inputRadio>"
      },
      {
         "trigger": "tag-ui-inputRadio\tFull",
         "contents": "ui:inputRadio disabled=\"${1:ui:inputRadio - Optional - Boolean}\">${2:Implements ui:inputBaseOption.\tThe radio button used in the input.}</ui:inputRadio>"
      },
      {
         "trigger": "tag-ui-inputRange\tSimple",
         "contents": "ui:inputRange$1>${2:The range used in the input.}</ui:inputRange>"
      },
      {
         "trigger": "tag-ui-inputRange\tFull",
         "contents": "ui:inputRange min=\"${1:ui:inputRange - Optional - Integer}\" max=\"${2:ui:inputRange - Optional - Integer}\" step=\"${3:ui:inputRange - Optional - Integer}\" value=\"${4:ui:inputRange - Optional - Integer}\">${5:The range used in the input.}</ui:inputRange>"
      },
      {
         "trigger": "tag-ui-inputRichText\tSimple",
         "contents": "ui:inputRichText$1>${2:An input field for entering rich text.}</ui:inputRichText>"
      },
      {
         "trigger": "tag-ui-inputRichText\tFull",
         "contents": "ui:inputRichText toolbar=\"${1:ui:inputRichText - Optional - String}\" customToolbarConfig=\"${2:ui:inputRichText - Optional - Object}\" toolbarLocation=\"${3:ui:inputRichText - Optional - String}\" width=\"${4:ui:inputRichText - Optional - String}\" height=\"${5:ui:inputRichText - Optional - String}\" isRichText=\"${6:ui:inputRichText - Optional - Boolean}\">${7:An input field for entering rich text.}</ui:inputRichText>"
      },
      {
         "trigger": "tag-ui-inputSearch\tSimple",
         "contents": "ui:inputSearch$1>${2:Implements ui:inputTextComponent.\tThis component displays an input field suitable for entering a search string.}</ui:inputSearch>"
      },
      {
         "trigger": "tag-ui-inputSearch\tFull",
         "contents": "ui:inputSearch updateOn=\"${1:ui:inputSearch - Optional - String}\" type=\"${2:ui:inputSearch - Optional - String}\" placeholder=\"${3:ui:inputSearch - Optional - String}\" showClear=\"${4:ui:inputSearch - Optional - Boolean}\">${5:Implements ui:inputTextComponent.\tThis component displays an input field suitable for entering a search string.}</ui:inputSearch>"
      },
      {
         "trigger": "tag-ui-inputSecret\tSimple",
         "contents": "ui:inputSecret$1>${2:Implements ui:inputTextComponent.\tAn input field for entering secret text with type password.}</ui:inputSecret>"
      },
      {
         "trigger": "tag-ui-inputSecret\tFull",
         "contents": "ui:inputSecret>${1:Implements ui:inputTextComponent.\tAn input field for entering secret text with type password.}</ui:inputSecret>"
      },
      {
         "trigger": "tag-ui-inputSelect\tSimple",
         "contents": "ui:inputSelect$1>${2:Represents a drop-down list with options.}</ui:inputSelect>"
      },
      {
         "trigger": "tag-ui-inputSelect\tFull",
         "contents": "ui:inputSelect options=\"${1:ui:inputSelect - Optional - List}\" name=\"${2:ui:inputSelect - Optional - String}\" multiple=\"${3:ui:inputSelect - Optional - Boolean}\" size=\"${4:ui:inputSelect - Optional - Integer}\">${5:Represents a drop-down list with options.}</ui:inputSelect>"
      },
      {
         "trigger": "tag-ui-inputSelectOption\tSimple",
         "contents": "ui:inputSelectOption$1>${2:Implements ui:inputBaseOption.\tAn HTML option element that is nested in a <ui:inputSelect> element. Denotes the available options in the list.}</ui:inputSelectOption>"
      },
      {
         "trigger": "tag-ui-inputSelectOption\tFull",
         "contents": "ui:inputSelectOption>${1:Implements ui:inputBaseOption.\tAn HTML option element that is nested in a <ui:inputSelect> element. Denotes the available options in the list.}</ui:inputSelectOption>"
      },
      {
         "trigger": "tag-ui-inputSelectOptionGroup\tSimple",
         "contents": "ui:inputSelectOptionGroup$1>${2:An HTML optgroup element that groups related options in a <ui:inputSelect> element.}</ui:inputSelectOptionGroup>"
      },
      {
         "trigger": "tag-ui-inputSelectOptionGroup\tFull",
         "contents": "ui:inputSelectOptionGroup class=\"${1:ui:inputSelectOptionGroup - Optional - String}\" label=\"${2:ui:inputSelectOptionGroup - Optional - String}\">${3:An HTML optgroup element that groups related options in a <ui:inputSelect> element.}</ui:inputSelectOptionGroup>"
      },
      {
         "trigger": "tag-ui-inputText\tSimple",
         "contents": "ui:inputText$1>${2:Implements ui:inputTextComponent.\tRepresents an input field suitable for entering a single line of free-form text.}</ui:inputText>"
      },
      {
         "trigger": "tag-ui-inputText\tFull",
         "contents": "ui:inputText>${1:Implements ui:inputTextComponent.\tRepresents an input field suitable for entering a single line of free-form text.}</ui:inputText>"
      },
      {
         "trigger": "tag-ui-inputTextArea\tSimple",
         "contents": "ui:inputTextArea$1>${2:An HTML textarea element that can be editable or read-only. Scroll bars may not appear on Chrome browsers in Android devices, but you can select focus in the textarea to activate scrolling.}</ui:inputTextArea>"
      },
      {
         "trigger": "tag-ui-inputTextArea\tFull",
         "contents": "ui:inputTextArea rows=\"${1:ui:inputTextArea - Optional - Integer}\" cols=\"${2:ui:inputTextArea - Optional - Integer}\" readonly=\"${3:ui:inputTextArea - Optional - Boolean}\" placeholder=\"${4:ui:inputTextArea - Optional - String}\" resizable=\"${5:ui:inputTextArea - Optional - Boolean}\" maxlength=\"${6:ui:inputTextArea - Optional - Integer}\">${7:An HTML textarea element that can be editable or read-only. Scroll bars may not appear on Chrome browsers in Android devices, but you can select focus in the textarea to activate scrolling.}</ui:inputTextArea>"
      },
      {
         "trigger": "tag-ui-inputTextAreaForAutocomplete\tSimple",
         "contents": "ui:inputTextAreaForAutocomplete$1>${2:This component is used as input text area in a ui:autocomplete component.}</ui:inputTextAreaForAutocomplete>"
      },
      {
         "trigger": "tag-ui-inputTextAreaForAutocomplete\tFull",
         "contents": "ui:inputTextAreaForAutocomplete autocompleteButton=\"${1:ui:inputTextAreaForAutocomplete - Optional - Aura.Component[]}\" ariaExpanded=\"${2:ui:inputTextAreaForAutocomplete - Optional - String}\" ariaActiveDescendant=\"${3:ui:inputTextAreaForAutocomplete - Optional - String}\">${4:This component is used as input text area in a ui:autocomplete component.}</ui:inputTextAreaForAutocomplete>"
      },
      {
         "trigger": "tag-ui-inputTextForAutocomplete\tSimple",
         "contents": "ui:inputTextForAutocomplete$1>${2:Implements ui:inputTextComponent.\tThis component is used as input text in a ui:autocomplete component.}</ui:inputTextForAutocomplete>"
      },
      {
         "trigger": "tag-ui-inputTextForAutocomplete\tFull",
         "contents": "ui:inputTextForAutocomplete autocompleteButton=\"${1:ui:inputTextForAutocomplete - Optional - Aura.Component[]}\" ariaExpanded=\"${2:ui:inputTextForAutocomplete - Optional - String}\" ariaActiveDescendant=\"${3:ui:inputTextForAutocomplete - Optional - String}\">${4:Implements ui:inputTextComponent.\tThis component is used as input text in a ui:autocomplete component.}</ui:inputTextForAutocomplete>"
      },
      {
         "trigger": "tag-ui-inputURL\tSimple",
         "contents": "ui:inputURL$1>${2:Implements ui:inputTextComponent.\tAn input field for entering a URL.}</ui:inputURL>"
      },
      {
         "trigger": "tag-ui-inputURL\tFull",
         "contents": "ui:inputURL>${1:Implements ui:inputTextComponent.\tAn input field for entering a URL.}</ui:inputURL>"
      },
      {
         "trigger": "tag-ui-interactive\tSimple",
         "contents": "ui:interactive$1>${2:Implements ui:visible.\tAn abstract component which capsulates common events.}</ui:interactive>"
      },
      {
         "trigger": "tag-ui-interactive\tFull",
         "contents": "ui:interactive disabled=\"${1:ui:interactive - Optional - Boolean}\" disableDoubleClicks=\"${2:ui:interactive - Optional - Boolean}\">${3:Implements ui:visible.\tAn abstract component which capsulates common events.}</ui:interactive>"
      },
      {
         "trigger": "tag-ui-label\tSimple",
         "contents": "ui:label$1>${2:The label displayed on an input component. To bind a label to an input component, use the for attribute.}</ui:label>"
      },
      {
         "trigger": "tag-ui-label\tFull",
         "contents": "ui:label label=\"${1:ui:label - Optional - String}\" title=\"${2:ui:label - Optional - String}\" class=\"${3:ui:label - Optional - String}\" labelDisplay=\"${4:ui:label - Optional - Boolean}\" for=\"${5:ui:label - Optional - Object}\" requiredIndicator=\"${6:ui:label - Optional - Aura.Component[]}\">${7:The label displayed on an input component. To bind a label to an input component, use the for attribute.}</ui:label>"
      },
      {
         "trigger": "tag-ui-list\tSimple",
         "contents": "ui:list$1>${2:A list component that iterates over and displays the items in the ui:dataProvider component.}</ui:list>"
      },
      {
         "trigger": "tag-ui-list\tFull",
         "contents": "ui:list>${1:A list component that iterates over and displays the items in the ui:dataProvider component.}</ui:list>"
      },
      {
         "trigger": "tag-ui-listSorter\tSimple",
         "contents": "ui:listSorter$1>${2:This component provides the user selected items with sort order based on the data from the data provider.}</ui:listSorter>"
      },
      {
         "trigger": "tag-ui-listSorter\tFull",
         "contents": "ui:listSorter dataProvider=\"${1:ui:listSorter - Optional - Aura.Component[]}\" class=\"${2:ui:listSorter - Optional - String}\" title=\"${3:ui:listSorter - Optional - String}\" cancelLabel=\"${4:ui:listSorter - Optional - String}\" applyLabel=\"${5:ui:listSorter - Optional - String}\" visible=\"${6:ui:listSorter - Optional - Boolean}\" items=\"${7:ui:listSorter - Optional - Object[]}\" defaultSelectedItems=\"${8:ui:listSorter - Optional - Object}\" triggerLabel=\"${9:ui:listSorter - Optional - String}\" ascendingLabel=\"${10:ui:listSorter - Optional - String}\" descendingLabel=\"${11:ui:listSorter - Optional - String}\" trigger=\"${12:ui:listSorter - Optional - Aura.Component[]}\" modal=\"${13:ui:listSorter - Optional - Boolean}\" rowVar=\"${14:ui:listSorter - Optional - String}\" rowDef=\"${15:ui:listSorter - Optional - Aura.ComponentDefRef[]}\" onApply=\"${16:ui:listSorter - Optional - Aura.Action}\" onOpen=\"${17:ui:listSorter - Optional - Aura.Action}\" onCancel=\"${18:ui:listSorter - Optional - Aura.Action}\">${19:This component provides the user selected items with sort order based on the data from the data provider.}</ui:listSorter>"
      },
      {
         "trigger": "tag-ui-listView\tSimple",
         "contents": "ui:listView$1>${2:Implements ui:elementInterface.\tDeprecated. A column based listview with comprehensive event support.}</ui:listView>"
      },
      {
         "trigger": "tag-ui-listView\tFull",
         "contents": "ui:listView id=\"${1:ui:listView - Optional - String}\" alternateRowClass=\"${2:ui:listView - Optional - String}\" blockSize=\"${3:ui:listView - Optional - Integer}\" columns=\"${4:ui:listView - Optional - List}\" dataColumns=\"${5:ui:listView - Optional - List}\" dataTemplates=\"${6:ui:listView - Optional - List}\" emptyMessage=\"${7:ui:listView - Optional - String}\" footer=\"${8:ui:listView - Optional - Aura.Component[]}\" items=\"${9:ui:listView - Optional - List}\" rowClass=\"${10:ui:listView - Optional - String}\" rowTooltip=\"${11:ui:listView - Optional - String}\">${12:Implements ui:elementInterface.\tDeprecated. A column based listview with comprehensive event support.}</ui:listView>"
      },
      {
         "trigger": "tag-ui-listViewColumn\tSimple",
         "contents": "ui:listViewColumn$1>${2:Implements ui:elementInterface,ui:listViewColumnInterface.\tAn abstract column template component, used to specify column display information in ui:listView.}</ui:listViewColumn>"
      },
      {
         "trigger": "tag-ui-listViewColumn\tFull",
         "contents": "ui:listViewColumn column=\"${1:ui:listViewColumn - Optional - Object}\" index=\"${2:ui:listViewColumn - Optional - Integer}\" item=\"${3:ui:listViewColumn - Optional - Object}\" scope=\"${4:ui:listViewColumn - Optional - String}\" type=\"${5:ui:listViewColumn - Optional - String}\">${6:Implements ui:elementInterface,ui:listViewColumnInterface.\tAn abstract column template component, used to specify column display information in ui:listView.}</ui:listViewColumn>"
      },
      {
         "trigger": "tag-ui-listViewColumnCell\tSimple",
         "contents": "ui:listViewColumnCell$1>${2:A simple column template definition, describes a barebones table data cell.}</ui:listViewColumnCell>"
      },
      {
         "trigger": "tag-ui-listViewColumnCell\tFull",
         "contents": "ui:listViewColumnCell>${1:A simple column template definition, describes a barebones table data cell.}</ui:listViewColumnCell>"
      },
      {
         "trigger": "tag-ui-listViewColumnCheckbox\tSimple",
         "contents": "ui:listViewColumnCheckbox$1>${2:A checkbox column template definition, describes a checkbox in a table data cell.}</ui:listViewColumnCheckbox>"
      },
      {
         "trigger": "tag-ui-listViewColumnCheckbox\tFull",
         "contents": "ui:listViewColumnCheckbox label=\"${1:ui:listViewColumnCheckbox - Optional - String}\" labelClass=\"${2:ui:listViewColumnCheckbox - Optional - String}\" checked=\"${3:ui:listViewColumnCheckbox - Optional - Boolean}\">${4:A checkbox column template definition, describes a checkbox in a table data cell.}</ui:listViewColumnCheckbox>"
      },
      {
         "trigger": "tag-ui-listViewColumnEmail\tSimple",
         "contents": "ui:listViewColumnEmail$1>${2:An email column template definition, describes an email mailto: link reference in a table data cell.}</ui:listViewColumnEmail>"
      },
      {
         "trigger": "tag-ui-listViewColumnEmail\tFull",
         "contents": "ui:listViewColumnEmail text=\"${1:ui:listViewColumnEmail - Optional - String}\" url=\"${2:ui:listViewColumnEmail - Optional - String}\">${3:An email column template definition, describes an email mailto: link reference in a table data cell.}</ui:listViewColumnEmail>"
      },
      {
         "trigger": "tag-ui-listViewColumnHeader\tSimple",
         "contents": "ui:listViewColumnHeader$1>${2:A simple column template definition, describes a barebones table header cell.}</ui:listViewColumnHeader>"
      },
      {
         "trigger": "tag-ui-listViewColumnHeader\tFull",
         "contents": "ui:listViewColumnHeader>${1:A simple column template definition, describes a barebones table header cell.}</ui:listViewColumnHeader>"
      },
      {
         "trigger": "tag-ui-listViewColumnHtml\tSimple",
         "contents": "ui:listViewColumnHtml$1>${2:An html column template definition, describes unescaped markup in a table data cell.}</ui:listViewColumnHtml>"
      },
      {
         "trigger": "tag-ui-listViewColumnHtml\tFull",
         "contents": "ui:listViewColumnHtml markup=\"${1:ui:listViewColumnHtml - Optional - Object}\">${2:An html column template definition, describes unescaped markup in a table data cell.}</ui:listViewColumnHtml>"
      },
      {
         "trigger": "tag-ui-listViewColumnIndex\tSimple",
         "contents": "ui:listViewColumnIndex$1>${2:An index column template definition, describes the (one-based) number of the current item being processed in a table data cell.}</ui:listViewColumnIndex>"
      },
      {
         "trigger": "tag-ui-listViewColumnIndex\tFull",
         "contents": "ui:listViewColumnIndex>${1:An index column template definition, describes the (one-based) number of the current item being processed in a table data cell.}</ui:listViewColumnIndex>"
      },
      {
         "trigger": "tag-ui-listViewColumnLink\tSimple",
         "contents": "ui:listViewColumnLink$1>${2:A link column template definition, describes a hyperlink reference in a table data cell.}</ui:listViewColumnLink>"
      },
      {
         "trigger": "tag-ui-listViewColumnLink\tFull",
         "contents": "ui:listViewColumnLink target=\"${1:ui:listViewColumnLink - Optional - String}\" text=\"${2:ui:listViewColumnLink - Optional - String}\" url=\"${3:ui:listViewColumnLink - Optional - String}\">${4:A link column template definition, describes a hyperlink reference in a table data cell.}</ui:listViewColumnLink>"
      },
      {
         "trigger": "tag-ui-listViewRow\tSimple",
         "contents": "ui:listViewRow$1>${2:Implements ui:elementInterface.\tA basic row component used by the listView.}</ui:listViewRow>"
      },
      {
         "trigger": "tag-ui-listViewRow\tFull",
         "contents": "ui:listViewRow index=\"${1:ui:listViewRow - Optional - Integer}\" item=\"${2:ui:listViewRow - Optional - Object}\">${3:Implements ui:elementInterface.\tA basic row component used by the listView.}</ui:listViewRow>"
      },
      {
         "trigger": "tag-ui-manifest\tSimple",
         "contents": "ui:manifest$1>${2:}</ui:manifest>"
      },
      {
         "trigger": "tag-ui-manifest\tFull",
         "contents": "ui:manifest lastMod=\"${1:ui:manifest - Optional - String}\" resourceURLs=\"${2:ui:manifest - Optional - String}\">${3:}</ui:manifest>"
      },
      {
         "trigger": "tag-ui-menu\tSimple",
         "contents": "ui:menu$1>${2:Implements ui:visible.\tA dropdown menu list with a trigger that controls its visibility. Need to provide a menuTriggerLink and menuList component.}</ui:menu>"
      },
      {
         "trigger": "tag-ui-menu\tFull",
         "contents": "ui:menu>${1:Implements ui:visible.\tA dropdown menu list with a trigger that controls its visibility. Need to provide a menuTriggerLink and menuList component.}</ui:menu>"
      },
      {
         "trigger": "tag-ui-menuItem\tSimple",
         "contents": "ui:menuItem$1>${2:A UI menu item in a ui:menuList component.}</ui:menuItem>"
      },
      {
         "trigger": "tag-ui-menuItem\tFull",
         "contents": "ui:menuItem selected=\"${1:ui:menuItem - Optional - Boolean}\" type=\"${2:ui:menuItem - Optional - String}\" hideMenuAfterSelected=\"${3:ui:menuItem - Optional - Boolean}\" label=\"${4:ui:menuItem - Optional - String}\">${5:A UI menu item in a ui:menuList component.}</ui:menuItem>"
      },
      {
         "trigger": "tag-ui-menuItemSeparator\tSimple",
         "contents": "ui:menuItemSeparator$1>${2:Implements ui:visible.\tA menu separator to divide menu items, such as ui:radioMenuItem, and used in a ui:menuList component.}</ui:menuItemSeparator>"
      },
      {
         "trigger": "tag-ui-menuItemSeparator\tFull",
         "contents": "ui:menuItemSeparator>${1:Implements ui:visible.\tA menu separator to divide menu items, such as ui:radioMenuItem, and used in a ui:menuList component.}</ui:menuItemSeparator>"
      },
      {
         "trigger": "tag-ui-menuList\tSimple",
         "contents": "ui:menuList$1>${2:Implements ui:visible.\tA menu component that can contain menu items: ui:actionMenuItem, ui:checkboxMenuItem, and ui:radioMenuItem, and a separator component ui:menuItemSeparator. This component can be nested in a ui:menu component and can be used together with a ui:menuTriggerLink component, which triggers the menu items.}</ui:menuList>"
      },
      {
         "trigger": "tag-ui-menuList\tFull",
         "contents": "ui:menuList menuItems=\"${1:ui:menuList - Optional - List}\" visible=\"${2:ui:menuList - Optional - Boolean}\" focusItemIndex=\"${3:ui:menuList - Optional - Integer}\" focusTrigger=\"${4:ui:menuList - Optional - Aura.Action}\" childMenuItems=\"${5:ui:menuList - Optional - Aura.Component[]}\">${6:Implements ui:visible.\tA menu component that can contain menu items: ui:actionMenuItem, ui:checkboxMenuItem, and ui:radioMenuItem, and a separator component ui:menuItemSeparator. This component can be nested in a ui:menu component and can be used together with a ui:menuTriggerLink component, which triggers the menu items.}</ui:menuList>"
      },
      {
         "trigger": "tag-ui-menuTrigger\tSimple",
         "contents": "ui:menuTrigger$1>${2:A trigger that expands and collapses a menu, used in a ui:menu component.}</ui:menuTrigger>"
      },
      {
         "trigger": "tag-ui-menuTrigger\tFull",
         "contents": "ui:menuTrigger>${1:A trigger that expands and collapses a menu, used in a ui:menu component.}</ui:menuTrigger>"
      },
      {
         "trigger": "tag-ui-menuTriggerLink\tSimple",
         "contents": "ui:menuTriggerLink$1>${2:A link that triggers a dropdown menu.}</ui:menuTriggerLink>"
      },
      {
         "trigger": "tag-ui-menuTriggerLink\tFull",
         "contents": "ui:menuTriggerLink label=\"${1:ui:menuTriggerLink - Optional - String}\">${2:A link that triggers a dropdown menu.}</ui:menuTriggerLink>"
      },
      {
         "trigger": "tag-ui-message\tSimple",
         "contents": "ui:message$1>${2:Implements ui:visible.\tRepresents a message of varying severity levels}</ui:message>"
      },
      {
         "trigger": "tag-ui-message\tFull",
         "contents": "ui:message title=\"${1:ui:message - Optional - String}\" severity=\"${2:ui:message - Optional - String}\" closable=\"${3:ui:message - Optional - Boolean}\">${4:Implements ui:visible.\tRepresents a message of varying severity levels}</ui:message>"
      },
      {
         "trigger": "tag-ui-modal\tSimple",
         "contents": "ui:modal$1>${2:Implements ui:panelType.\t}</ui:modal>"
      },
      {
         "trigger": "tag-ui-modal\tFull",
         "contents": "ui:modal title=\"${1:ui:modal - Optional - String}\" titleDisplay=\"${2:ui:modal - Optional - Boolean}\" class=\"${3:ui:modal - Optional - String}\" startOfDialogLabel=\"${4:ui:modal - Optional - String}\" showCloseButton=\"${5:ui:modal - Optional - Boolean}\" closeDialogLabel=\"${6:ui:modal - Optional - String}\" useTransition=\"${7:ui:modal - Optional - Boolean}\" animation=\"${8:ui:modal - Optional - String}\" closeAnimation=\"${9:ui:modal - Optional - String}\" autoFocus=\"${10:ui:modal - Optional - Boolean}\" closeButton=\"${11:ui:modal - Optional - Aura.Component[]}\">${12:Implements ui:panelType.\t}</ui:modal>"
      },
      {
         "trigger": "tag-ui-output\tSimple",
         "contents": "ui:output$1>${2:The base component of most output components.}</ui:output>"
      },
      {
         "trigger": "tag-ui-output\tFull",
         "contents": "ui:output value=\"${1:ui:output - Required - Object}\">${2:The base component of most output components.}</ui:output>"
      },
      {
         "trigger": "tag-ui-outputCheckbox\tSimple",
         "contents": "ui:outputCheckbox$1>${2:Implements ui:visible.\tDisplays a checkbox in a checked or unchecked state.}</ui:outputCheckbox>"
      },
      {
         "trigger": "tag-ui-outputCheckbox\tFull",
         "contents": "ui:outputCheckbox value=\"${1:ui:outputCheckbox - Required - Boolean}\" altChecked=\"${2:ui:outputCheckbox - Optional - String}\" altUnchecked=\"${3:ui:outputCheckbox - Optional - String}\">${4:Implements ui:visible.\tDisplays a checkbox in a checked or unchecked state.}</ui:outputCheckbox>"
      },
      {
         "trigger": "tag-ui-outputCurrency\tSimple",
         "contents": "ui:outputCurrency$1>${2:Implements ui:visible.\tDisplays the currency in the default or specified format, such as with specific currency code or decimal places.}</ui:outputCurrency>"
      },
      {
         "trigger": "tag-ui-outputCurrency\tFull",
         "contents": "ui:outputCurrency value=\"${1:ui:outputCurrency - Required - Decimal}\" format=\"${2:ui:outputCurrency - Optional - String}\" currencyCode=\"${3:ui:outputCurrency - Optional - String}\" currencySymbol=\"${4:ui:outputCurrency - Optional - String}\">${5:Implements ui:visible.\tDisplays the currency in the default or specified format, such as with specific currency code or decimal places.}</ui:outputCurrency>"
      },
      {
         "trigger": "tag-ui-outputDate\tSimple",
         "contents": "ui:outputDate$1>${2:Implements ui:outputDateComponent, ui:visible.\tDisplays a date in the default or specified format based on the user's locale.}</ui:outputDate>"
      },
      {
         "trigger": "tag-ui-outputDate\tFull",
         "contents": "ui:outputDate value=\"${1:ui:outputDate - Required - String}\">${2:Implements ui:outputDateComponent, ui:visible.\tDisplays a date in the default or specified format based on the user's locale.}</ui:outputDate>"
      },
      {
         "trigger": "tag-ui-outputDateTime\tSimple",
         "contents": "ui:outputDateTime$1>${2:Implements ui:outputDateComponent, ui:visible.\tDisplays a date, time in a specified or default format based on the user's locale.}</ui:outputDateTime>"
      },
      {
         "trigger": "tag-ui-outputDateTime\tFull",
         "contents": "ui:outputDateTime value=\"${1:ui:outputDateTime - Required - String}\" timezone=\"${2:ui:outputDateTime - Optional - String}\">${3:Implements ui:outputDateComponent, ui:visible.\tDisplays a date, time in a specified or default format based on the user's locale.}</ui:outputDateTime>"
      },
      {
         "trigger": "tag-ui-outputEmail\tSimple",
         "contents": "ui:outputEmail$1>${2:Implements ui:visible.\tDisplays an email address in an HTML anchor (<a>) element. The leading and trailing space are trimmed.}</ui:outputEmail>"
      },
      {
         "trigger": "tag-ui-outputEmail\tFull",
         "contents": "ui:outputEmail value=\"${1:ui:outputEmail - Required - String}\">${2:Implements ui:visible.\tDisplays an email address in an HTML anchor (<a>) element. The leading and trailing space are trimmed.}</ui:outputEmail>"
      },
      {
         "trigger": "tag-ui-outputLabel\tSimple",
         "contents": "ui:outputLabel$1>${2:Implements ui:visible.\tDisplays an element label as specified by the value attribute.}</ui:outputLabel>"
      },
      {
         "trigger": "tag-ui-outputLabel\tFull",
         "contents": "ui:outputLabel>${1:Implements ui:visible.\tDisplays an element label as specified by the value attribute.}</ui:outputLabel>"
      },
      {
         "trigger": "tag-ui-outputMultiSelect\tSimple",
         "contents": "ui:outputMultiSelect$1>${2:Implements ui:visible.\tDisplays multiple values from a list of options.}</ui:outputMultiSelect>"
      },
      {
         "trigger": "tag-ui-outputMultiSelect\tFull",
         "contents": "ui:outputMultiSelect value=\"${1:ui:outputMultiSelect - Required - String[]}\" delimiter=\"${2:ui:outputMultiSelect - Optional - String}\">${3:Implements ui:visible.\tDisplays multiple values from a list of options.}</ui:outputMultiSelect>"
      },
      {
         "trigger": "tag-ui-outputNumber\tSimple",
         "contents": "ui:outputNumber$1>${2:Implements ui:visible.\tDisplays the number in the default or specified format. Supports up to 18 digits before the decimal place.}</ui:outputNumber>"
      },
      {
         "trigger": "tag-ui-outputNumber\tFull",
         "contents": "ui:outputNumber value=\"${1:ui:outputNumber - Required - Decimal}\" format=\"${2:ui:outputNumber - Optional - String}\">${3:Implements ui:visible.\tDisplays the number in the default or specified format. Supports up to 18 digits before the decimal place.}</ui:outputNumber>"
      },
      {
         "trigger": "tag-ui-outputPercent\tSimple",
         "contents": "ui:outputPercent$1>${2:Implements ui:visible.\tDisplays the percentage in the default or specified format with the user's locale.}</ui:outputPercent>"
      },
      {
         "trigger": "tag-ui-outputPercent\tFull",
         "contents": "ui:outputPercent value=\"${1:ui:outputPercent - Required - Decimal}\" format=\"${2:ui:outputPercent - Optional - String}\" valueScale=\"${3:ui:outputPercent - Optional - Integer}\">${4:Implements ui:visible.\tDisplays the percentage in the default or specified format with the user's locale.}</ui:outputPercent>"
      },
      {
         "trigger": "tag-ui-outputPhone\tSimple",
         "contents": "ui:outputPhone$1>${2:Implements ui:visible.\tDisplays the phone number in a URL link format.}</ui:outputPhone>"
      },
      {
         "trigger": "tag-ui-outputPhone\tFull",
         "contents": "ui:outputPhone value=\"${1:ui:outputPhone - Required - String}\">${2:Implements ui:visible.\tDisplays the phone number in a URL link format.}</ui:outputPhone>"
      },
      {
         "trigger": "tag-ui-outputRadio\tSimple",
         "contents": "ui:outputRadio$1>${2:Implements ui:visible.\tDisplays a radio button based on the value attribute.}</ui:outputRadio>"
      },
      {
         "trigger": "tag-ui-outputRadio\tFull",
         "contents": "ui:outputRadio>${1:Implements ui:visible.\tDisplays a radio button based on the value attribute.}</ui:outputRadio>"
      },
      {
         "trigger": "tag-ui-outputRichText\tSimple",
         "contents": "ui:outputRichText$1>${2:Implements ui:visible.\tDisplays richly-formatted text including tags such as paragraph, image, and hyperlink, as specified in the value attribute.}</ui:outputRichText>"
      },
      {
         "trigger": "tag-ui-outputRichText\tFull",
         "contents": "ui:outputRichText value=\"${1:ui:outputRichText - Optional - String}\" supportedTags=\"${2:ui:outputRichText - Optional - String}\">${3:Implements ui:visible.\tDisplays richly-formatted text including tags such as paragraph, image, and hyperlink, as specified in the value attribute.}</ui:outputRichText>"
      },
      {
         "trigger": "tag-ui-outputSelect\tSimple",
         "contents": "ui:outputSelect$1>${2:Implements ui:visible.\tDisplays a list of options based on the value attribute.}</ui:outputSelect>"
      },
      {
         "trigger": "tag-ui-outputSelect\tFull",
         "contents": "ui:outputSelect>${1:Implements ui:visible.\tDisplays a list of options based on the value attribute.}</ui:outputSelect>"
      },
      {
         "trigger": "tag-ui-outputText\tSimple",
         "contents": "ui:outputText$1>${2:Implements ui:visible.\tDisplays text as specified by the value attribute.}</ui:outputText>"
      },
      {
         "trigger": "tag-ui-outputText\tFull",
         "contents": "ui:outputText value=\"${1:ui:outputText - Required - String}\">${2:Implements ui:visible.\tDisplays text as specified by the value attribute.}</ui:outputText>"
      },
      {
         "trigger": "tag-ui-outputTextArea\tSimple",
         "contents": "ui:outputTextArea$1>${2:Implements ui:visible.\tDisplays the text area as specified by the value attribute.}</ui:outputTextArea>"
      },
      {
         "trigger": "tag-ui-outputTextArea\tFull",
         "contents": "ui:outputTextArea value=\"${1:ui:outputTextArea - Required - String}\">${2:Implements ui:visible.\tDisplays the text area as specified by the value attribute.}</ui:outputTextArea>"
      },
      {
         "trigger": "tag-ui-outputURL\tSimple",
         "contents": "ui:outputURL$1>${2:Implements ui:visible.\tDisplays a link to a URL as specified by the value attribute, rendered on a given text (label attribute) and image, if any.}</ui:outputURL>"
      },
      {
         "trigger": "tag-ui-outputURL\tFull",
         "contents": "ui:outputURL value=\"${1:ui:outputURL - Required - String}\" iconClass=\"${2:ui:outputURL - Optional - String}\" title=\"${3:ui:outputURL - Optional - String}\" target=\"${4:ui:outputURL - Optional - String}\" alt=\"${5:ui:outputURL - Optional - String}\" label=\"${6:ui:outputURL - Optional - String}\" disabled=\"${7:ui:outputURL - Optional - Boolean}\" stopPropagation=\"${8:ui:outputURL - Optional - Boolean}\" fixURL=\"${9:ui:outputURL - Optional - Boolean}\" stopNavigation=\"${10:ui:outputURL - Optional - Boolean}\">${11:Implements ui:visible.\tDisplays a link to a URL as specified by the value attribute, rendered on a given text (label attribute) and image, if any.}</ui:outputURL>"
      },
      {
         "trigger": "tag-ui-pager\tSimple",
         "contents": "ui:pager$1>${2:Implements ui:visible, ui:pagingInterface.\tAn abstract pager component, used to specify common behavior across implementations.}</ui:pager>"
      },
      {
         "trigger": "tag-ui-pager\tFull",
         "contents": "ui:pager>${1:Implements ui:visible, ui:pagingInterface.\tAn abstract pager component, used to specify common behavior across implementations.}</ui:pager>"
      },
      {
         "trigger": "tag-ui-pagerJumpToPage\tSimple",
         "contents": "ui:pagerJumpToPage$1>${2:A pager implementation that allows the user to navigate to any page between 1 and pageCount.}</ui:pagerJumpToPage>"
      },
      {
         "trigger": "tag-ui-pagerJumpToPage\tFull",
         "contents": "ui:pagerJumpToPage Labels_Page=\"${1:ui:pagerJumpToPage - Optional - String}\" Labels_Of=\"${2:ui:pagerJumpToPage - Optional - String}\">${3:A pager implementation that allows the user to navigate to any page between 1 and pageCount.}</ui:pagerJumpToPage>"
      },
      {
         "trigger": "tag-ui-pagerNextPrevious\tSimple",
         "contents": "ui:pagerNextPrevious$1>${2:A pager implementation that allows the user to navigate sequentially between pages or jump to the first or last page.}</ui:pagerNextPrevious>"
      },
      {
         "trigger": "tag-ui-pagerNextPrevious\tFull",
         "contents": "ui:pagerNextPrevious Labels_First=\"${1:ui:pagerNextPrevious - Optional - String}\" Labels_Last=\"${2:ui:pagerNextPrevious - Optional - String}\" Labels_Next=\"${3:ui:pagerNextPrevious - Optional - String}\" Labels_Previous=\"${4:ui:pagerNextPrevious - Optional - String}\">${5:A pager implementation that allows the user to navigate sequentially between pages or jump to the first or last page.}</ui:pagerNextPrevious>"
      },
      {
         "trigger": "tag-ui-pagerPageInfo\tSimple",
         "contents": "ui:pagerPageInfo$1>${2:A purely presentational pager implementation, used to display the current and total items.}</ui:pagerPageInfo>"
      },
      {
         "trigger": "tag-ui-pagerPageInfo\tFull",
         "contents": "ui:pagerPageInfo Labels_Of=\"${1:ui:pagerPageInfo - Optional - String}\" Labels_To=\"${2:ui:pagerPageInfo - Optional - String}\">${3:A purely presentational pager implementation, used to display the current and total items.}</ui:pagerPageInfo>"
      },
      {
         "trigger": "tag-ui-pagerPageSize\tSimple",
         "contents": "ui:pagerPageSize$1>${2:A pager implementation that allows the user to change the size of pages in items.}</ui:pagerPageSize>"
      },
      {
         "trigger": "tag-ui-pagerPageSize\tFull",
         "contents": "ui:pagerPageSize Labels_All=\"${1:ui:pagerPageSize - Optional - String}\" Labels_Records=\"${2:ui:pagerPageSize - Optional - String}\">${3:A pager implementation that allows the user to change the size of pages in items.}</ui:pagerPageSize>"
      },
      {
         "trigger": "tag-ui-panel\tSimple",
         "contents": "ui:panel$1>${2:Implements ui:panelType.\tA panel for dialogs. Use only one instance of ui:panelManager to manage your modal or non-modal dialogs.}</ui:panel>"
      },
      {
         "trigger": "tag-ui-panel\tFull",
         "contents": "ui:panel title=\"${1:ui:panel - Optional - String}\" class=\"${2:ui:panel - Optional - String}\" titleDisplay=\"${3:ui:panel - Optional - Boolean}\" startOfDialogLabel=\"${4:ui:panel - Optional - String}\" closeOnClickOut=\"${5:ui:panel - Optional - Boolean}\" closeAction=\"${6:ui:panel - Optional - Object}\" showCloseButton=\"${7:ui:panel - Optional - Boolean}\" closeDialogLabel=\"${8:ui:panel - Optional - String}\" useTransition=\"${9:ui:panel - Optional - Boolean}\" animation=\"${10:ui:panel - Optional - String}\" closeAnimation=\"${11:ui:panel - Optional - String}\" autoFocus=\"${12:ui:panel - Optional - Boolean}\" referenceElementSelector=\"${13:ui:panel - Optional - String}\" referenceElement=\"${14:ui:panel - Optional - Object}\" direction=\"${15:ui:panel - Optional - String}\" showPointer=\"${16:ui:panel - Optional - Boolean}\" closeButton=\"${17:ui:panel - Optional - Aura.Component[]}\">${18:Implements ui:panelType.\tA panel for dialogs. Use only one instance of ui:panelManager to manage your modal or non-modal dialogs.}</ui:panel>"
      },
      {
         "trigger": "tag-ui-panelDialog\tSimple",
         "contents": "ui:panelDialog$1>${2:A panel for dialogs. Use only one instance of ui:panelManager to manage your modal or non-modal dialogs.}</ui:panelDialog>"
      },
      {
         "trigger": "tag-ui-panelDialog\tFull",
         "contents": "ui:panelDialog closeOnClickOut=\"${1:ui:panelDialog - Optional - Boolean}\" showCloseButton=\"${2:ui:panelDialog - Optional - Boolean}\" closeAction=\"${3:ui:panelDialog - Optional - Aura.Action}\" class=\"${4:ui:panelDialog - Optional - String}\" animation=\"${5:ui:panelDialog - Optional - String}\" title=\"${6:ui:panelDialog - Optional - String}\" startOfDialogLabel=\"${7:ui:panelDialog - Optional - String}\" closeDialogLabel=\"${8:ui:panelDialog - Optional - String}\" detail=\"${9:ui:panelDialog - Optional - String}\" icon=\"${10:ui:panelDialog - Optional - Aura.Component[]}\" isVisible=\"${11:ui:panelDialog - Optional - Boolean}\" autoFocus=\"${12:ui:panelDialog - Optional - Boolean}\" titleDisplay=\"${13:ui:panelDialog - Optional - Boolean}\" isTransient=\"${14:ui:panelDialog - Optional - Boolean}\" isModal=\"${15:ui:panelDialog - Optional - Boolean}\" referenceElement=\"${16:ui:panelDialog - Optional - Object}\" callbacks=\"${17:ui:panelDialog - Optional - Object}\">${18:A panel for dialogs. Use only one instance of ui:panelManager to manage your modal or non-modal dialogs.}</ui:panelDialog>"
      },
      {
         "trigger": "tag-ui-panelManager\tSimple",
         "contents": "ui:panelManager$1>${2:A panel manager that instantiates and handles panels.}</ui:panelManager>"
      },
      {
         "trigger": "tag-ui-panelManager\tFull",
         "contents": "ui:panelManager class=\"${1:ui:panelManager - Optional - String}\" cancelButtonLabel=\"${2:ui:panelManager - Optional - String}\">${3:A panel manager that instantiates and handles panels.}</ui:panelManager>"
      },
      {
         "trigger": "tag-ui-panelManager2\tSimple",
         "contents": "ui:panelManager2$1>${2:Panel manager 2}</ui:panelManager2>"
      },
      {
         "trigger": "tag-ui-panelManager2\tFull",
         "contents": "ui:panelManager2 registeredPanels=\"${1:ui:panelManager2 - Optional - Aura.ComponentDefRef[]}\">${2:Panel manager 2}</ui:panelManager2>"
      },
      {
         "trigger": "tag-ui-pill\tSimple",
         "contents": "ui:pill$1>${2:Implements ui:visible, ui:focusable.\tA UI pill in a ui:pillContainer component}</ui:pill>"
      },
      {
         "trigger": "tag-ui-pill\tFull",
         "contents": "ui:pill label=\"${1:ui:pill - Optional - String}\" id=\"${2:ui:pill - Optional - String}\" showDelete=\"${3:ui:pill - Optional - Boolean}\" iconUrl=\"${4:ui:pill - Optional - String}\" accessibleDeleteLabel=\"${5:ui:pill - Optional - String}\" maxCharacters=\"${6:ui:pill - Optional - Integer}\">${7:Implements ui:visible, ui:focusable.\tA UI pill in a ui:pillContainer component}</ui:pill>"
      },
      {
         "trigger": "tag-ui-pillContainer\tSimple",
         "contents": "ui:pillContainer$1>${2:A container for ui:pill}</ui:pillContainer>"
      },
      {
         "trigger": "tag-ui-pillContainer\tFull",
         "contents": "ui:pillContainer items=\"${1:ui:pillContainer - Optional - List}\" maxAllowed=\"${2:ui:pillContainer - Optional - Integer}\" maxCharactersInPill=\"${3:ui:pillContainer - Optional - Integer}\" maxLines=\"${4:ui:pillContainer - Optional - Integer}\" focusOnInput=\"${5:ui:pillContainer - Optional - Boolean}\" allowRemove=\"${6:ui:pillContainer - Optional - Boolean}\" pillInput=\"${7:ui:pillContainer - Optional - Aura.Component[]}\" showMoreLabel=\"${8:ui:pillContainer - Optional - String}\" pillFlavor=\"${9:ui:pillContainer - Optional - String}\">${10:A container for ui:pill}</ui:pillContainer>"
      },
      {
         "trigger": "tag-ui-pillContainerAutoComplete\tSimple",
         "contents": "ui:pillContainerAutoComplete$1>${2:Implements ui:pillContainerInput.\tAuto complete component for use in a ui:pillContainer}</ui:pillContainerAutoComplete>"
      },
      {
         "trigger": "tag-ui-pillContainerAutoComplete\tFull",
         "contents": "ui:pillContainerAutoComplete allowNew=\"${1:ui:pillContainerAutoComplete - Optional - Boolean}\">${2:Implements ui:pillContainerInput.\tAuto complete component for use in a ui:pillContainer}</ui:pillContainerAutoComplete>"
      },
      {
         "trigger": "tag-ui-pillContainerAutoCompleteOption\tSimple",
         "contents": "ui:pillContainerAutoCompleteOption$1>${2:Auto complete component for use in a ui:pillContainer}</ui:pillContainerAutoCompleteOption>"
      },
      {
         "trigger": "tag-ui-pillContainerAutoCompleteOption\tFull",
         "contents": "ui:pillContainerAutoCompleteOption iconUrl=\"${1:ui:pillContainerAutoCompleteOption - Optional - String}\">${2:Auto complete component for use in a ui:pillContainer}</ui:pillContainerAutoCompleteOption>"
      },
      {
         "trigger": "tag-ui-popup\tSimple",
         "contents": "ui:popup$1>${2:Implements ui:visible.\tA popup with a trigger that controls its visibility. This is a base component for ui:menu and ui:panelDialog.}</ui:popup>"
      },
      {
         "trigger": "tag-ui-popup\tFull",
         "contents": "ui:popup>${1:Implements ui:visible.\tA popup with a trigger that controls its visibility. This is a base component for ui:menu and ui:panelDialog.}</ui:popup>"
      },
      {
         "trigger": "tag-ui-popupTarget\tSimple",
         "contents": "ui:popupTarget$1>${2:Implements ui:visible.\tA container that is displayed in response to a trigger event. If used in a mobile context, it is recommended that curtain be set to true to prevent nested iframes from consuming the closeOnClickOutside event.}</ui:popupTarget>"
      },
      {
         "trigger": "tag-ui-popupTarget\tFull",
         "contents": "ui:popupTarget visible=\"${1:ui:popupTarget - Optional - Boolean}\" closeOnTabKey=\"${2:ui:popupTarget - Optional - Boolean}\" autoPosition=\"${3:ui:popupTarget - Optional - Boolean}\" manualPosition=\"${4:ui:popupTarget - Optional - Boolean}\" attachToBody=\"${5:ui:popupTarget - Optional - Boolean}\" referenceElement=\"${6:ui:popupTarget - Optional - Object}\" curtain=\"${7:ui:popupTarget - Optional - Boolean}\" closeOnClickOutside=\"${8:ui:popupTarget - Optional - Boolean}\" closeOnClickInside=\"${9:ui:popupTarget - Optional - Boolean}\" preTransitionClass=\"${10:ui:popupTarget - Optional - String}\">${11:Implements ui:visible.\tA container that is displayed in response to a trigger event. If used in a mobile context, it is recommended that curtain be set to true to prevent nested iframes from consuming the closeOnClickOutside event.}</ui:popupTarget>"
      },
      {
         "trigger": "tag-ui-popupTrigger\tSimple",
         "contents": "ui:popupTrigger$1>${2:A trigger that expands and collapses a menu, used in a ui:menu component.}</ui:popupTrigger>"
      },
      {
         "trigger": "tag-ui-popupTrigger\tFull",
         "contents": "ui:popupTrigger title=\"${1:ui:popupTrigger - Optional - String}\" trigger=\"${2:ui:popupTrigger - Optional - Aura.Component[]}\" stopClickPropagation=\"${3:ui:popupTrigger - Optional - Boolean}\">${4:A trigger that expands and collapses a menu, used in a ui:menu component.}</ui:popupTrigger>"
      },
      {
         "trigger": "tag-ui-radioMenuItem\tSimple",
         "contents": "ui:radioMenuItem$1>${2:​A menu item with a radio button that indicates a mutually exclusive selection and can be used to invoke an action. This component is nested in a ui:menu component.}</ui:radioMenuItem>"
      },
      {
         "trigger": "tag-ui-radioMenuItem\tFull",
         "contents": "ui:radioMenuItem>${1:​A menu item with a radio button that indicates a mutually exclusive selection and can be used to invoke an action. This component is nested in a ui:menu component.}</ui:radioMenuItem>"
      },
      {
         "trigger": "tag-ui-radioToggleMenuItem\tSimple",
         "contents": "ui:radioToggleMenuItem$1>${2:​A menu item that indicates a mutually exclusive selection + toggle state. This component is nested in a ui:menu component.}</ui:radioToggleMenuItem>"
      },
      {
         "trigger": "tag-ui-radioToggleMenuItem\tFull",
         "contents": "ui:radioToggleMenuItem isAscending=\"${1:ui:radioToggleMenuItem - Optional - Boolean}\" ascLabel=\"${2:ui:radioToggleMenuItem - Optional - String}\" descLabel=\"${3:ui:radioToggleMenuItem - Optional - String}\">${4:​A menu item that indicates a mutually exclusive selection + toggle state. This component is nested in a ui:menu component.}</ui:radioToggleMenuItem>"
      },
      {
         "trigger": "tag-ui-resizeObserver\tSimple",
         "contents": "ui:resizeObserver$1>${2:Detects a window resize or orientation change event and runs the updateSize controller method. Ensures the order of component composition.}</ui:resizeObserver>"
      },
      {
         "trigger": "tag-ui-resizeObserver\tFull",
         "contents": "ui:resizeObserver onresize=\"${1:ui:resizeObserver - Optional - Aura.Action}\">${2:Detects a window resize or orientation change event and runs the updateSize controller method. Ensures the order of component composition.}</ui:resizeObserver>"
      },
      {
         "trigger": "tag-ui-scroller\tSimple",
         "contents": "ui:scroller$1>${2:A scrollable view with scroll bars and pull-to-refresh support}</ui:scroller>"
      },
      {
         "trigger": "tag-ui-scroller\tFull",
         "contents": "ui:scroller scroll=\"${1:ui:scroller - Optional - String}\" enabled=\"${2:ui:scroller - Optional - Boolean}\" useCSSTransition=\"${3:ui:scroller - Optional - Boolean}\" useNativeScroller=\"${4:ui:scroller - Optional - Boolean}\" preventNestedScroll=\"${5:ui:scroller - Optional - Boolean}\" preventDefaultOnMove=\"${6:ui:scroller - Optional - Boolean}\" debounce=\"${7:ui:scroller - Optional - Boolean}\" snap=\"${8:ui:scroller - Optional - Boolean}\" endless=\"${9:ui:scroller - Optional - Boolean}\" snapType=\"${10:ui:scroller - Optional - String}\" plugins=\"${11:ui:scroller - Optional - String}\" gpuOptimization=\"${12:ui:scroller - Optional - Boolean}\" bindEventsToScroller=\"${13:ui:scroller - Optional - Boolean}\" showScrollbars=\"${14:ui:scroller - Optional - Boolean}\" canShowMore=\"${15:ui:scroller - Optional - Boolean}\" canRefresh=\"${16:ui:scroller - Optional - Boolean}\" width=\"${17:ui:scroller - Optional - Integer}\" height=\"${18:ui:scroller - Optional - Integer}\" itemWidth=\"${19:ui:scroller - Optional - Integer}\" itemHeight=\"${20:ui:scroller - Optional - Integer}\" class=\"${21:ui:scroller - Optional - String}\" scrollContentClass=\"${22:ui:scroller - Optional - String}\" minThreshold=\"${23:ui:scroller - Optional - Integer}\" minDirectionThreshold=\"${24:ui:scroller - Optional - Integer}\" lockOnDirection=\"${25:ui:scroller - Optional - String}\" onBeforeScrollStart=\"${26:ui:scroller - Optional - Aura.Action}\" onScrollStart=\"${27:ui:scroller - Optional - Aura.Action}\" onScrollEnd=\"${28:ui:scroller - Optional - Aura.Action}\" onScrollMove=\"${29:ui:scroller - Optional - Aura.Action}\" onPullToShowMore=\"${30:ui:scroller - Optional - Aura.Action}\" onPullToRefresh=\"${31:ui:scroller - Optional - Aura.Action}\" infiniteLoading=\"${32:ui:scroller - Optional - Boolean}\" infiniteLoadingThreshold=\"${33:ui:scroller - Optional - Integer}\" infiniteLoadingDataProvider=\"${34:ui:scroller - Optional - Aura.Action}\" pullToShowMoreClick=\"${35:ui:scroller - Optional - String}\" pullToShowMorePull=\"${36:ui:scroller - Optional - String}\" pullToShowMoreRelease=\"${37:ui:scroller - Optional - String}\" pullToShowMoreUpdating=\"${38:ui:scroller - Optional - String}\" pullToShowMoreSubtitle=\"${39:ui:scroller - Optional - String}\" pullToShowMoreError=\"${40:ui:scroller - Optional - String}\" pullToRefreshClick=\"${41:ui:scroller - Optional - String}\" pullToRefreshPull=\"${42:ui:scroller - Optional - String}\" pullToRefreshRelease=\"${43:ui:scroller - Optional - String}\" pullToRefreshUpdating=\"${44:ui:scroller - Optional - String}\" pullToRefreshError=\"${45:ui:scroller - Optional - String}\" pullToRefreshSubtitle=\"${46:ui:scroller - Optional - String}\" scrollButtonUp=\"${47:ui:scroller - Optional - String}\" scrollButtonDown=\"${48:ui:scroller - Optional - String}\" scrollButtonLeft=\"${49:ui:scroller - Optional - String}\" scrollButtonRight=\"${50:ui:scroller - Optional - String}\" supportVoiceOver=\"${51:ui:scroller - Optional - Boolean}\">${52:A scrollable view with scroll bars and pull-to-refresh support}</ui:scroller>"
      },
      {
         "trigger": "tag-ui-scrollerDeprecated\tSimple",
         "contents": "ui:scrollerDeprecated$1>${2:Deprecated and replaced by ui:scroller.}</ui:scrollerDeprecated>"
      },
      {
         "trigger": "tag-ui-scrollerDeprecated\tFull",
         "contents": "ui:scrollerDeprecated hScroll=\"${1:ui:scrollerDeprecated - Optional - Boolean}\" vScroll=\"${2:ui:scrollerDeprecated - Optional - Boolean}\" showScrollbars=\"${3:ui:scrollerDeprecated - Optional - Boolean}\" enabled=\"${4:ui:scrollerDeprecated - Optional - Boolean}\" useTransform=\"${5:ui:scrollerDeprecated - Optional - Boolean}\" useTransition=\"${6:ui:scrollerDeprecated - Optional - Boolean}\" snap=\"${7:ui:scrollerDeprecated - Optional - String}\" width=\"${8:ui:scrollerDeprecated - Optional - String}\" class=\"${9:ui:scrollerDeprecated - Optional - String}\" scrollContentClass=\"${10:ui:scrollerDeprecated - Optional - String}\" onBeforeScrollStart=\"${11:ui:scrollerDeprecated - Optional - Aura.Action}\" onScrollStart=\"${12:ui:scrollerDeprecated - Optional - Aura.Action}\" onScrollEnd=\"${13:ui:scrollerDeprecated - Optional - Aura.Action}\" onScrollMove=\"${14:ui:scrollerDeprecated - Optional - Aura.Action}\" onScrollToBottom=\"${15:ui:scrollerDeprecated - Optional - Aura.Action}\" scrollToBottomThreshold=\"${16:ui:scrollerDeprecated - Optional - Integer}\" onPullToShowMore=\"${17:ui:scrollerDeprecated - Optional - Aura.Action}\" pullToShowMorePull=\"${18:ui:scrollerDeprecated - Optional - String}\" pullToShowMoreRelease=\"${19:ui:scrollerDeprecated - Optional - String}\" pullToShowMoreUpdating=\"${20:ui:scrollerDeprecated - Optional - String}\" pullToShowMoreSubtitle=\"${21:ui:scrollerDeprecated - Optional - String}\" canShowMore=\"${22:ui:scrollerDeprecated - Optional - Boolean}\" onPullToRefresh=\"${23:ui:scrollerDeprecated - Optional - Aura.Action}\" pullToRefreshPull=\"${24:ui:scrollerDeprecated - Optional - String}\" pullToRefreshRelease=\"${25:ui:scrollerDeprecated - Optional - String}\" pullToRefreshUpdating=\"${26:ui:scrollerDeprecated - Optional - String}\" pullToRefreshSubtitle=\"${27:ui:scrollerDeprecated - Optional - String}\" canRefresh=\"${28:ui:scrollerDeprecated - Optional - Boolean}\" extendedPullContent=\"${29:ui:scrollerDeprecated - Optional - Aura.Component[]}\" stopEventPropagation=\"${30:ui:scrollerDeprecated - Optional - Boolean}\" checkDOMChanges=\"${31:ui:scrollerDeprecated - Optional - Boolean}\" bindEventsToScroller=\"${32:ui:scrollerDeprecated - Optional - Boolean}\">${33:Deprecated and replaced by ui:scroller.}</ui:scrollerDeprecated>"
      },
      {
         "trigger": "tag-ui-spinner\tSimple",
         "contents": "ui:spinner$1>${2:A loading spinner to be used while the real component body is being loaded}</ui:spinner>"
      },
      {
         "trigger": "tag-ui-spinner\tFull",
         "contents": "ui:spinner isVisible=\"${1:ui:spinner - Optional - Boolean}\">${2:A loading spinner to be used while the real component body is being loaded}</ui:spinner>"
      },
      {
         "trigger": "tag-ui-stamp\tSimple",
         "contents": "ui:stamp$1>${2:Implements ui:visible.\tA decorated stamp containing text}</ui:stamp>"
      },
      {
         "trigger": "tag-ui-stamp\tFull",
         "contents": "ui:stamp severity=\"${1:ui:stamp - Optional - String}\" title=\"${2:ui:stamp - Optional - String}\" onclick=\"${3:ui:stamp - Optional - Aura.Action}\">${4:Implements ui:visible.\tA decorated stamp containing text}</ui:stamp>"
      },
      {
         "trigger": "tag-ui-tab\tSimple",
         "contents": "ui:tab$1>${2:A single tab that is nested in a ui:tabset component.}</ui:tab>"
      },
      {
         "trigger": "tag-ui-tab\tFull",
         "contents": "ui:tab class=\"${1:ui:tab - Optional - String}\" title=\"${2:ui:tab - Optional - String}\" name=\"${3:ui:tab - Optional - String}\" icon=\"${4:ui:tab - Optional - Aura.Component[]}\" scroll=\"${5:ui:tab - Optional - Boolean}\" active=\"${6:ui:tab - Optional - Boolean}\" iconClass=\"${7:ui:tab - Optional - String}\" closable=\"${8:ui:tab - Optional - Boolean}\" ariaControlId=\"${9:ui:tab - Optional - String}\">${10:A single tab that is nested in a ui:tabset component.}</ui:tab>"
      },
      {
         "trigger": "tag-ui-tabBar\tSimple",
         "contents": "ui:tabBar$1>${2:A list wrapper for tabs in a ui:tabset component}</ui:tabBar>"
      },
      {
         "trigger": "tag-ui-tabBar\tFull",
         "contents": "ui:tabBar tabs=\"${1:ui:tabBar - Optional - List}\" class=\"${2:ui:tabBar - Optional - String}\" useOverflowMenu=\"${3:ui:tabBar - Optional - Boolean}\" overflowLabel=\"${4:ui:tabBar - Optional - String}\" barWidth=\"${5:ui:tabBar - Optional - Integer}\" tabItemWidth=\"${6:ui:tabBar - Optional - Integer}\">${7:A list wrapper for tabs in a ui:tabset component}</ui:tabBar>"
      },
      {
         "trigger": "tag-ui-tabItem\tSimple",
         "contents": "ui:tabItem$1>${2:A tab that is rendered by the ui:tabBar component}</ui:tabItem>"
      },
      {
         "trigger": "tag-ui-tabItem\tFull",
         "contents": "ui:tabItem class=\"${1:ui:tabItem - Optional - String}\" title=\"${2:ui:tabItem - Optional - String}\" name=\"${3:ui:tabItem - Optional - String}\" icon=\"${4:ui:tabItem - Optional - Aura.Component[]}\" active=\"${5:ui:tabItem - Optional - Boolean}\" hidden=\"${6:ui:tabItem - Optional - Boolean}\" iconClass=\"${7:ui:tabItem - Optional - String}\" closable=\"${8:ui:tabItem - Optional - Boolean}\" ariaControlId=\"${9:ui:tabItem - Optional - String}\">${10:A tab that is rendered by the ui:tabBar component}</ui:tabItem>"
      },
      {
         "trigger": "tag-ui-tabOverflowMenuItem\tSimple",
         "contents": "ui:tabOverflowMenuItem$1>${2:A tab that is rendered by the ui:tabBar component for its overflow menu}</ui:tabOverflowMenuItem>"
      },
      {
         "trigger": "tag-ui-tabOverflowMenuItem\tFull",
         "contents": "ui:tabOverflowMenuItem class=\"${1:ui:tabOverflowMenuItem - Optional - String}\" title=\"${2:ui:tabOverflowMenuItem - Optional - String}\" icon=\"${3:ui:tabOverflowMenuItem - Optional - Aura.Component[]}\" active=\"${4:ui:tabOverflowMenuItem - Optional - Boolean}\" iconClass=\"${5:ui:tabOverflowMenuItem - Optional - String}\" ariaControlId=\"${6:ui:tabOverflowMenuItem - Optional - String}\" menuItems=\"${7:ui:tabOverflowMenuItem - Optional - Object[]}\">${8:A tab that is rendered by the ui:tabBar component for its overflow menu}</ui:tabOverflowMenuItem>"
      },
      {
         "trigger": "tag-ui-tabOverflowMenuList\tSimple",
         "contents": "ui:tabOverflowMenuList$1>${2:An extension of ui:menuList to add custom keyboard interactions for a tab overflow menu}</ui:tabOverflowMenuList>"
      },
      {
         "trigger": "tag-ui-tabOverflowMenuList\tFull",
         "contents": "ui:tabOverflowMenuList>${1:An extension of ui:menuList to add custom keyboard interactions for a tab overflow menu}</ui:tabOverflowMenuList>"
      },
      {
         "trigger": "tag-ui-tabset\tSimple",
         "contents": "ui:tabset$1>${2:Implements ui:visible.\tA tab set that displays a list of tabs in an unordered list.}</ui:tabset>"
      },
      {
         "trigger": "tag-ui-tabset\tFull",
         "contents": "ui:tabset tabs=\"${1:ui:tabset - Optional - List}\" class=\"${2:ui:tabset - Optional - String}\" lazyRenderTabs=\"${3:ui:tabset - Optional - Boolean}\" useOverflowMenu=\"${4:ui:tabset - Optional - Boolean}\" barWidth=\"${5:ui:tabset - Optional - Integer}\" tabItemWidth=\"${6:ui:tabset - Optional - Integer}\" overflowLabel=\"${7:ui:tabset - Optional - String}\">${8:Implements ui:visible.\tA tab set that displays a list of tabs in an unordered list.}</ui:tabset>"
      },
      {
         "trigger": "tag-ui-timePicker\tSimple",
         "contents": "ui:timePicker$1>${2:Implements ui:visible.\tA time picker which can be used in datePicker to select both date and time}</ui:timePicker>"
      },
      {
         "trigger": "tag-ui-timePicker\tFull",
         "contents": "ui:timePicker hours=\"${1:ui:timePicker - Optional - Integer}\" is24HourFormat=\"${2:ui:timePicker - Optional - Boolean}\" isValid=\"${3:ui:timePicker - Optional - Boolean}\" minutes=\"${4:ui:timePicker - Optional - Integer}\" visible=\"${5:ui:timePicker - Optional - Boolean}\">${6:Implements ui:visible.\tA time picker which can be used in datePicker to select both date and time}</ui:timePicker>"
      },
      {
         "trigger": "tag-ui-toolbar\tSimple",
         "contents": "ui:toolbar$1>${2:A horizontal toolbar that is displayed as an HTML menu element.}</ui:toolbar>"
      },
      {
         "trigger": "tag-ui-toolbar\tFull",
         "contents": "ui:toolbar class=\"${1:ui:toolbar - Optional - String}\">${2:A horizontal toolbar that is displayed as an HTML menu element.}</ui:toolbar>"
      },
      {
         "trigger": "tag-ui-tooltip\tSimple",
         "contents": "ui:tooltip$1>${2:}</ui:tooltip>"
      },
      {
         "trigger": "tag-ui-tooltip\tFull",
         "contents": "ui:tooltip tooltipBody=\"${1:ui:tooltip - Optional - String}\" disabled=\"${2:ui:tooltip - Optional - Boolean}\" advanced=\"${3:ui:tooltip - Optional - Boolean}\" trigger=\"${4:ui:tooltip - Optional - String}\" triggerClass=\"${5:ui:tooltip - Optional - String}\" isVisible=\"${6:ui:tooltip - Optional - Boolean}\" fadeOut=\"${7:ui:tooltip - Optional - Boolean}\" fadeIn=\"${8:ui:tooltip - Optional - Boolean}\" fadeOutDuration=\"${9:ui:tooltip - Optional - Integer}\" fadeInDuration=\"${10:ui:tooltip - Optional - Integer}\" delay=\"${11:ui:tooltip - Optional - Integer}\" class=\"${12:ui:tooltip - Optional - String}\" tabIndex=\"${13:ui:tooltip - Optional - Integer}\" direction=\"${14:ui:tooltip - Optional - String}\" domId=\"${15:ui:tooltip - Optional - String}\">${16:}</ui:tooltip>"
      },
      {
         "trigger": "tag-ui-tree\tSimple",
         "contents": "ui:tree$1>${2:}</ui:tree>"
      },
      {
         "trigger": "tag-ui-tree\tFull",
         "contents": "ui:tree nodes=\"${1:ui:tree - Optional - java://List<aura.components.ui.TreeNode>}\" class=\"${2:ui:tree - Optional - String}\" activeNode=\"${3:ui:tree - Optional - Aura.Component}\">${4:}</ui:tree>"
      },
      {
         "trigger": "tag-ui-treeNode\tSimple",
         "contents": "ui:treeNode$1>${2:Implements ui:visitable.\t}</ui:treeNode>"
      },
      {
         "trigger": "tag-ui-treeNode\tFull",
         "contents": "ui:treeNode href=\"${1:ui:treeNode - Optional - String}\" title=\"${2:ui:treeNode - Optional - String}\" leafClass=\"${3:ui:treeNode - Optional - String}\" class=\"${4:ui:treeNode - Optional - String}\" expanded=\"${5:ui:treeNode - Optional - Boolean}\" active=\"${6:ui:treeNode - Optional - Boolean}\" hidden=\"${7:ui:treeNode - Optional - Boolean}\" item=\"${8:ui:treeNode - Optional - java://org.auraframework.components.ui.TreeNode}\">${9:Implements ui:visitable.\t}</ui:treeNode>"
      },
      {
         "trigger": "tag-ui-underConstruction\tSimple",
         "contents": "ui:underConstruction$1>${2:Displays “Unsupported” if the short attribute is set to true.}</ui:underConstruction>"
      },
      {
         "trigger": "tag-ui-underConstruction\tFull",
         "contents": "ui:underConstruction short=\"${1:ui:underConstruction - Optional - Boolean}\">${2:Displays “Unsupported” if the short attribute is set to true.}</ui:underConstruction>"
      },
      {
         "trigger": "tag-ui-vbox\tSimple",
         "contents": "ui:vbox$1>${2:This container component creates a vertical box area on a page with simple wrapper HTML.}</ui:vbox>"
      },
      {
         "trigger": "tag-ui-vbox\tFull",
         "contents": "ui:vbox north=\"${1:ui:vbox - Optional - Aura.Component[]}\" south=\"${2:ui:vbox - Optional - Aura.Component[]}\" centerClass=\"${3:ui:vbox - Optional - String}\">${4:This container component creates a vertical box area on a page with simple wrapper HTML.}</ui:vbox>"
      },
      {
         "trigger": "tag-ui-virtualDataGrid\tSimple",
         "contents": "ui:virtualDataGrid$1>${2:}</ui:virtualDataGrid>"
      },
      {
         "trigger": "tag-ui-virtualDataGrid\tFull",
         "contents": "ui:virtualDataGrid sortBy=\"${1:ui:virtualDataGrid - Optional - String}\" class=\"${2:ui:virtualDataGrid - Optional - String}\" items=\"${3:ui:virtualDataGrid - Optional - List}\" headerColumns=\"${4:ui:virtualDataGrid - Optional - Aura.Component[]}\" columns=\"${5:ui:virtualDataGrid - Optional - Aura.ComponentDefRef[]}\" columnsEdit=\"${6:ui:virtualDataGrid - Optional - Aura.ComponentDefRef[]}\" dataModel=\"${7:ui:virtualDataGrid - Optional - Aura.Component[]}\" itemVar=\"${8:ui:virtualDataGrid - Optional - String}\" fixedHeader=\"${9:ui:virtualDataGrid - Optional - Boolean}\">${10:}</ui:virtualDataGrid>"
      },
      {
         "trigger": "tag-ui-virtualList\tSimple",
         "contents": "ui:virtualList$1>${2:Implements ui:scrollerEmbeddable.\tAura Virtual List}</ui:virtualList>"
      },
      {
         "trigger": "tag-ui-virtualList\tFull",
         "contents": "ui:virtualList itemTemplate=\"${1:ui:virtualList - Required - Aura.ComponentDefRef[]}\" itemVar=\"${2:ui:virtualList - Required - String}\" items=\"${3:ui:virtualList - Optional - Object[]}\" forceRender=\"${4:ui:virtualList - Optional - Boolean}\" dataProvider=\"${5:ui:virtualList - Optional - Aura.Component[]}\">${6:Implements ui:scrollerEmbeddable.\tAura Virtual List}</ui:virtualList>"
      },
      {
         "trigger": "tag-uiExamples-autocompleteDataProvider\tSimple",
         "contents": "uiExamples:autocompleteDataProvider$1>${2:}</uiExamples:autocompleteDataProvider>"
      },
      {
         "trigger": "tag-uiExamples-autocompleteDataProvider\tFull",
         "contents": "uiExamples:autocompleteDataProvider size=\"${1:uiExamples:autocompleteDataProvider - Optional - Integer}\">${2:}</uiExamples:autocompleteDataProvider>"
      },
      {
         "trigger": "tag-uiExamples-autocompleteExample\tSimple",
         "contents": "uiExamples:autocompleteExample$1>${2:}</uiExamples:autocompleteExample>"
      },
      {
         "trigger": "tag-uiExamples-autocompleteExample\tFull",
         "contents": "uiExamples:autocompleteExample autocompleteValue=\"${1:uiExamples:autocompleteExample - Optional - String}\" autocompleteExtendedOptsValue=\"${2:uiExamples:autocompleteExample - Optional - String}\" classes=\"${3:uiExamples:autocompleteExample - Optional - Boolean}\">${4:}</uiExamples:autocompleteExample>"
      },
      {
         "trigger": "tag-uiExamples-autocompleteOptionExample\tSimple",
         "contents": "uiExamples:autocompleteOptionExample$1>${2:This component provides a custom representation of a list item in an ui:autocomplete component.}</uiExamples:autocompleteOptionExample>"
      },
      {
         "trigger": "tag-uiExamples-autocompleteOptionExample\tFull",
         "contents": "uiExamples:autocompleteOptionExample>${1:This component provides a custom representation of a list item in an ui:autocomplete component.}</uiExamples:autocompleteOptionExample>"
      },
      {
         "trigger": "tag-uiExamples-autocompleteOptionExampleExtended\tSimple",
         "contents": "uiExamples:autocompleteOptionExampleExtended$1>${2:This component provides a custom representation of a list item in an ui:autocomplete component.}</uiExamples:autocompleteOptionExampleExtended>"
      },
      {
         "trigger": "tag-uiExamples-autocompleteOptionExampleExtended\tFull",
         "contents": "uiExamples:autocompleteOptionExampleExtended>${1:This component provides a custom representation of a list item in an ui:autocomplete component.}</uiExamples:autocompleteOptionExampleExtended>"
      },
      {
         "trigger": "tag-uiExamples-buttonExample\tSimple",
         "contents": "uiExamples:buttonExample$1>${2:}</uiExamples:buttonExample>"
      },
      {
         "trigger": "tag-uiExamples-buttonExample\tFull",
         "contents": "uiExamples:buttonExample>${1:}</uiExamples:buttonExample>"
      },
      {
         "trigger": "tag-uiExamples-checkbox\tSimple",
         "contents": "uiExamples:checkbox$1>${2:}</uiExamples:checkbox>"
      },
      {
         "trigger": "tag-uiExamples-checkbox\tFull",
         "contents": "uiExamples:checkbox myBool=\"${1:uiExamples:checkbox - Optional - Boolean}\">${2:}</uiExamples:checkbox>"
      },
      {
         "trigger": "tag-uiExamples-currency\tSimple",
         "contents": "uiExamples:currency$1>${2:}</uiExamples:currency>"
      },
      {
         "trigger": "tag-uiExamples-currency\tFull",
         "contents": "uiExamples:currency>${1:}</uiExamples:currency>"
      },
      {
         "trigger": "tag-uiExamples-dataGridDynamicColumns\tSimple",
         "contents": "uiExamples:dataGridDynamicColumns$1>${2:}</uiExamples:dataGridDynamicColumns>"
      },
      {
         "trigger": "tag-uiExamples-dataGridDynamicColumns\tFull",
         "contents": "uiExamples:dataGridDynamicColumns sortBy=\"${1:uiExamples:dataGridDynamicColumns - Optional - String}\" pageSize=\"${2:uiExamples:dataGridDynamicColumns - Optional - Integer}\" currentPage=\"${3:uiExamples:dataGridDynamicColumns - Optional - Integer}\" totalItems=\"${4:uiExamples:dataGridDynamicColumns - Optional - Integer}\" index=\"${5:uiExamples:dataGridDynamicColumns - Optional - Integer}\" count=\"${6:uiExamples:dataGridDynamicColumns - Optional - Integer}\">${7:}</uiExamples:dataGridDynamicColumns>"
      },
      {
         "trigger": "tag-uiExamples-dataGridKitchenSink\tSimple",
         "contents": "uiExamples:dataGridKitchenSink$1>${2:}</uiExamples:dataGridKitchenSink>"
      },
      {
         "trigger": "tag-uiExamples-dataGridKitchenSink\tFull",
         "contents": "uiExamples:dataGridKitchenSink mode=\"${1:uiExamples:dataGridKitchenSink - Optional - String}\" sortBy=\"${2:uiExamples:dataGridKitchenSink - Optional - String}\" pageSize=\"${3:uiExamples:dataGridKitchenSink - Optional - Integer}\" currentPage=\"${4:uiExamples:dataGridKitchenSink - Optional - Integer}\" totalItems=\"${5:uiExamples:dataGridKitchenSink - Optional - Integer}\" index=\"${6:uiExamples:dataGridKitchenSink - Optional - Integer}\" count=\"${7:uiExamples:dataGridKitchenSink - Optional - Integer}\" className=\"${8:uiExamples:dataGridKitchenSink - Optional - String}\" rowIndex=\"${9:uiExamples:dataGridKitchenSink - Optional - Integer}\" gridItems=\"${10:uiExamples:dataGridKitchenSink - Optional - List}\" gridSelectedItems=\"${11:uiExamples:dataGridKitchenSink - Optional - List}\">${12:}</uiExamples:dataGridKitchenSink>"
      },
      {
         "trigger": "tag-uiExamples-dataGridKitchenSinkDataProvider\tSimple",
         "contents": "uiExamples:dataGridKitchenSinkDataProvider$1>${2:}</uiExamples:dataGridKitchenSinkDataProvider>"
      },
      {
         "trigger": "tag-uiExamples-dataGridKitchenSinkDataProvider\tFull",
         "contents": "uiExamples:dataGridKitchenSinkDataProvider sortBy=\"${1:uiExamples:dataGridKitchenSinkDataProvider - Optional - String}\" empty=\"${2:uiExamples:dataGridKitchenSinkDataProvider - Optional - Boolean}\" throwError=\"${3:uiExamples:dataGridKitchenSinkDataProvider - Optional - Boolean}\">${4:}</uiExamples:dataGridKitchenSinkDataProvider>"
      },
      {
         "trigger": "tag-uiExamples-dataProviderExample\tSimple",
         "contents": "uiExamples:dataProviderExample$1>${2:Implements ui:pagingInterface, ui:scrollerEmbeddable.\t}</uiExamples:dataProviderExample>"
      },
      {
         "trigger": "tag-uiExamples-dataProviderExample\tFull",
         "contents": "uiExamples:dataProviderExample>${1:Implements ui:pagingInterface, ui:scrollerEmbeddable.\t}</uiExamples:dataProviderExample>"
      },
      {
         "trigger": "tag-uiExamples-date\tSimple",
         "contents": "uiExamples:date$1>${2:}</uiExamples:date>"
      },
      {
         "trigger": "tag-uiExamples-date\tFull",
         "contents": "uiExamples:date today=\"${1:uiExamples:date - Optional - Date}\">${2:}</uiExamples:date>"
      },
      {
         "trigger": "tag-uiExamples-datePicker\tSimple",
         "contents": "uiExamples:datePicker$1>${2:}</uiExamples:datePicker>"
      },
      {
         "trigger": "tag-uiExamples-datePicker\tFull",
         "contents": "uiExamples:datePicker selectedDate=\"${1:uiExamples:datePicker - Optional - Date}\">${2:}</uiExamples:datePicker>"
      },
      {
         "trigger": "tag-uiExamples-datetime\tSimple",
         "contents": "uiExamples:datetime$1>${2:}</uiExamples:datetime>"
      },
      {
         "trigger": "tag-uiExamples-datetime\tFull",
         "contents": "uiExamples:datetime today=\"${1:uiExamples:datetime - Optional - Date}\">${2:}</uiExamples:datetime>"
      },
      {
         "trigger": "tag-uiExamples-detailPopover\tSimple",
         "contents": "uiExamples:detailPopover$1>${2:}</uiExamples:detailPopover>"
      },
      {
         "trigger": "tag-uiExamples-detailPopover\tFull",
         "contents": "uiExamples:detailPopover>${1:}</uiExamples:detailPopover>"
      },
      {
         "trigger": "tag-uiExamples-dragAndDropExample\tSimple",
         "contents": "uiExamples:dragAndDropExample$1>${2:}</uiExamples:dragAndDropExample>"
      },
      {
         "trigger": "tag-uiExamples-dragAndDropExample\tFull",
         "contents": "uiExamples:dragAndDropExample>${1:}</uiExamples:dragAndDropExample>"
      },
      {
         "trigger": "tag-uiExamples-dragAndDropProvider\tSimple",
         "contents": "uiExamples:dragAndDropProvider$1>${2:}</uiExamples:dragAndDropProvider>"
      },
      {
         "trigger": "tag-uiExamples-dragAndDropProvider\tFull",
         "contents": "uiExamples:dragAndDropProvider prefix=\"${1:uiExamples:dragAndDropProvider - Optional - String}\" count=\"${2:uiExamples:dragAndDropProvider - Optional - Integer}\">${3:}</uiExamples:dragAndDropProvider>"
      },
      {
         "trigger": "tag-uiExamples-email\tSimple",
         "contents": "uiExamples:email$1>${2:}</uiExamples:email>"
      },
      {
         "trigger": "tag-uiExamples-email\tFull",
         "contents": "uiExamples:email>${1:}</uiExamples:email>"
      },
      {
         "trigger": "tag-uiExamples-infiniteDataProvider\tSimple",
         "contents": "uiExamples:infiniteDataProvider$1>${2:}</uiExamples:infiniteDataProvider>"
      },
      {
         "trigger": "tag-uiExamples-infiniteDataProvider\tFull",
         "contents": "uiExamples:infiniteDataProvider listType=\"${1:uiExamples:infiniteDataProvider - Optional - String}\">${2:}</uiExamples:infiniteDataProvider>"
      },
      {
         "trigger": "tag-uiExamples-infiniteList\tSimple",
         "contents": "uiExamples:infiniteList$1>${2:}</uiExamples:infiniteList>"
      },
      {
         "trigger": "tag-uiExamples-infiniteList\tFull",
         "contents": "uiExamples:infiniteList>${1:}</uiExamples:infiniteList>"
      },
      {
         "trigger": "tag-uiExamples-infiniteListDataProvider\tSimple",
         "contents": "uiExamples:infiniteListDataProvider$1>${2:}</uiExamples:infiniteListDataProvider>"
      },
      {
         "trigger": "tag-uiExamples-infiniteListDataProvider\tFull",
         "contents": "uiExamples:infiniteListDataProvider>${1:}</uiExamples:infiniteListDataProvider>"
      },
      {
         "trigger": "tag-uiExamples-infiniteListRow\tSimple",
         "contents": "uiExamples:infiniteListRow$1>${2:}</uiExamples:infiniteListRow>"
      },
      {
         "trigger": "tag-uiExamples-infiniteListRow\tFull",
         "contents": "uiExamples:infiniteListRow item=\"${1:uiExamples:infiniteListRow - Optional - Object}\">${2:}</uiExamples:infiniteListRow>"
      },
      {
         "trigger": "tag-uiExamples-inputExample\tSimple",
         "contents": "uiExamples:inputExample$1>${2:}</uiExamples:inputExample>"
      },
      {
         "trigger": "tag-uiExamples-inputExample\tFull",
         "contents": "uiExamples:inputExample today=\"${1:uiExamples:inputExample - Optional - Date}\" deadline=\"${2:uiExamples:inputExample - Optional - Date}\" display=\"${3:uiExamples:inputExample - Optional - Boolean}\">${4:}</uiExamples:inputExample>"
      },
      {
         "trigger": "tag-uiExamples-inputNumberExample\tSimple",
         "contents": "uiExamples:inputNumberExample$1>${2:}</uiExamples:inputNumberExample>"
      },
      {
         "trigger": "tag-uiExamples-inputNumberExample\tFull",
         "contents": "uiExamples:inputNumberExample>${1:}</uiExamples:inputNumberExample>"
      },
      {
         "trigger": "tag-uiExamples-inputTextExample\tSimple",
         "contents": "uiExamples:inputTextExample$1>${2:}</uiExamples:inputTextExample>"
      },
      {
         "trigger": "tag-uiExamples-inputTextExample\tFull",
         "contents": "uiExamples:inputTextExample>${1:}</uiExamples:inputTextExample>"
      },
      {
         "trigger": "tag-uiExamples-iterationExample\tSimple",
         "contents": "uiExamples:iterationExample$1>${2:}</uiExamples:iterationExample>"
      },
      {
         "trigger": "tag-uiExamples-iterationExample\tFull",
         "contents": "uiExamples:iterationExample>${1:}</uiExamples:iterationExample>"
      },
      {
         "trigger": "tag-uiExamples-libraryExample\tSimple",
         "contents": "uiExamples:libraryExample$1>${2:}</uiExamples:libraryExample>"
      },
      {
         "trigger": "tag-uiExamples-libraryExample\tFull",
         "contents": "uiExamples:libraryExample message=\"${1:uiExamples:libraryExample - Optional - String}\">${2:}</uiExamples:libraryExample>"
      },
      {
         "trigger": "tag-uiExamples-mobileViewport\tSimple",
         "contents": "uiExamples:mobileViewport$1>${2:A component to remove the boilerplate neccessary for a mobile demo.}</uiExamples:mobileViewport>"
      },
      {
         "trigger": "tag-uiExamples-mobileViewport\tFull",
         "contents": "uiExamples:mobileViewport>${1:A component to remove the boilerplate neccessary for a mobile demo.}</uiExamples:mobileViewport>"
      },
      {
         "trigger": "tag-uiExamples-modalContent\tSimple",
         "contents": "uiExamples:modalContent$1>${2:}</uiExamples:modalContent>"
      },
      {
         "trigger": "tag-uiExamples-modalContent\tFull",
         "contents": "uiExamples:modalContent>${1:}</uiExamples:modalContent>"
      },
      {
         "trigger": "tag-uiExamples-outputExample\tSimple",
         "contents": "uiExamples:outputExample$1>${2:}</uiExamples:outputExample>"
      },
      {
         "trigger": "tag-uiExamples-outputExample\tFull",
         "contents": "uiExamples:outputExample myText=\"${1:uiExamples:outputExample - Optional - String}\" myNum=\"${2:uiExamples:outputExample - Optional - Decimal}\" myCurr=\"${3:uiExamples:outputExample - Optional - Decimal}\" myBool=\"${4:uiExamples:outputExample - Optional - Boolean}\" myDate=\"${5:uiExamples:outputExample - Optional - Date}\" myDateTime=\"${6:uiExamples:outputExample - Optional - Date}\" myTextArea=\"${7:uiExamples:outputExample - Optional - String}\" myURL=\"${8:uiExamples:outputExample - Optional - String}\">${9:}</uiExamples:outputExample>"
      },
      {
         "trigger": "tag-uiExamples-panelContent\tSimple",
         "contents": "uiExamples:panelContent$1>${2:}</uiExamples:panelContent>"
      },
      {
         "trigger": "tag-uiExamples-panelContent\tFull",
         "contents": "uiExamples:panelContent class=\"${1:uiExamples:panelContent - Optional - String}\">${2:}</uiExamples:panelContent>"
      },
      {
         "trigger": "tag-uiExamples-panelDialogExample\tSimple",
         "contents": "uiExamples:panelDialogExample$1>${2:}</uiExamples:panelDialogExample>"
      },
      {
         "trigger": "tag-uiExamples-panelDialogExample\tFull",
         "contents": "uiExamples:panelDialogExample>${1:}</uiExamples:panelDialogExample>"
      },
      {
         "trigger": "tag-uiExamples-panelFooter\tSimple",
         "contents": "uiExamples:panelFooter$1>${2:}</uiExamples:panelFooter>"
      },
      {
         "trigger": "tag-uiExamples-panelFooter\tFull",
         "contents": "uiExamples:panelFooter>${1:}</uiExamples:panelFooter>"
      },
      {
         "trigger": "tag-uiExamples-panelHeader\tSimple",
         "contents": "uiExamples:panelHeader$1>${2:}</uiExamples:panelHeader>"
      },
      {
         "trigger": "tag-uiExamples-panelHeader\tFull",
         "contents": "uiExamples:panelHeader>${1:}</uiExamples:panelHeader>"
      },
      {
         "trigger": "tag-uiExamples-panelPositioningExample\tSimple",
         "contents": "uiExamples:panelPositioningExample$1>${2:}</uiExamples:panelPositioningExample>"
      },
      {
         "trigger": "tag-uiExamples-panelPositioningExample\tFull",
         "contents": "uiExamples:panelPositioningExample>${1:}</uiExamples:panelPositioningExample>"
      },
      {
         "trigger": "tag-uiExamples-phone\tSimple",
         "contents": "uiExamples:phone$1>${2:}</uiExamples:phone>"
      },
      {
         "trigger": "tag-uiExamples-phone\tFull",
         "contents": "uiExamples:phone>${1:}</uiExamples:phone>"
      },
      {
         "trigger": "tag-uiExamples-popupExample\tSimple",
         "contents": "uiExamples:popupExample$1>${2:}</uiExamples:popupExample>"
      },
      {
         "trigger": "tag-uiExamples-popupExample\tFull",
         "contents": "uiExamples:popupExample>${1:}</uiExamples:popupExample>"
      },
      {
         "trigger": "tag-uiExamples-radio\tSimple",
         "contents": "uiExamples:radio$1>${2:}</uiExamples:radio>"
      },
      {
         "trigger": "tag-uiExamples-radio\tFull",
         "contents": "uiExamples:radio stages=\"${1:uiExamples:radio - Optional - String[]}\">${2:}</uiExamples:radio>"
      },
      {
         "trigger": "tag-uiExamples-renderIfExample\tSimple",
         "contents": "uiExamples:renderIfExample$1>${2:}</uiExamples:renderIfExample>"
      },
      {
         "trigger": "tag-uiExamples-renderIfExample\tFull",
         "contents": "uiExamples:renderIfExample display=\"${1:uiExamples:renderIfExample - Optional - Boolean}\">${2:}</uiExamples:renderIfExample>"
      },
      {
         "trigger": "tag-uiExamples-secret\tSimple",
         "contents": "uiExamples:secret$1>${2:}</uiExamples:secret>"
      },
      {
         "trigger": "tag-uiExamples-secret\tFull",
         "contents": "uiExamples:secret>${1:}</uiExamples:secret>"
      },
      {
         "trigger": "tag-uiExamples-tabsetExample\tSimple",
         "contents": "uiExamples:tabsetExample$1>${2:}</uiExamples:tabsetExample>"
      },
      {
         "trigger": "tag-uiExamples-tabsetExample\tFull",
         "contents": "uiExamples:tabsetExample>${1:}</uiExamples:tabsetExample>"
      },
      {
         "trigger": "tag-uiExamples-text\tSimple",
         "contents": "uiExamples:text$1>${2:}</uiExamples:text>"
      },
      {
         "trigger": "tag-uiExamples-text\tFull",
         "contents": "uiExamples:text>${1:}</uiExamples:text>"
      },
      {
         "trigger": "tag-uiExamples-textarea\tSimple",
         "contents": "uiExamples:textarea$1>${2:}</uiExamples:textarea>"
      },
      {
         "trigger": "tag-uiExamples-textarea\tFull",
         "contents": "uiExamples:textarea>${1:}</uiExamples:textarea>"
      },
      {
         "trigger": "tag-uiExamples-tooltipExample\tSimple",
         "contents": "uiExamples:tooltipExample$1>${2:}</uiExamples:tooltipExample>"
      },
      {
         "trigger": "tag-uiExamples-tooltipExample\tFull",
         "contents": "uiExamples:tooltipExample>${1:}</uiExamples:tooltipExample>"
      },
      {
         "trigger": "tag-uiExamples-url\tSimple",
         "contents": "uiExamples:url$1>${2:}</uiExamples:url>"
      },
      {
         "trigger": "tag-uiExamples-url\tFull",
         "contents": "uiExamples:url>${1:}</uiExamples:url>"
      },
      {
         "trigger": "tag-uiExamples-virtualDataGridKitchenSink\tSimple",
         "contents": "uiExamples:virtualDataGridKitchenSink$1>${2:}</uiExamples:virtualDataGridKitchenSink>"
      },
      {
         "trigger": "tag-uiExamples-virtualDataGridKitchenSink\tFull",
         "contents": "uiExamples:virtualDataGridKitchenSink sortBy=\"${1:uiExamples:virtualDataGridKitchenSink - Optional - String}\" pageSize=\"${2:uiExamples:virtualDataGridKitchenSink - Optional - Integer}\" currentPage=\"${3:uiExamples:virtualDataGridKitchenSink - Optional - Integer}\" totalItems=\"${4:uiExamples:virtualDataGridKitchenSink - Optional - Integer}\" index=\"${5:uiExamples:virtualDataGridKitchenSink - Optional - Integer}\" count=\"${6:uiExamples:virtualDataGridKitchenSink - Optional - Integer}\" className=\"${7:uiExamples:virtualDataGridKitchenSink - Optional - String}\" rowIndex=\"${8:uiExamples:virtualDataGridKitchenSink - Optional - Integer}\" gridItems=\"${9:uiExamples:virtualDataGridKitchenSink - Optional - List}\" gridSelectedItems=\"${10:uiExamples:virtualDataGridKitchenSink - Optional - List}\" provideNoData=\"${11:uiExamples:virtualDataGridKitchenSink - Optional - Boolean}\">${12:}</uiExamples:virtualDataGridKitchenSink>"
      }
   ]
}